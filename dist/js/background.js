/*! For license information please see background.js.LICENSE.txt */
(()=>{var t={710:(t,e,r)=>{t.exports=function t(e,r,n){function i(o,s){if(!r[o]){if(!e[o]){if(a)return a(o,!0);var c=new Error("Cannot find module '"+o+"'");throw c.code="MODULE_NOT_FOUND",c}var u=r[o]={exports:{}};e[o][0].call(u.exports,(function(t){return i(e[o][1][t]||t)}),u,u.exports,t,e,r,n)}return r[o].exports}for(var a=void 0,o=0;o<n.length;o++)i(n[o]);return i}({1:[function(t,e,r){"use strict";var n=t("./utils"),i=t("./support"),a="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=";r.encode=function(t){for(var e,r,i,o,s,c,u,l=[],h=0,f=t.length,d=f,p="string"!==n.getTypeOf(t);h<t.length;)d=f-h,i=p?(e=t[h++],r=h<f?t[h++]:0,h<f?t[h++]:0):(e=t.charCodeAt(h++),r=h<f?t.charCodeAt(h++):0,h<f?t.charCodeAt(h++):0),o=e>>2,s=(3&e)<<4|r>>4,c=1<d?(15&r)<<2|i>>6:64,u=2<d?63&i:64,l.push(a.charAt(o)+a.charAt(s)+a.charAt(c)+a.charAt(u));return l.join("")},r.decode=function(t){var e,r,n,o,s,c,u=0,l=0,h="data:";if(t.substr(0,5)===h)throw new Error("Invalid base64 input, it looks like a data url.");var f,d=3*(t=t.replace(/[^A-Za-z0-9+/=]/g,"")).length/4;if(t.charAt(t.length-1)===a.charAt(64)&&d--,t.charAt(t.length-2)===a.charAt(64)&&d--,d%1!=0)throw new Error("Invalid base64 input, bad content length.");for(f=i.uint8array?new Uint8Array(0|d):new Array(0|d);u<t.length;)e=a.indexOf(t.charAt(u++))<<2|(o=a.indexOf(t.charAt(u++)))>>4,r=(15&o)<<4|(s=a.indexOf(t.charAt(u++)))>>2,n=(3&s)<<6|(c=a.indexOf(t.charAt(u++))),f[l++]=e,64!==s&&(f[l++]=r),64!==c&&(f[l++]=n);return f}},{"./support":30,"./utils":32}],2:[function(t,e,r){"use strict";var n=t("./external"),i=t("./stream/DataWorker"),a=t("./stream/Crc32Probe"),o=t("./stream/DataLengthProbe");function s(t,e,r,n,i){this.compressedSize=t,this.uncompressedSize=e,this.crc32=r,this.compression=n,this.compressedContent=i}s.prototype={getContentWorker:function(){var t=new i(n.Promise.resolve(this.compressedContent)).pipe(this.compression.uncompressWorker()).pipe(new o("data_length")),e=this;return t.on("end",(function(){if(this.streamInfo.data_length!==e.uncompressedSize)throw new Error("Bug : uncompressed data size mismatch")})),t},getCompressedWorker:function(){return new i(n.Promise.resolve(this.compressedContent)).withStreamInfo("compressedSize",this.compressedSize).withStreamInfo("uncompressedSize",this.uncompressedSize).withStreamInfo("crc32",this.crc32).withStreamInfo("compression",this.compression)}},s.createWorkerFrom=function(t,e,r){return t.pipe(new a).pipe(new o("uncompressedSize")).pipe(e.compressWorker(r)).pipe(new o("compressedSize")).withStreamInfo("compression",e)},e.exports=s},{"./external":6,"./stream/Crc32Probe":25,"./stream/DataLengthProbe":26,"./stream/DataWorker":27}],3:[function(t,e,r){"use strict";var n=t("./stream/GenericWorker");r.STORE={magic:"\0\0",compressWorker:function(){return new n("STORE compression")},uncompressWorker:function(){return new n("STORE decompression")}},r.DEFLATE=t("./flate")},{"./flate":7,"./stream/GenericWorker":28}],4:[function(t,e,r){"use strict";var n=t("./utils"),i=function(){for(var t,e=[],r=0;r<256;r++){t=r;for(var n=0;n<8;n++)t=1&t?3988292384^t>>>1:t>>>1;e[r]=t}return e}();e.exports=function(t,e){return void 0!==t&&t.length?"string"!==n.getTypeOf(t)?function(t,e,r){var n=i,a=0+r;t^=-1;for(var o=0;o<a;o++)t=t>>>8^n[255&(t^e[o])];return~t}(0|e,t,t.length):function(t,e,r){var n=i,a=0+r;t^=-1;for(var o=0;o<a;o++)t=t>>>8^n[255&(t^e.charCodeAt(o))];return~t}(0|e,t,t.length):0}},{"./utils":32}],5:[function(t,e,r){"use strict";r.base64=!1,r.binary=!1,r.dir=!1,r.createFolders=!0,r.date=null,r.compression=null,r.compressionOptions=null,r.comment=null,r.unixPermissions=null,r.dosPermissions=null},{}],6:[function(t,e,r){"use strict";var n;n="undefined"!=typeof Promise?Promise:t("lie"),e.exports={Promise:n}},{lie:37}],7:[function(t,e,r){"use strict";var n="undefined"!=typeof Uint8Array&&"undefined"!=typeof Uint16Array&&"undefined"!=typeof Uint32Array,i=t("pako"),a=t("./utils"),o=t("./stream/GenericWorker"),s=n?"uint8array":"array";function c(t,e){o.call(this,"FlateWorker/"+t),this._pako=null,this._pakoAction=t,this._pakoOptions=e,this.meta={}}r.magic="\b\0",a.inherits(c,o),c.prototype.processChunk=function(t){this.meta=t.meta,null===this._pako&&this._createPako(),this._pako.push(a.transformTo(s,t.data),!1)},c.prototype.flush=function(){o.prototype.flush.call(this),null===this._pako&&this._createPako(),this._pako.push([],!0)},c.prototype.cleanUp=function(){o.prototype.cleanUp.call(this),this._pako=null},c.prototype._createPako=function(){this._pako=new i[this._pakoAction]({raw:!0,level:this._pakoOptions.level||-1});var t=this;this._pako.onData=function(e){t.push({data:e,meta:t.meta})}},r.compressWorker=function(t){return new c("Deflate",t)},r.uncompressWorker=function(){return new c("Inflate",{})}},{"./stream/GenericWorker":28,"./utils":32,pako:38}],8:[function(t,e,r){"use strict";function n(t,e){var r,n="";for(r=0;r<e;r++)n+=String.fromCharCode(255&t),t>>>=8;return n}function i(t,e,r,i,o,l){var h,f,d=t.file,p=t.compression,m=l!==s.utf8encode,g=a.transformTo("string",l(d.name)),v=a.transformTo("string",s.utf8encode(d.name)),_=d.comment,y=a.transformTo("string",l(_)),b=a.transformTo("string",s.utf8encode(_)),w=v.length!==d.name.length,k=b.length!==_.length,x="",S="",E="",A=d.dir,z=d.date,O={crc32:0,compressedSize:0,uncompressedSize:0};e&&!r||(O.crc32=t.crc32,O.compressedSize=t.compressedSize,O.uncompressedSize=t.uncompressedSize);var C=0;e&&(C|=8),m||!w&&!k||(C|=2048);var I=0,T=0;A&&(I|=16),"UNIX"===o?(T=798,I|=function(t,e){var r=t;return t||(r=e?16893:33204),(65535&r)<<16}(d.unixPermissions,A)):(T=20,I|=function(t){return 63&(t||0)}(d.dosPermissions)),h=z.getUTCHours(),h<<=6,h|=z.getUTCMinutes(),h<<=5,h|=z.getUTCSeconds()/2,f=z.getUTCFullYear()-1980,f<<=4,f|=z.getUTCMonth()+1,f<<=5,f|=z.getUTCDate(),w&&(S=n(1,1)+n(c(g),4)+v,x+="up"+n(S.length,2)+S),k&&(E=n(1,1)+n(c(y),4)+b,x+="uc"+n(E.length,2)+E);var D="";return D+="\n\0",D+=n(C,2),D+=p.magic,D+=n(h,2),D+=n(f,2),D+=n(O.crc32,4),D+=n(O.compressedSize,4),D+=n(O.uncompressedSize,4),D+=n(g.length,2),D+=n(x.length,2),{fileRecord:u.LOCAL_FILE_HEADER+D+g+x,dirRecord:u.CENTRAL_FILE_HEADER+n(T,2)+D+n(y.length,2)+"\0\0\0\0"+n(I,4)+n(i,4)+g+x+y}}var a=t("../utils"),o=t("../stream/GenericWorker"),s=t("../utf8"),c=t("../crc32"),u=t("../signature");function l(t,e,r,n){o.call(this,"ZipFileWorker"),this.bytesWritten=0,this.zipComment=e,this.zipPlatform=r,this.encodeFileName=n,this.streamFiles=t,this.accumulate=!1,this.contentBuffer=[],this.dirRecords=[],this.currentSourceOffset=0,this.entriesCount=0,this.currentFile=null,this._sources=[]}a.inherits(l,o),l.prototype.push=function(t){var e=t.meta.percent||0,r=this.entriesCount,n=this._sources.length;this.accumulate?this.contentBuffer.push(t):(this.bytesWritten+=t.data.length,o.prototype.push.call(this,{data:t.data,meta:{currentFile:this.currentFile,percent:r?(e+100*(r-n-1))/r:100}}))},l.prototype.openedSource=function(t){this.currentSourceOffset=this.bytesWritten,this.currentFile=t.file.name;var e=this.streamFiles&&!t.file.dir;if(e){var r=i(t,e,!1,this.currentSourceOffset,this.zipPlatform,this.encodeFileName);this.push({data:r.fileRecord,meta:{percent:0}})}else this.accumulate=!0},l.prototype.closedSource=function(t){this.accumulate=!1;var e=this.streamFiles&&!t.file.dir,r=i(t,e,!0,this.currentSourceOffset,this.zipPlatform,this.encodeFileName);if(this.dirRecords.push(r.dirRecord),e)this.push({data:function(t){return u.DATA_DESCRIPTOR+n(t.crc32,4)+n(t.compressedSize,4)+n(t.uncompressedSize,4)}(t),meta:{percent:100}});else for(this.push({data:r.fileRecord,meta:{percent:0}});this.contentBuffer.length;)this.push(this.contentBuffer.shift());this.currentFile=null},l.prototype.flush=function(){for(var t=this.bytesWritten,e=0;e<this.dirRecords.length;e++)this.push({data:this.dirRecords[e],meta:{percent:100}});var r=this.bytesWritten-t,i=function(t,e,r,i,o){var s=a.transformTo("string",o(i));return u.CENTRAL_DIRECTORY_END+"\0\0\0\0"+n(t,2)+n(t,2)+n(e,4)+n(r,4)+n(s.length,2)+s}(this.dirRecords.length,r,t,this.zipComment,this.encodeFileName);this.push({data:i,meta:{percent:100}})},l.prototype.prepareNextSource=function(){this.previous=this._sources.shift(),this.openedSource(this.previous.streamInfo),this.isPaused?this.previous.pause():this.previous.resume()},l.prototype.registerPrevious=function(t){this._sources.push(t);var e=this;return t.on("data",(function(t){e.processChunk(t)})),t.on("end",(function(){e.closedSource(e.previous.streamInfo),e._sources.length?e.prepareNextSource():e.end()})),t.on("error",(function(t){e.error(t)})),this},l.prototype.resume=function(){return!!o.prototype.resume.call(this)&&(!this.previous&&this._sources.length?(this.prepareNextSource(),!0):this.previous||this._sources.length||this.generatedError?void 0:(this.end(),!0))},l.prototype.error=function(t){var e=this._sources;if(!o.prototype.error.call(this,t))return!1;for(var r=0;r<e.length;r++)try{e[r].error(t)}catch(t){}return!0},l.prototype.lock=function(){o.prototype.lock.call(this);for(var t=this._sources,e=0;e<t.length;e++)t[e].lock()},e.exports=l},{"../crc32":4,"../signature":23,"../stream/GenericWorker":28,"../utf8":31,"../utils":32}],9:[function(t,e,r){"use strict";var n=t("../compressions"),i=t("./ZipFileWorker");r.generateWorker=function(t,e,r){var a=new i(e.streamFiles,r,e.platform,e.encodeFileName),o=0;try{t.forEach((function(t,r){o++;var i=function(t,e){var r=t||e,i=n[r];if(!i)throw new Error(r+" is not a valid compression method !");return i}(r.options.compression,e.compression),s=r.options.compressionOptions||e.compressionOptions||{},c=r.dir,u=r.date;r._compressWorker(i,s).withStreamInfo("file",{name:t,dir:c,date:u,comment:r.comment||"",unixPermissions:r.unixPermissions,dosPermissions:r.dosPermissions}).pipe(a)})),a.entriesCount=o}catch(t){a.error(t)}return a}},{"../compressions":3,"./ZipFileWorker":8}],10:[function(t,e,r){"use strict";function n(){if(!(this instanceof n))return new n;if(arguments.length)throw new Error("The constructor with parameters has been removed in JSZip 3.0, please check the upgrade guide.");this.files=Object.create(null),this.comment=null,this.root="",this.clone=function(){var t=new n;for(var e in this)"function"!=typeof this[e]&&(t[e]=this[e]);return t}}(n.prototype=t("./object")).loadAsync=t("./load"),n.support=t("./support"),n.defaults=t("./defaults"),n.version="3.10.1",n.loadAsync=function(t,e){return(new n).loadAsync(t,e)},n.external=t("./external"),e.exports=n},{"./defaults":5,"./external":6,"./load":11,"./object":15,"./support":30}],11:[function(t,e,r){"use strict";var n=t("./utils"),i=t("./external"),a=t("./utf8"),o=t("./zipEntries"),s=t("./stream/Crc32Probe"),c=t("./nodejsUtils");function u(t){return new i.Promise((function(e,r){var n=t.decompressed.getContentWorker().pipe(new s);n.on("error",(function(t){r(t)})).on("end",(function(){n.streamInfo.crc32!==t.decompressed.crc32?r(new Error("Corrupted zip : CRC32 mismatch")):e()})).resume()}))}e.exports=function(t,e){var r=this;return e=n.extend(e||{},{base64:!1,checkCRC32:!1,optimizedBinaryString:!1,createFolders:!1,decodeFileName:a.utf8decode}),c.isNode&&c.isStream(t)?i.Promise.reject(new Error("JSZip can't accept a stream when loading a zip file.")):n.prepareContent("the loaded zip file",t,!0,e.optimizedBinaryString,e.base64).then((function(t){var r=new o(e);return r.load(t),r})).then((function(t){var r=[i.Promise.resolve(t)],n=t.files;if(e.checkCRC32)for(var a=0;a<n.length;a++)r.push(u(n[a]));return i.Promise.all(r)})).then((function(t){for(var i=t.shift(),a=i.files,o=0;o<a.length;o++){var s=a[o],c=s.fileNameStr,u=n.resolve(s.fileNameStr);r.file(u,s.decompressed,{binary:!0,optimizedBinaryString:!0,date:s.date,dir:s.dir,comment:s.fileCommentStr.length?s.fileCommentStr:null,unixPermissions:s.unixPermissions,dosPermissions:s.dosPermissions,createFolders:e.createFolders}),s.dir||(r.file(u).unsafeOriginalName=c)}return i.zipComment.length&&(r.comment=i.zipComment),r}))}},{"./external":6,"./nodejsUtils":14,"./stream/Crc32Probe":25,"./utf8":31,"./utils":32,"./zipEntries":33}],12:[function(t,e,r){"use strict";var n=t("../utils"),i=t("../stream/GenericWorker");function a(t,e){i.call(this,"Nodejs stream input adapter for "+t),this._upstreamEnded=!1,this._bindStream(e)}n.inherits(a,i),a.prototype._bindStream=function(t){var e=this;(this._stream=t).pause(),t.on("data",(function(t){e.push({data:t,meta:{percent:0}})})).on("error",(function(t){e.isPaused?this.generatedError=t:e.error(t)})).on("end",(function(){e.isPaused?e._upstreamEnded=!0:e.end()}))},a.prototype.pause=function(){return!!i.prototype.pause.call(this)&&(this._stream.pause(),!0)},a.prototype.resume=function(){return!!i.prototype.resume.call(this)&&(this._upstreamEnded?this.end():this._stream.resume(),!0)},e.exports=a},{"../stream/GenericWorker":28,"../utils":32}],13:[function(t,e,r){"use strict";var n=t("readable-stream").Readable;function i(t,e,r){n.call(this,e),this._helper=t;var i=this;t.on("data",(function(t,e){i.push(t)||i._helper.pause(),r&&r(e)})).on("error",(function(t){i.emit("error",t)})).on("end",(function(){i.push(null)}))}t("../utils").inherits(i,n),i.prototype._read=function(){this._helper.resume()},e.exports=i},{"../utils":32,"readable-stream":16}],14:[function(t,e,r){"use strict";e.exports={isNode:"undefined"!=typeof Buffer,newBufferFrom:function(t,e){if(Buffer.from&&Buffer.from!==Uint8Array.from)return Buffer.from(t,e);if("number"==typeof t)throw new Error('The "data" argument must not be a number');return new Buffer(t,e)},allocBuffer:function(t){if(Buffer.alloc)return Buffer.alloc(t);var e=new Buffer(t);return e.fill(0),e},isBuffer:function(t){return Buffer.isBuffer(t)},isStream:function(t){return t&&"function"==typeof t.on&&"function"==typeof t.pause&&"function"==typeof t.resume}}},{}],15:[function(t,e,r){"use strict";function n(t,e,r){var n,i=a.getTypeOf(e),s=a.extend(r||{},c);s.date=s.date||new Date,null!==s.compression&&(s.compression=s.compression.toUpperCase()),"string"==typeof s.unixPermissions&&(s.unixPermissions=parseInt(s.unixPermissions,8)),s.unixPermissions&&16384&s.unixPermissions&&(s.dir=!0),s.dosPermissions&&16&s.dosPermissions&&(s.dir=!0),s.dir&&(t=m(t)),s.createFolders&&(n=p(t))&&g.call(this,n,!0);var h="string"===i&&!1===s.binary&&!1===s.base64;r&&void 0!==r.binary||(s.binary=!h),(e instanceof u&&0===e.uncompressedSize||s.dir||!e||0===e.length)&&(s.base64=!1,s.binary=!0,e="",s.compression="STORE",i="string");var v;v=e instanceof u||e instanceof o?e:f.isNode&&f.isStream(e)?new d(t,e):a.prepareContent(t,e,s.binary,s.optimizedBinaryString,s.base64);var _=new l(t,v,s);this.files[t]=_}var i=t("./utf8"),a=t("./utils"),o=t("./stream/GenericWorker"),s=t("./stream/StreamHelper"),c=t("./defaults"),u=t("./compressedObject"),l=t("./zipObject"),h=t("./generate"),f=t("./nodejsUtils"),d=t("./nodejs/NodejsStreamInputAdapter"),p=function(t){"/"===t.slice(-1)&&(t=t.substring(0,t.length-1));var e=t.lastIndexOf("/");return 0<e?t.substring(0,e):""},m=function(t){return"/"!==t.slice(-1)&&(t+="/"),t},g=function(t,e){return e=void 0!==e?e:c.createFolders,t=m(t),this.files[t]||n.call(this,t,null,{dir:!0,createFolders:e}),this.files[t]};function v(t){return"[object RegExp]"===Object.prototype.toString.call(t)}var _={load:function(){throw new Error("This method has been removed in JSZip 3.0, please check the upgrade guide.")},forEach:function(t){var e,r,n;for(e in this.files)n=this.files[e],(r=e.slice(this.root.length,e.length))&&e.slice(0,this.root.length)===this.root&&t(r,n)},filter:function(t){var e=[];return this.forEach((function(r,n){t(r,n)&&e.push(n)})),e},file:function(t,e,r){if(1!==arguments.length)return t=this.root+t,n.call(this,t,e,r),this;if(v(t)){var i=t;return this.filter((function(t,e){return!e.dir&&i.test(t)}))}var a=this.files[this.root+t];return a&&!a.dir?a:null},folder:function(t){if(!t)return this;if(v(t))return this.filter((function(e,r){return r.dir&&t.test(e)}));var e=this.root+t,r=g.call(this,e),n=this.clone();return n.root=r.name,n},remove:function(t){t=this.root+t;var e=this.files[t];if(e||("/"!==t.slice(-1)&&(t+="/"),e=this.files[t]),e&&!e.dir)delete this.files[t];else for(var r=this.filter((function(e,r){return r.name.slice(0,t.length)===t})),n=0;n<r.length;n++)delete this.files[r[n].name];return this},generate:function(){throw new Error("This method has been removed in JSZip 3.0, please check the upgrade guide.")},generateInternalStream:function(t){var e,r={};try{if((r=a.extend(t||{},{streamFiles:!1,compression:"STORE",compressionOptions:null,type:"",platform:"DOS",comment:null,mimeType:"application/zip",encodeFileName:i.utf8encode})).type=r.type.toLowerCase(),r.compression=r.compression.toUpperCase(),"binarystring"===r.type&&(r.type="string"),!r.type)throw new Error("No output type specified.");a.checkSupport(r.type),"darwin"!==r.platform&&"freebsd"!==r.platform&&"linux"!==r.platform&&"sunos"!==r.platform||(r.platform="UNIX"),"win32"===r.platform&&(r.platform="DOS");var n=r.comment||this.comment||"";e=h.generateWorker(this,r,n)}catch(t){(e=new o("error")).error(t)}return new s(e,r.type||"string",r.mimeType)},generateAsync:function(t,e){return this.generateInternalStream(t).accumulate(e)},generateNodeStream:function(t,e){return(t=t||{}).type||(t.type="nodebuffer"),this.generateInternalStream(t).toNodejsStream(e)}};e.exports=_},{"./compressedObject":2,"./defaults":5,"./generate":9,"./nodejs/NodejsStreamInputAdapter":12,"./nodejsUtils":14,"./stream/GenericWorker":28,"./stream/StreamHelper":29,"./utf8":31,"./utils":32,"./zipObject":35}],16:[function(t,e,r){"use strict";e.exports=t("stream")},{stream:void 0}],17:[function(t,e,r){"use strict";var n=t("./DataReader");function i(t){n.call(this,t);for(var e=0;e<this.data.length;e++)t[e]=255&t[e]}t("../utils").inherits(i,n),i.prototype.byteAt=function(t){return this.data[this.zero+t]},i.prototype.lastIndexOfSignature=function(t){for(var e=t.charCodeAt(0),r=t.charCodeAt(1),n=t.charCodeAt(2),i=t.charCodeAt(3),a=this.length-4;0<=a;--a)if(this.data[a]===e&&this.data[a+1]===r&&this.data[a+2]===n&&this.data[a+3]===i)return a-this.zero;return-1},i.prototype.readAndCheckSignature=function(t){var e=t.charCodeAt(0),r=t.charCodeAt(1),n=t.charCodeAt(2),i=t.charCodeAt(3),a=this.readData(4);return e===a[0]&&r===a[1]&&n===a[2]&&i===a[3]},i.prototype.readData=function(t){if(this.checkOffset(t),0===t)return[];var e=this.data.slice(this.zero+this.index,this.zero+this.index+t);return this.index+=t,e},e.exports=i},{"../utils":32,"./DataReader":18}],18:[function(t,e,r){"use strict";var n=t("../utils");function i(t){this.data=t,this.length=t.length,this.index=0,this.zero=0}i.prototype={checkOffset:function(t){this.checkIndex(this.index+t)},checkIndex:function(t){if(this.length<this.zero+t||t<0)throw new Error("End of data reached (data length = "+this.length+", asked index = "+t+"). Corrupted zip ?")},setIndex:function(t){this.checkIndex(t),this.index=t},skip:function(t){this.setIndex(this.index+t)},byteAt:function(){},readInt:function(t){var e,r=0;for(this.checkOffset(t),e=this.index+t-1;e>=this.index;e--)r=(r<<8)+this.byteAt(e);return this.index+=t,r},readString:function(t){return n.transformTo("string",this.readData(t))},readData:function(){},lastIndexOfSignature:function(){},readAndCheckSignature:function(){},readDate:function(){var t=this.readInt(4);return new Date(Date.UTC(1980+(t>>25&127),(t>>21&15)-1,t>>16&31,t>>11&31,t>>5&63,(31&t)<<1))}},e.exports=i},{"../utils":32}],19:[function(t,e,r){"use strict";var n=t("./Uint8ArrayReader");function i(t){n.call(this,t)}t("../utils").inherits(i,n),i.prototype.readData=function(t){this.checkOffset(t);var e=this.data.slice(this.zero+this.index,this.zero+this.index+t);return this.index+=t,e},e.exports=i},{"../utils":32,"./Uint8ArrayReader":21}],20:[function(t,e,r){"use strict";var n=t("./DataReader");function i(t){n.call(this,t)}t("../utils").inherits(i,n),i.prototype.byteAt=function(t){return this.data.charCodeAt(this.zero+t)},i.prototype.lastIndexOfSignature=function(t){return this.data.lastIndexOf(t)-this.zero},i.prototype.readAndCheckSignature=function(t){return t===this.readData(4)},i.prototype.readData=function(t){this.checkOffset(t);var e=this.data.slice(this.zero+this.index,this.zero+this.index+t);return this.index+=t,e},e.exports=i},{"../utils":32,"./DataReader":18}],21:[function(t,e,r){"use strict";var n=t("./ArrayReader");function i(t){n.call(this,t)}t("../utils").inherits(i,n),i.prototype.readData=function(t){if(this.checkOffset(t),0===t)return new Uint8Array(0);var e=this.data.subarray(this.zero+this.index,this.zero+this.index+t);return this.index+=t,e},e.exports=i},{"../utils":32,"./ArrayReader":17}],22:[function(t,e,r){"use strict";var n=t("../utils"),i=t("../support"),a=t("./ArrayReader"),o=t("./StringReader"),s=t("./NodeBufferReader"),c=t("./Uint8ArrayReader");e.exports=function(t){var e=n.getTypeOf(t);return n.checkSupport(e),"string"!==e||i.uint8array?"nodebuffer"===e?new s(t):i.uint8array?new c(n.transformTo("uint8array",t)):new a(n.transformTo("array",t)):new o(t)}},{"../support":30,"../utils":32,"./ArrayReader":17,"./NodeBufferReader":19,"./StringReader":20,"./Uint8ArrayReader":21}],23:[function(t,e,r){"use strict";r.LOCAL_FILE_HEADER="PK",r.CENTRAL_FILE_HEADER="PK",r.CENTRAL_DIRECTORY_END="PK",r.ZIP64_CENTRAL_DIRECTORY_LOCATOR="PK",r.ZIP64_CENTRAL_DIRECTORY_END="PK",r.DATA_DESCRIPTOR="PK\b"},{}],24:[function(t,e,r){"use strict";var n=t("./GenericWorker"),i=t("../utils");function a(t){n.call(this,"ConvertWorker to "+t),this.destType=t}i.inherits(a,n),a.prototype.processChunk=function(t){this.push({data:i.transformTo(this.destType,t.data),meta:t.meta})},e.exports=a},{"../utils":32,"./GenericWorker":28}],25:[function(t,e,r){"use strict";var n=t("./GenericWorker"),i=t("../crc32");function a(){n.call(this,"Crc32Probe"),this.withStreamInfo("crc32",0)}t("../utils").inherits(a,n),a.prototype.processChunk=function(t){this.streamInfo.crc32=i(t.data,this.streamInfo.crc32||0),this.push(t)},e.exports=a},{"../crc32":4,"../utils":32,"./GenericWorker":28}],26:[function(t,e,r){"use strict";var n=t("../utils"),i=t("./GenericWorker");function a(t){i.call(this,"DataLengthProbe for "+t),this.propName=t,this.withStreamInfo(t,0)}n.inherits(a,i),a.prototype.processChunk=function(t){if(t){var e=this.streamInfo[this.propName]||0;this.streamInfo[this.propName]=e+t.data.length}i.prototype.processChunk.call(this,t)},e.exports=a},{"../utils":32,"./GenericWorker":28}],27:[function(t,e,r){"use strict";var n=t("../utils"),i=t("./GenericWorker");function a(t){i.call(this,"DataWorker");var e=this;this.dataIsReady=!1,this.index=0,this.max=0,this.data=null,this.type="",this._tickScheduled=!1,t.then((function(t){e.dataIsReady=!0,e.data=t,e.max=t&&t.length||0,e.type=n.getTypeOf(t),e.isPaused||e._tickAndRepeat()}),(function(t){e.error(t)}))}n.inherits(a,i),a.prototype.cleanUp=function(){i.prototype.cleanUp.call(this),this.data=null},a.prototype.resume=function(){return!!i.prototype.resume.call(this)&&(!this._tickScheduled&&this.dataIsReady&&(this._tickScheduled=!0,n.delay(this._tickAndRepeat,[],this)),!0)},a.prototype._tickAndRepeat=function(){this._tickScheduled=!1,this.isPaused||this.isFinished||(this._tick(),this.isFinished||(n.delay(this._tickAndRepeat,[],this),this._tickScheduled=!0))},a.prototype._tick=function(){if(this.isPaused||this.isFinished)return!1;var t=null,e=Math.min(this.max,this.index+16384);if(this.index>=this.max)return this.end();switch(this.type){case"string":t=this.data.substring(this.index,e);break;case"uint8array":t=this.data.subarray(this.index,e);break;case"array":case"nodebuffer":t=this.data.slice(this.index,e)}return this.index=e,this.push({data:t,meta:{percent:this.max?this.index/this.max*100:0}})},e.exports=a},{"../utils":32,"./GenericWorker":28}],28:[function(t,e,r){"use strict";function n(t){this.name=t||"default",this.streamInfo={},this.generatedError=null,this.extraStreamInfo={},this.isPaused=!0,this.isFinished=!1,this.isLocked=!1,this._listeners={data:[],end:[],error:[]},this.previous=null}n.prototype={push:function(t){this.emit("data",t)},end:function(){if(this.isFinished)return!1;this.flush();try{this.emit("end"),this.cleanUp(),this.isFinished=!0}catch(t){this.emit("error",t)}return!0},error:function(t){return!this.isFinished&&(this.isPaused?this.generatedError=t:(this.isFinished=!0,this.emit("error",t),this.previous&&this.previous.error(t),this.cleanUp()),!0)},on:function(t,e){return this._listeners[t].push(e),this},cleanUp:function(){this.streamInfo=this.generatedError=this.extraStreamInfo=null,this._listeners=[]},emit:function(t,e){if(this._listeners[t])for(var r=0;r<this._listeners[t].length;r++)this._listeners[t][r].call(this,e)},pipe:function(t){return t.registerPrevious(this)},registerPrevious:function(t){if(this.isLocked)throw new Error("The stream '"+this+"' has already been used.");this.streamInfo=t.streamInfo,this.mergeStreamInfo(),this.previous=t;var e=this;return t.on("data",(function(t){e.processChunk(t)})),t.on("end",(function(){e.end()})),t.on("error",(function(t){e.error(t)})),this},pause:function(){return!this.isPaused&&!this.isFinished&&(this.isPaused=!0,this.previous&&this.previous.pause(),!0)},resume:function(){if(!this.isPaused||this.isFinished)return!1;var t=this.isPaused=!1;return this.generatedError&&(this.error(this.generatedError),t=!0),this.previous&&this.previous.resume(),!t},flush:function(){},processChunk:function(t){this.push(t)},withStreamInfo:function(t,e){return this.extraStreamInfo[t]=e,this.mergeStreamInfo(),this},mergeStreamInfo:function(){for(var t in this.extraStreamInfo)Object.prototype.hasOwnProperty.call(this.extraStreamInfo,t)&&(this.streamInfo[t]=this.extraStreamInfo[t])},lock:function(){if(this.isLocked)throw new Error("The stream '"+this+"' has already been used.");this.isLocked=!0,this.previous&&this.previous.lock()},toString:function(){var t="Worker "+this.name;return this.previous?this.previous+" -> "+t:t}},e.exports=n},{}],29:[function(t,e,r){"use strict";var n=t("../utils"),i=t("./ConvertWorker"),a=t("./GenericWorker"),o=t("../base64"),s=t("../support"),c=t("../external"),u=null;if(s.nodestream)try{u=t("../nodejs/NodejsStreamOutputAdapter")}catch(t){}function l(t,e,r){var o=e;switch(e){case"blob":case"arraybuffer":o="uint8array";break;case"base64":o="string"}try{this._internalType=o,this._outputType=e,this._mimeType=r,n.checkSupport(o),this._worker=t.pipe(new i(o)),t.lock()}catch(t){this._worker=new a("error"),this._worker.error(t)}}l.prototype={accumulate:function(t){return function(t,e){return new c.Promise((function(r,i){var a=[],s=t._internalType,c=t._outputType,u=t._mimeType;t.on("data",(function(t,r){a.push(t),e&&e(r)})).on("error",(function(t){a=[],i(t)})).on("end",(function(){try{var t=function(t,e,r){switch(t){case"blob":return n.newBlob(n.transformTo("arraybuffer",e),r);case"base64":return o.encode(e);default:return n.transformTo(t,e)}}(c,function(t,e){var r,n=0,i=null,a=0;for(r=0;r<e.length;r++)a+=e[r].length;switch(t){case"string":return e.join("");case"array":return Array.prototype.concat.apply([],e);case"uint8array":for(i=new Uint8Array(a),r=0;r<e.length;r++)i.set(e[r],n),n+=e[r].length;return i;case"nodebuffer":return Buffer.concat(e);default:throw new Error("concat : unsupported type '"+t+"'")}}(s,a),u);r(t)}catch(t){i(t)}a=[]})).resume()}))}(this,t)},on:function(t,e){var r=this;return"data"===t?this._worker.on(t,(function(t){e.call(r,t.data,t.meta)})):this._worker.on(t,(function(){n.delay(e,arguments,r)})),this},resume:function(){return n.delay(this._worker.resume,[],this._worker),this},pause:function(){return this._worker.pause(),this},toNodejsStream:function(t){if(n.checkSupport("nodestream"),"nodebuffer"!==this._outputType)throw new Error(this._outputType+" is not supported by this method");return new u(this,{objectMode:"nodebuffer"!==this._outputType},t)}},e.exports=l},{"../base64":1,"../external":6,"../nodejs/NodejsStreamOutputAdapter":13,"../support":30,"../utils":32,"./ConvertWorker":24,"./GenericWorker":28}],30:[function(t,e,r){"use strict";if(r.base64=!0,r.array=!0,r.string=!0,r.arraybuffer="undefined"!=typeof ArrayBuffer&&"undefined"!=typeof Uint8Array,r.nodebuffer="undefined"!=typeof Buffer,r.uint8array="undefined"!=typeof Uint8Array,"undefined"==typeof ArrayBuffer)r.blob=!1;else{var n=new ArrayBuffer(0);try{r.blob=0===new Blob([n],{type:"application/zip"}).size}catch(t){try{var i=new(self.BlobBuilder||self.WebKitBlobBuilder||self.MozBlobBuilder||self.MSBlobBuilder);i.append(n),r.blob=0===i.getBlob("application/zip").size}catch(t){r.blob=!1}}}try{r.nodestream=!!t("readable-stream").Readable}catch(t){r.nodestream=!1}},{"readable-stream":16}],31:[function(t,e,r){"use strict";for(var n=t("./utils"),i=t("./support"),a=t("./nodejsUtils"),o=t("./stream/GenericWorker"),s=new Array(256),c=0;c<256;c++)s[c]=252<=c?6:248<=c?5:240<=c?4:224<=c?3:192<=c?2:1;function u(){o.call(this,"utf-8 decode"),this.leftOver=null}function l(){o.call(this,"utf-8 encode")}s[254]=s[254]=1,r.utf8encode=function(t){return i.nodebuffer?a.newBufferFrom(t,"utf-8"):function(t){var e,r,n,a,o,s=t.length,c=0;for(a=0;a<s;a++)55296==(64512&(r=t.charCodeAt(a)))&&a+1<s&&56320==(64512&(n=t.charCodeAt(a+1)))&&(r=65536+(r-55296<<10)+(n-56320),a++),c+=r<128?1:r<2048?2:r<65536?3:4;for(e=i.uint8array?new Uint8Array(c):new Array(c),a=o=0;o<c;a++)55296==(64512&(r=t.charCodeAt(a)))&&a+1<s&&56320==(64512&(n=t.charCodeAt(a+1)))&&(r=65536+(r-55296<<10)+(n-56320),a++),r<128?e[o++]=r:(r<2048?e[o++]=192|r>>>6:(r<65536?e[o++]=224|r>>>12:(e[o++]=240|r>>>18,e[o++]=128|r>>>12&63),e[o++]=128|r>>>6&63),e[o++]=128|63&r);return e}(t)},r.utf8decode=function(t){return i.nodebuffer?n.transformTo("nodebuffer",t).toString("utf-8"):function(t){var e,r,i,a,o=t.length,c=new Array(2*o);for(e=r=0;e<o;)if((i=t[e++])<128)c[r++]=i;else if(4<(a=s[i]))c[r++]=65533,e+=a-1;else{for(i&=2===a?31:3===a?15:7;1<a&&e<o;)i=i<<6|63&t[e++],a--;1<a?c[r++]=65533:i<65536?c[r++]=i:(i-=65536,c[r++]=55296|i>>10&1023,c[r++]=56320|1023&i)}return c.length!==r&&(c.subarray?c=c.subarray(0,r):c.length=r),n.applyFromCharCode(c)}(t=n.transformTo(i.uint8array?"uint8array":"array",t))},n.inherits(u,o),u.prototype.processChunk=function(t){var e=n.transformTo(i.uint8array?"uint8array":"array",t.data);if(this.leftOver&&this.leftOver.length){if(i.uint8array){var a=e;(e=new Uint8Array(a.length+this.leftOver.length)).set(this.leftOver,0),e.set(a,this.leftOver.length)}else e=this.leftOver.concat(e);this.leftOver=null}var o=function(t,e){var r;for((e=e||t.length)>t.length&&(e=t.length),r=e-1;0<=r&&128==(192&t[r]);)r--;return r<0||0===r?e:r+s[t[r]]>e?r:e}(e),c=e;o!==e.length&&(i.uint8array?(c=e.subarray(0,o),this.leftOver=e.subarray(o,e.length)):(c=e.slice(0,o),this.leftOver=e.slice(o,e.length))),this.push({data:r.utf8decode(c),meta:t.meta})},u.prototype.flush=function(){this.leftOver&&this.leftOver.length&&(this.push({data:r.utf8decode(this.leftOver),meta:{}}),this.leftOver=null)},r.Utf8DecodeWorker=u,n.inherits(l,o),l.prototype.processChunk=function(t){this.push({data:r.utf8encode(t.data),meta:t.meta})},r.Utf8EncodeWorker=l},{"./nodejsUtils":14,"./stream/GenericWorker":28,"./support":30,"./utils":32}],32:[function(t,e,r){"use strict";var n=t("./support"),i=t("./base64"),a=t("./nodejsUtils"),o=t("./external");function s(t){return t}function c(t,e){for(var r=0;r<t.length;++r)e[r]=255&t.charCodeAt(r);return e}t("setimmediate"),r.newBlob=function(t,e){r.checkSupport("blob");try{return new Blob([t],{type:e})}catch(r){try{var n=new(self.BlobBuilder||self.WebKitBlobBuilder||self.MozBlobBuilder||self.MSBlobBuilder);return n.append(t),n.getBlob(e)}catch(t){throw new Error("Bug : can't construct the Blob.")}}};var u={stringifyByChunk:function(t,e,r){var n=[],i=0,a=t.length;if(a<=r)return String.fromCharCode.apply(null,t);for(;i<a;)"array"===e||"nodebuffer"===e?n.push(String.fromCharCode.apply(null,t.slice(i,Math.min(i+r,a)))):n.push(String.fromCharCode.apply(null,t.subarray(i,Math.min(i+r,a)))),i+=r;return n.join("")},stringifyByChar:function(t){for(var e="",r=0;r<t.length;r++)e+=String.fromCharCode(t[r]);return e},applyCanBeUsed:{uint8array:function(){try{return n.uint8array&&1===String.fromCharCode.apply(null,new Uint8Array(1)).length}catch(t){return!1}}(),nodebuffer:function(){try{return n.nodebuffer&&1===String.fromCharCode.apply(null,a.allocBuffer(1)).length}catch(t){return!1}}()}};function l(t){var e=65536,n=r.getTypeOf(t),i=!0;if("uint8array"===n?i=u.applyCanBeUsed.uint8array:"nodebuffer"===n&&(i=u.applyCanBeUsed.nodebuffer),i)for(;1<e;)try{return u.stringifyByChunk(t,n,e)}catch(t){e=Math.floor(e/2)}return u.stringifyByChar(t)}function h(t,e){for(var r=0;r<t.length;r++)e[r]=t[r];return e}r.applyFromCharCode=l;var f={};f.string={string:s,array:function(t){return c(t,new Array(t.length))},arraybuffer:function(t){return f.string.uint8array(t).buffer},uint8array:function(t){return c(t,new Uint8Array(t.length))},nodebuffer:function(t){return c(t,a.allocBuffer(t.length))}},f.array={string:l,array:s,arraybuffer:function(t){return new Uint8Array(t).buffer},uint8array:function(t){return new Uint8Array(t)},nodebuffer:function(t){return a.newBufferFrom(t)}},f.arraybuffer={string:function(t){return l(new Uint8Array(t))},array:function(t){return h(new Uint8Array(t),new Array(t.byteLength))},arraybuffer:s,uint8array:function(t){return new Uint8Array(t)},nodebuffer:function(t){return a.newBufferFrom(new Uint8Array(t))}},f.uint8array={string:l,array:function(t){return h(t,new Array(t.length))},arraybuffer:function(t){return t.buffer},uint8array:s,nodebuffer:function(t){return a.newBufferFrom(t)}},f.nodebuffer={string:l,array:function(t){return h(t,new Array(t.length))},arraybuffer:function(t){return f.nodebuffer.uint8array(t).buffer},uint8array:function(t){return h(t,new Uint8Array(t.length))},nodebuffer:s},r.transformTo=function(t,e){if(e=e||"",!t)return e;r.checkSupport(t);var n=r.getTypeOf(e);return f[n][t](e)},r.resolve=function(t){for(var e=t.split("/"),r=[],n=0;n<e.length;n++){var i=e[n];"."===i||""===i&&0!==n&&n!==e.length-1||(".."===i?r.pop():r.push(i))}return r.join("/")},r.getTypeOf=function(t){return"string"==typeof t?"string":"[object Array]"===Object.prototype.toString.call(t)?"array":n.nodebuffer&&a.isBuffer(t)?"nodebuffer":n.uint8array&&t instanceof Uint8Array?"uint8array":n.arraybuffer&&t instanceof ArrayBuffer?"arraybuffer":void 0},r.checkSupport=function(t){if(!n[t.toLowerCase()])throw new Error(t+" is not supported by this platform")},r.MAX_VALUE_16BITS=65535,r.MAX_VALUE_32BITS=-1,r.pretty=function(t){var e,r,n="";for(r=0;r<(t||"").length;r++)n+="\\x"+((e=t.charCodeAt(r))<16?"0":"")+e.toString(16).toUpperCase();return n},r.delay=function(t,e,r){setImmediate((function(){t.apply(r||null,e||[])}))},r.inherits=function(t,e){function r(){}r.prototype=e.prototype,t.prototype=new r},r.extend=function(){var t,e,r={};for(t=0;t<arguments.length;t++)for(e in arguments[t])Object.prototype.hasOwnProperty.call(arguments[t],e)&&void 0===r[e]&&(r[e]=arguments[t][e]);return r},r.prepareContent=function(t,e,a,s,u){return o.Promise.resolve(e).then((function(t){return n.blob&&(t instanceof Blob||-1!==["[object File]","[object Blob]"].indexOf(Object.prototype.toString.call(t)))&&"undefined"!=typeof FileReader?new o.Promise((function(e,r){var n=new FileReader;n.onload=function(t){e(t.target.result)},n.onerror=function(t){r(t.target.error)},n.readAsArrayBuffer(t)})):t})).then((function(e){var l=r.getTypeOf(e);return l?("arraybuffer"===l?e=r.transformTo("uint8array",e):"string"===l&&(u?e=i.decode(e):a&&!0!==s&&(e=function(t){return c(t,n.uint8array?new Uint8Array(t.length):new Array(t.length))}(e))),e):o.Promise.reject(new Error("Can't read the data of '"+t+"'. Is it in a supported JavaScript type (String, Blob, ArrayBuffer, etc) ?"))}))}},{"./base64":1,"./external":6,"./nodejsUtils":14,"./support":30,setimmediate:54}],33:[function(t,e,r){"use strict";var n=t("./reader/readerFor"),i=t("./utils"),a=t("./signature"),o=t("./zipEntry"),s=t("./support");function c(t){this.files=[],this.loadOptions=t}c.prototype={checkSignature:function(t){if(!this.reader.readAndCheckSignature(t)){this.reader.index-=4;var e=this.reader.readString(4);throw new Error("Corrupted zip or bug: unexpected signature ("+i.pretty(e)+", expected "+i.pretty(t)+")")}},isSignature:function(t,e){var r=this.reader.index;this.reader.setIndex(t);var n=this.reader.readString(4)===e;return this.reader.setIndex(r),n},readBlockEndOfCentral:function(){this.diskNumber=this.reader.readInt(2),this.diskWithCentralDirStart=this.reader.readInt(2),this.centralDirRecordsOnThisDisk=this.reader.readInt(2),this.centralDirRecords=this.reader.readInt(2),this.centralDirSize=this.reader.readInt(4),this.centralDirOffset=this.reader.readInt(4),this.zipCommentLength=this.reader.readInt(2);var t=this.reader.readData(this.zipCommentLength),e=s.uint8array?"uint8array":"array",r=i.transformTo(e,t);this.zipComment=this.loadOptions.decodeFileName(r)},readBlockZip64EndOfCentral:function(){this.zip64EndOfCentralSize=this.reader.readInt(8),this.reader.skip(4),this.diskNumber=this.reader.readInt(4),this.diskWithCentralDirStart=this.reader.readInt(4),this.centralDirRecordsOnThisDisk=this.reader.readInt(8),this.centralDirRecords=this.reader.readInt(8),this.centralDirSize=this.reader.readInt(8),this.centralDirOffset=this.reader.readInt(8),this.zip64ExtensibleData={};for(var t,e,r,n=this.zip64EndOfCentralSize-44;0<n;)t=this.reader.readInt(2),e=this.reader.readInt(4),r=this.reader.readData(e),this.zip64ExtensibleData[t]={id:t,length:e,value:r}},readBlockZip64EndOfCentralLocator:function(){if(this.diskWithZip64CentralDirStart=this.reader.readInt(4),this.relativeOffsetEndOfZip64CentralDir=this.reader.readInt(8),this.disksCount=this.reader.readInt(4),1<this.disksCount)throw new Error("Multi-volumes zip are not supported")},readLocalFiles:function(){var t,e;for(t=0;t<this.files.length;t++)e=this.files[t],this.reader.setIndex(e.localHeaderOffset),this.checkSignature(a.LOCAL_FILE_HEADER),e.readLocalPart(this.reader),e.handleUTF8(),e.processAttributes()},readCentralDir:function(){var t;for(this.reader.setIndex(this.centralDirOffset);this.reader.readAndCheckSignature(a.CENTRAL_FILE_HEADER);)(t=new o({zip64:this.zip64},this.loadOptions)).readCentralPart(this.reader),this.files.push(t);if(this.centralDirRecords!==this.files.length&&0!==this.centralDirRecords&&0===this.files.length)throw new Error("Corrupted zip or bug: expected "+this.centralDirRecords+" records in central dir, got "+this.files.length)},readEndOfCentral:function(){var t=this.reader.lastIndexOfSignature(a.CENTRAL_DIRECTORY_END);if(t<0)throw this.isSignature(0,a.LOCAL_FILE_HEADER)?new Error("Corrupted zip: can't find end of central directory"):new Error("Can't find end of central directory : is this a zip file ? If it is, see https://stuk.github.io/jszip/documentation/howto/read_zip.html");this.reader.setIndex(t);var e=t;if(this.checkSignature(a.CENTRAL_DIRECTORY_END),this.readBlockEndOfCentral(),this.diskNumber===i.MAX_VALUE_16BITS||this.diskWithCentralDirStart===i.MAX_VALUE_16BITS||this.centralDirRecordsOnThisDisk===i.MAX_VALUE_16BITS||this.centralDirRecords===i.MAX_VALUE_16BITS||this.centralDirSize===i.MAX_VALUE_32BITS||this.centralDirOffset===i.MAX_VALUE_32BITS){if(this.zip64=!0,(t=this.reader.lastIndexOfSignature(a.ZIP64_CENTRAL_DIRECTORY_LOCATOR))<0)throw new Error("Corrupted zip: can't find the ZIP64 end of central directory locator");if(this.reader.setIndex(t),this.checkSignature(a.ZIP64_CENTRAL_DIRECTORY_LOCATOR),this.readBlockZip64EndOfCentralLocator(),!this.isSignature(this.relativeOffsetEndOfZip64CentralDir,a.ZIP64_CENTRAL_DIRECTORY_END)&&(this.relativeOffsetEndOfZip64CentralDir=this.reader.lastIndexOfSignature(a.ZIP64_CENTRAL_DIRECTORY_END),this.relativeOffsetEndOfZip64CentralDir<0))throw new Error("Corrupted zip: can't find the ZIP64 end of central directory");this.reader.setIndex(this.relativeOffsetEndOfZip64CentralDir),this.checkSignature(a.ZIP64_CENTRAL_DIRECTORY_END),this.readBlockZip64EndOfCentral()}var r=this.centralDirOffset+this.centralDirSize;this.zip64&&(r+=20,r+=12+this.zip64EndOfCentralSize);var n=e-r;if(0<n)this.isSignature(e,a.CENTRAL_FILE_HEADER)||(this.reader.zero=n);else if(n<0)throw new Error("Corrupted zip: missing "+Math.abs(n)+" bytes.")},prepareReader:function(t){this.reader=n(t)},load:function(t){this.prepareReader(t),this.readEndOfCentral(),this.readCentralDir(),this.readLocalFiles()}},e.exports=c},{"./reader/readerFor":22,"./signature":23,"./support":30,"./utils":32,"./zipEntry":34}],34:[function(t,e,r){"use strict";var n=t("./reader/readerFor"),i=t("./utils"),a=t("./compressedObject"),o=t("./crc32"),s=t("./utf8"),c=t("./compressions"),u=t("./support");function l(t,e){this.options=t,this.loadOptions=e}l.prototype={isEncrypted:function(){return!(1&~this.bitFlag)},useUTF8:function(){return!(2048&~this.bitFlag)},readLocalPart:function(t){var e,r;if(t.skip(22),this.fileNameLength=t.readInt(2),r=t.readInt(2),this.fileName=t.readData(this.fileNameLength),t.skip(r),-1===this.compressedSize||-1===this.uncompressedSize)throw new Error("Bug or corrupted zip : didn't get enough information from the central directory (compressedSize === -1 || uncompressedSize === -1)");if(null===(e=function(t){for(var e in c)if(Object.prototype.hasOwnProperty.call(c,e)&&c[e].magic===t)return c[e];return null}(this.compressionMethod)))throw new Error("Corrupted zip : compression "+i.pretty(this.compressionMethod)+" unknown (inner file : "+i.transformTo("string",this.fileName)+")");this.decompressed=new a(this.compressedSize,this.uncompressedSize,this.crc32,e,t.readData(this.compressedSize))},readCentralPart:function(t){this.versionMadeBy=t.readInt(2),t.skip(2),this.bitFlag=t.readInt(2),this.compressionMethod=t.readString(2),this.date=t.readDate(),this.crc32=t.readInt(4),this.compressedSize=t.readInt(4),this.uncompressedSize=t.readInt(4);var e=t.readInt(2);if(this.extraFieldsLength=t.readInt(2),this.fileCommentLength=t.readInt(2),this.diskNumberStart=t.readInt(2),this.internalFileAttributes=t.readInt(2),this.externalFileAttributes=t.readInt(4),this.localHeaderOffset=t.readInt(4),this.isEncrypted())throw new Error("Encrypted zip are not supported");t.skip(e),this.readExtraFields(t),this.parseZIP64ExtraField(t),this.fileComment=t.readData(this.fileCommentLength)},processAttributes:function(){this.unixPermissions=null,this.dosPermissions=null;var t=this.versionMadeBy>>8;this.dir=!!(16&this.externalFileAttributes),0==t&&(this.dosPermissions=63&this.externalFileAttributes),3==t&&(this.unixPermissions=this.externalFileAttributes>>16&65535),this.dir||"/"!==this.fileNameStr.slice(-1)||(this.dir=!0)},parseZIP64ExtraField:function(){if(this.extraFields[1]){var t=n(this.extraFields[1].value);this.uncompressedSize===i.MAX_VALUE_32BITS&&(this.uncompressedSize=t.readInt(8)),this.compressedSize===i.MAX_VALUE_32BITS&&(this.compressedSize=t.readInt(8)),this.localHeaderOffset===i.MAX_VALUE_32BITS&&(this.localHeaderOffset=t.readInt(8)),this.diskNumberStart===i.MAX_VALUE_32BITS&&(this.diskNumberStart=t.readInt(4))}},readExtraFields:function(t){var e,r,n,i=t.index+this.extraFieldsLength;for(this.extraFields||(this.extraFields={});t.index+4<i;)e=t.readInt(2),r=t.readInt(2),n=t.readData(r),this.extraFields[e]={id:e,length:r,value:n};t.setIndex(i)},handleUTF8:function(){var t=u.uint8array?"uint8array":"array";if(this.useUTF8())this.fileNameStr=s.utf8decode(this.fileName),this.fileCommentStr=s.utf8decode(this.fileComment);else{var e=this.findExtraFieldUnicodePath();if(null!==e)this.fileNameStr=e;else{var r=i.transformTo(t,this.fileName);this.fileNameStr=this.loadOptions.decodeFileName(r)}var n=this.findExtraFieldUnicodeComment();if(null!==n)this.fileCommentStr=n;else{var a=i.transformTo(t,this.fileComment);this.fileCommentStr=this.loadOptions.decodeFileName(a)}}},findExtraFieldUnicodePath:function(){var t=this.extraFields[28789];if(t){var e=n(t.value);return 1!==e.readInt(1)||o(this.fileName)!==e.readInt(4)?null:s.utf8decode(e.readData(t.length-5))}return null},findExtraFieldUnicodeComment:function(){var t=this.extraFields[25461];if(t){var e=n(t.value);return 1!==e.readInt(1)||o(this.fileComment)!==e.readInt(4)?null:s.utf8decode(e.readData(t.length-5))}return null}},e.exports=l},{"./compressedObject":2,"./compressions":3,"./crc32":4,"./reader/readerFor":22,"./support":30,"./utf8":31,"./utils":32}],35:[function(t,e,r){"use strict";function n(t,e,r){this.name=t,this.dir=r.dir,this.date=r.date,this.comment=r.comment,this.unixPermissions=r.unixPermissions,this.dosPermissions=r.dosPermissions,this._data=e,this._dataBinary=r.binary,this.options={compression:r.compression,compressionOptions:r.compressionOptions}}var i=t("./stream/StreamHelper"),a=t("./stream/DataWorker"),o=t("./utf8"),s=t("./compressedObject"),c=t("./stream/GenericWorker");n.prototype={internalStream:function(t){var e=null,r="string";try{if(!t)throw new Error("No output type specified.");var n="string"===(r=t.toLowerCase())||"text"===r;"binarystring"!==r&&"text"!==r||(r="string"),e=this._decompressWorker();var a=!this._dataBinary;a&&!n&&(e=e.pipe(new o.Utf8EncodeWorker)),!a&&n&&(e=e.pipe(new o.Utf8DecodeWorker))}catch(t){(e=new c("error")).error(t)}return new i(e,r,"")},async:function(t,e){return this.internalStream(t).accumulate(e)},nodeStream:function(t,e){return this.internalStream(t||"nodebuffer").toNodejsStream(e)},_compressWorker:function(t,e){if(this._data instanceof s&&this._data.compression.magic===t.magic)return this._data.getCompressedWorker();var r=this._decompressWorker();return this._dataBinary||(r=r.pipe(new o.Utf8EncodeWorker)),s.createWorkerFrom(r,t,e)},_decompressWorker:function(){return this._data instanceof s?this._data.getContentWorker():this._data instanceof c?this._data:new a(this._data)}};for(var u=["asText","asBinary","asNodeBuffer","asUint8Array","asArrayBuffer"],l=function(){throw new Error("This method has been removed in JSZip 3.0, please check the upgrade guide.")},h=0;h<u.length;h++)n.prototype[u[h]]=l;e.exports=n},{"./compressedObject":2,"./stream/DataWorker":27,"./stream/GenericWorker":28,"./stream/StreamHelper":29,"./utf8":31}],36:[function(t,e,n){(function(t){"use strict";var r,n,i=t.MutationObserver||t.WebKitMutationObserver;if(i){var a=0,o=new i(l),s=t.document.createTextNode("");o.observe(s,{characterData:!0}),r=function(){s.data=a=++a%2}}else if(t.setImmediate||void 0===t.MessageChannel)r="document"in t&&"onreadystatechange"in t.document.createElement("script")?function(){var e=t.document.createElement("script");e.onreadystatechange=function(){l(),e.onreadystatechange=null,e.parentNode.removeChild(e),e=null},t.document.documentElement.appendChild(e)}:function(){setTimeout(l,0)};else{var c=new t.MessageChannel;c.port1.onmessage=l,r=function(){c.port2.postMessage(0)}}var u=[];function l(){var t,e;n=!0;for(var r=u.length;r;){for(e=u,u=[],t=-1;++t<r;)e[t]();r=u.length}n=!1}e.exports=function(t){1!==u.push(t)||n||r()}}).call(this,void 0!==r.g?r.g:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{})},{}],37:[function(t,e,r){"use strict";var n=t("immediate");function i(){}var a={},o=["REJECTED"],s=["FULFILLED"],c=["PENDING"];function u(t){if("function"!=typeof t)throw new TypeError("resolver must be a function");this.state=c,this.queue=[],this.outcome=void 0,t!==i&&d(this,t)}function l(t,e,r){this.promise=t,"function"==typeof e&&(this.onFulfilled=e,this.callFulfilled=this.otherCallFulfilled),"function"==typeof r&&(this.onRejected=r,this.callRejected=this.otherCallRejected)}function h(t,e,r){n((function(){var n;try{n=e(r)}catch(n){return a.reject(t,n)}n===t?a.reject(t,new TypeError("Cannot resolve promise with itself")):a.resolve(t,n)}))}function f(t){var e=t&&t.then;if(t&&("object"==typeof t||"function"==typeof t)&&"function"==typeof e)return function(){e.apply(t,arguments)}}function d(t,e){var r=!1;function n(e){r||(r=!0,a.reject(t,e))}function i(e){r||(r=!0,a.resolve(t,e))}var o=p((function(){e(i,n)}));"error"===o.status&&n(o.value)}function p(t,e){var r={};try{r.value=t(e),r.status="success"}catch(t){r.status="error",r.value=t}return r}(e.exports=u).prototype.finally=function(t){if("function"!=typeof t)return this;var e=this.constructor;return this.then((function(r){return e.resolve(t()).then((function(){return r}))}),(function(r){return e.resolve(t()).then((function(){throw r}))}))},u.prototype.catch=function(t){return this.then(null,t)},u.prototype.then=function(t,e){if("function"!=typeof t&&this.state===s||"function"!=typeof e&&this.state===o)return this;var r=new this.constructor(i);return this.state!==c?h(r,this.state===s?t:e,this.outcome):this.queue.push(new l(r,t,e)),r},l.prototype.callFulfilled=function(t){a.resolve(this.promise,t)},l.prototype.otherCallFulfilled=function(t){h(this.promise,this.onFulfilled,t)},l.prototype.callRejected=function(t){a.reject(this.promise,t)},l.prototype.otherCallRejected=function(t){h(this.promise,this.onRejected,t)},a.resolve=function(t,e){var r=p(f,e);if("error"===r.status)return a.reject(t,r.value);var n=r.value;if(n)d(t,n);else{t.state=s,t.outcome=e;for(var i=-1,o=t.queue.length;++i<o;)t.queue[i].callFulfilled(e)}return t},a.reject=function(t,e){t.state=o,t.outcome=e;for(var r=-1,n=t.queue.length;++r<n;)t.queue[r].callRejected(e);return t},u.resolve=function(t){return t instanceof this?t:a.resolve(new this(i),t)},u.reject=function(t){var e=new this(i);return a.reject(e,t)},u.all=function(t){var e=this;if("[object Array]"!==Object.prototype.toString.call(t))return this.reject(new TypeError("must be an array"));var r=t.length,n=!1;if(!r)return this.resolve([]);for(var o=new Array(r),s=0,c=-1,u=new this(i);++c<r;)l(t[c],c);return u;function l(t,i){e.resolve(t).then((function(t){o[i]=t,++s!==r||n||(n=!0,a.resolve(u,o))}),(function(t){n||(n=!0,a.reject(u,t))}))}},u.race=function(t){if("[object Array]"!==Object.prototype.toString.call(t))return this.reject(new TypeError("must be an array"));var e=t.length,r=!1;if(!e)return this.resolve([]);for(var n,o=-1,s=new this(i);++o<e;)n=t[o],this.resolve(n).then((function(t){r||(r=!0,a.resolve(s,t))}),(function(t){r||(r=!0,a.reject(s,t))}));return s}},{immediate:36}],38:[function(t,e,r){"use strict";var n={};(0,t("./lib/utils/common").assign)(n,t("./lib/deflate"),t("./lib/inflate"),t("./lib/zlib/constants")),e.exports=n},{"./lib/deflate":39,"./lib/inflate":40,"./lib/utils/common":41,"./lib/zlib/constants":44}],39:[function(t,e,r){"use strict";var n=t("./zlib/deflate"),i=t("./utils/common"),a=t("./utils/strings"),o=t("./zlib/messages"),s=t("./zlib/zstream"),c=Object.prototype.toString,u=0,l=-1,h=0,f=8;function d(t){if(!(this instanceof d))return new d(t);this.options=i.assign({level:l,method:f,chunkSize:16384,windowBits:15,memLevel:8,strategy:h,to:""},t||{});var e=this.options;e.raw&&0<e.windowBits?e.windowBits=-e.windowBits:e.gzip&&0<e.windowBits&&e.windowBits<16&&(e.windowBits+=16),this.err=0,this.msg="",this.ended=!1,this.chunks=[],this.strm=new s,this.strm.avail_out=0;var r=n.deflateInit2(this.strm,e.level,e.method,e.windowBits,e.memLevel,e.strategy);if(r!==u)throw new Error(o[r]);if(e.header&&n.deflateSetHeader(this.strm,e.header),e.dictionary){var p;if(p="string"==typeof e.dictionary?a.string2buf(e.dictionary):"[object ArrayBuffer]"===c.call(e.dictionary)?new Uint8Array(e.dictionary):e.dictionary,(r=n.deflateSetDictionary(this.strm,p))!==u)throw new Error(o[r]);this._dict_set=!0}}function p(t,e){var r=new d(e);if(r.push(t,!0),r.err)throw r.msg||o[r.err];return r.result}d.prototype.push=function(t,e){var r,o,s=this.strm,l=this.options.chunkSize;if(this.ended)return!1;o=e===~~e?e:!0===e?4:0,"string"==typeof t?s.input=a.string2buf(t):"[object ArrayBuffer]"===c.call(t)?s.input=new Uint8Array(t):s.input=t,s.next_in=0,s.avail_in=s.input.length;do{if(0===s.avail_out&&(s.output=new i.Buf8(l),s.next_out=0,s.avail_out=l),1!==(r=n.deflate(s,o))&&r!==u)return this.onEnd(r),!(this.ended=!0);0!==s.avail_out&&(0!==s.avail_in||4!==o&&2!==o)||("string"===this.options.to?this.onData(a.buf2binstring(i.shrinkBuf(s.output,s.next_out))):this.onData(i.shrinkBuf(s.output,s.next_out)))}while((0<s.avail_in||0===s.avail_out)&&1!==r);return 4===o?(r=n.deflateEnd(this.strm),this.onEnd(r),this.ended=!0,r===u):2!==o||(this.onEnd(u),!(s.avail_out=0))},d.prototype.onData=function(t){this.chunks.push(t)},d.prototype.onEnd=function(t){t===u&&("string"===this.options.to?this.result=this.chunks.join(""):this.result=i.flattenChunks(this.chunks)),this.chunks=[],this.err=t,this.msg=this.strm.msg},r.Deflate=d,r.deflate=p,r.deflateRaw=function(t,e){return(e=e||{}).raw=!0,p(t,e)},r.gzip=function(t,e){return(e=e||{}).gzip=!0,p(t,e)}},{"./utils/common":41,"./utils/strings":42,"./zlib/deflate":46,"./zlib/messages":51,"./zlib/zstream":53}],40:[function(t,e,r){"use strict";var n=t("./zlib/inflate"),i=t("./utils/common"),a=t("./utils/strings"),o=t("./zlib/constants"),s=t("./zlib/messages"),c=t("./zlib/zstream"),u=t("./zlib/gzheader"),l=Object.prototype.toString;function h(t){if(!(this instanceof h))return new h(t);this.options=i.assign({chunkSize:16384,windowBits:0,to:""},t||{});var e=this.options;e.raw&&0<=e.windowBits&&e.windowBits<16&&(e.windowBits=-e.windowBits,0===e.windowBits&&(e.windowBits=-15)),!(0<=e.windowBits&&e.windowBits<16)||t&&t.windowBits||(e.windowBits+=32),15<e.windowBits&&e.windowBits<48&&!(15&e.windowBits)&&(e.windowBits|=15),this.err=0,this.msg="",this.ended=!1,this.chunks=[],this.strm=new c,this.strm.avail_out=0;var r=n.inflateInit2(this.strm,e.windowBits);if(r!==o.Z_OK)throw new Error(s[r]);this.header=new u,n.inflateGetHeader(this.strm,this.header)}function f(t,e){var r=new h(e);if(r.push(t,!0),r.err)throw r.msg||s[r.err];return r.result}h.prototype.push=function(t,e){var r,s,c,u,h,f,d=this.strm,p=this.options.chunkSize,m=this.options.dictionary,g=!1;if(this.ended)return!1;s=e===~~e?e:!0===e?o.Z_FINISH:o.Z_NO_FLUSH,"string"==typeof t?d.input=a.binstring2buf(t):"[object ArrayBuffer]"===l.call(t)?d.input=new Uint8Array(t):d.input=t,d.next_in=0,d.avail_in=d.input.length;do{if(0===d.avail_out&&(d.output=new i.Buf8(p),d.next_out=0,d.avail_out=p),(r=n.inflate(d,o.Z_NO_FLUSH))===o.Z_NEED_DICT&&m&&(f="string"==typeof m?a.string2buf(m):"[object ArrayBuffer]"===l.call(m)?new Uint8Array(m):m,r=n.inflateSetDictionary(this.strm,f)),r===o.Z_BUF_ERROR&&!0===g&&(r=o.Z_OK,g=!1),r!==o.Z_STREAM_END&&r!==o.Z_OK)return this.onEnd(r),!(this.ended=!0);d.next_out&&(0!==d.avail_out&&r!==o.Z_STREAM_END&&(0!==d.avail_in||s!==o.Z_FINISH&&s!==o.Z_SYNC_FLUSH)||("string"===this.options.to?(c=a.utf8border(d.output,d.next_out),u=d.next_out-c,h=a.buf2string(d.output,c),d.next_out=u,d.avail_out=p-u,u&&i.arraySet(d.output,d.output,c,u,0),this.onData(h)):this.onData(i.shrinkBuf(d.output,d.next_out)))),0===d.avail_in&&0===d.avail_out&&(g=!0)}while((0<d.avail_in||0===d.avail_out)&&r!==o.Z_STREAM_END);return r===o.Z_STREAM_END&&(s=o.Z_FINISH),s===o.Z_FINISH?(r=n.inflateEnd(this.strm),this.onEnd(r),this.ended=!0,r===o.Z_OK):s!==o.Z_SYNC_FLUSH||(this.onEnd(o.Z_OK),!(d.avail_out=0))},h.prototype.onData=function(t){this.chunks.push(t)},h.prototype.onEnd=function(t){t===o.Z_OK&&("string"===this.options.to?this.result=this.chunks.join(""):this.result=i.flattenChunks(this.chunks)),this.chunks=[],this.err=t,this.msg=this.strm.msg},r.Inflate=h,r.inflate=f,r.inflateRaw=function(t,e){return(e=e||{}).raw=!0,f(t,e)},r.ungzip=f},{"./utils/common":41,"./utils/strings":42,"./zlib/constants":44,"./zlib/gzheader":47,"./zlib/inflate":49,"./zlib/messages":51,"./zlib/zstream":53}],41:[function(t,e,r){"use strict";var n="undefined"!=typeof Uint8Array&&"undefined"!=typeof Uint16Array&&"undefined"!=typeof Int32Array;r.assign=function(t){for(var e=Array.prototype.slice.call(arguments,1);e.length;){var r=e.shift();if(r){if("object"!=typeof r)throw new TypeError(r+"must be non-object");for(var n in r)r.hasOwnProperty(n)&&(t[n]=r[n])}}return t},r.shrinkBuf=function(t,e){return t.length===e?t:t.subarray?t.subarray(0,e):(t.length=e,t)};var i={arraySet:function(t,e,r,n,i){if(e.subarray&&t.subarray)t.set(e.subarray(r,r+n),i);else for(var a=0;a<n;a++)t[i+a]=e[r+a]},flattenChunks:function(t){var e,r,n,i,a,o;for(e=n=0,r=t.length;e<r;e++)n+=t[e].length;for(o=new Uint8Array(n),e=i=0,r=t.length;e<r;e++)a=t[e],o.set(a,i),i+=a.length;return o}},a={arraySet:function(t,e,r,n,i){for(var a=0;a<n;a++)t[i+a]=e[r+a]},flattenChunks:function(t){return[].concat.apply([],t)}};r.setTyped=function(t){t?(r.Buf8=Uint8Array,r.Buf16=Uint16Array,r.Buf32=Int32Array,r.assign(r,i)):(r.Buf8=Array,r.Buf16=Array,r.Buf32=Array,r.assign(r,a))},r.setTyped(n)},{}],42:[function(t,e,r){"use strict";var n=t("./common"),i=!0,a=!0;try{String.fromCharCode.apply(null,[0])}catch(t){i=!1}try{String.fromCharCode.apply(null,new Uint8Array(1))}catch(t){a=!1}for(var o=new n.Buf8(256),s=0;s<256;s++)o[s]=252<=s?6:248<=s?5:240<=s?4:224<=s?3:192<=s?2:1;function c(t,e){if(e<65537&&(t.subarray&&a||!t.subarray&&i))return String.fromCharCode.apply(null,n.shrinkBuf(t,e));for(var r="",o=0;o<e;o++)r+=String.fromCharCode(t[o]);return r}o[254]=o[254]=1,r.string2buf=function(t){var e,r,i,a,o,s=t.length,c=0;for(a=0;a<s;a++)55296==(64512&(r=t.charCodeAt(a)))&&a+1<s&&56320==(64512&(i=t.charCodeAt(a+1)))&&(r=65536+(r-55296<<10)+(i-56320),a++),c+=r<128?1:r<2048?2:r<65536?3:4;for(e=new n.Buf8(c),a=o=0;o<c;a++)55296==(64512&(r=t.charCodeAt(a)))&&a+1<s&&56320==(64512&(i=t.charCodeAt(a+1)))&&(r=65536+(r-55296<<10)+(i-56320),a++),r<128?e[o++]=r:(r<2048?e[o++]=192|r>>>6:(r<65536?e[o++]=224|r>>>12:(e[o++]=240|r>>>18,e[o++]=128|r>>>12&63),e[o++]=128|r>>>6&63),e[o++]=128|63&r);return e},r.buf2binstring=function(t){return c(t,t.length)},r.binstring2buf=function(t){for(var e=new n.Buf8(t.length),r=0,i=e.length;r<i;r++)e[r]=t.charCodeAt(r);return e},r.buf2string=function(t,e){var r,n,i,a,s=e||t.length,u=new Array(2*s);for(r=n=0;r<s;)if((i=t[r++])<128)u[n++]=i;else if(4<(a=o[i]))u[n++]=65533,r+=a-1;else{for(i&=2===a?31:3===a?15:7;1<a&&r<s;)i=i<<6|63&t[r++],a--;1<a?u[n++]=65533:i<65536?u[n++]=i:(i-=65536,u[n++]=55296|i>>10&1023,u[n++]=56320|1023&i)}return c(u,n)},r.utf8border=function(t,e){var r;for((e=e||t.length)>t.length&&(e=t.length),r=e-1;0<=r&&128==(192&t[r]);)r--;return r<0||0===r?e:r+o[t[r]]>e?r:e}},{"./common":41}],43:[function(t,e,r){"use strict";e.exports=function(t,e,r,n){for(var i=65535&t,a=t>>>16&65535,o=0;0!==r;){for(r-=o=2e3<r?2e3:r;a=a+(i=i+e[n++]|0)|0,--o;);i%=65521,a%=65521}return i|a<<16}},{}],44:[function(t,e,r){"use strict";e.exports={Z_NO_FLUSH:0,Z_PARTIAL_FLUSH:1,Z_SYNC_FLUSH:2,Z_FULL_FLUSH:3,Z_FINISH:4,Z_BLOCK:5,Z_TREES:6,Z_OK:0,Z_STREAM_END:1,Z_NEED_DICT:2,Z_ERRNO:-1,Z_STREAM_ERROR:-2,Z_DATA_ERROR:-3,Z_BUF_ERROR:-5,Z_NO_COMPRESSION:0,Z_BEST_SPEED:1,Z_BEST_COMPRESSION:9,Z_DEFAULT_COMPRESSION:-1,Z_FILTERED:1,Z_HUFFMAN_ONLY:2,Z_RLE:3,Z_FIXED:4,Z_DEFAULT_STRATEGY:0,Z_BINARY:0,Z_TEXT:1,Z_UNKNOWN:2,Z_DEFLATED:8}},{}],45:[function(t,e,r){"use strict";var n=function(){for(var t,e=[],r=0;r<256;r++){t=r;for(var n=0;n<8;n++)t=1&t?3988292384^t>>>1:t>>>1;e[r]=t}return e}();e.exports=function(t,e,r,i){var a=n,o=i+r;t^=-1;for(var s=i;s<o;s++)t=t>>>8^a[255&(t^e[s])];return~t}},{}],46:[function(t,e,r){"use strict";var n,i=t("../utils/common"),a=t("./trees"),o=t("./adler32"),s=t("./crc32"),c=t("./messages"),u=0,l=0,h=-2,f=2,d=8,p=286,m=30,g=19,v=2*p+1,_=15,y=3,b=258,w=b+y+1,k=42,x=113;function S(t,e){return t.msg=c[e],e}function E(t){return(t<<1)-(4<t?9:0)}function A(t){for(var e=t.length;0<=--e;)t[e]=0}function z(t){var e=t.state,r=e.pending;r>t.avail_out&&(r=t.avail_out),0!==r&&(i.arraySet(t.output,e.pending_buf,e.pending_out,r,t.next_out),t.next_out+=r,e.pending_out+=r,t.total_out+=r,t.avail_out-=r,e.pending-=r,0===e.pending&&(e.pending_out=0))}function O(t,e){a._tr_flush_block(t,0<=t.block_start?t.block_start:-1,t.strstart-t.block_start,e),t.block_start=t.strstart,z(t.strm)}function C(t,e){t.pending_buf[t.pending++]=e}function I(t,e){t.pending_buf[t.pending++]=e>>>8&255,t.pending_buf[t.pending++]=255&e}function T(t,e){var r,n,i=t.max_chain_length,a=t.strstart,o=t.prev_length,s=t.nice_match,c=t.strstart>t.w_size-w?t.strstart-(t.w_size-w):0,u=t.window,l=t.w_mask,h=t.prev,f=t.strstart+b,d=u[a+o-1],p=u[a+o];t.prev_length>=t.good_match&&(i>>=2),s>t.lookahead&&(s=t.lookahead);do{if(u[(r=e)+o]===p&&u[r+o-1]===d&&u[r]===u[a]&&u[++r]===u[a+1]){a+=2,r++;do{}while(u[++a]===u[++r]&&u[++a]===u[++r]&&u[++a]===u[++r]&&u[++a]===u[++r]&&u[++a]===u[++r]&&u[++a]===u[++r]&&u[++a]===u[++r]&&u[++a]===u[++r]&&a<f);if(n=b-(f-a),a=f-b,o<n){if(t.match_start=e,s<=(o=n))break;d=u[a+o-1],p=u[a+o]}}}while((e=h[e&l])>c&&0!=--i);return o<=t.lookahead?o:t.lookahead}function D(t){var e,r,n,a,c,u,l,h,f,d,p=t.w_size;do{if(a=t.window_size-t.lookahead-t.strstart,t.strstart>=p+(p-w)){for(i.arraySet(t.window,t.window,p,p,0),t.match_start-=p,t.strstart-=p,t.block_start-=p,e=r=t.hash_size;n=t.head[--e],t.head[e]=p<=n?n-p:0,--r;);for(e=r=p;n=t.prev[--e],t.prev[e]=p<=n?n-p:0,--r;);a+=p}if(0===t.strm.avail_in)break;if(u=t.strm,l=t.window,h=t.strstart+t.lookahead,d=void 0,(f=a)<(d=u.avail_in)&&(d=f),r=0===d?0:(u.avail_in-=d,i.arraySet(l,u.input,u.next_in,d,h),1===u.state.wrap?u.adler=o(u.adler,l,d,h):2===u.state.wrap&&(u.adler=s(u.adler,l,d,h)),u.next_in+=d,u.total_in+=d,d),t.lookahead+=r,t.lookahead+t.insert>=y)for(c=t.strstart-t.insert,t.ins_h=t.window[c],t.ins_h=(t.ins_h<<t.hash_shift^t.window[c+1])&t.hash_mask;t.insert&&(t.ins_h=(t.ins_h<<t.hash_shift^t.window[c+y-1])&t.hash_mask,t.prev[c&t.w_mask]=t.head[t.ins_h],t.head[t.ins_h]=c,c++,t.insert--,!(t.lookahead+t.insert<y)););}while(t.lookahead<w&&0!==t.strm.avail_in)}function B(t,e){for(var r,n;;){if(t.lookahead<w){if(D(t),t.lookahead<w&&e===u)return 1;if(0===t.lookahead)break}if(r=0,t.lookahead>=y&&(t.ins_h=(t.ins_h<<t.hash_shift^t.window[t.strstart+y-1])&t.hash_mask,r=t.prev[t.strstart&t.w_mask]=t.head[t.ins_h],t.head[t.ins_h]=t.strstart),0!==r&&t.strstart-r<=t.w_size-w&&(t.match_length=T(t,r)),t.match_length>=y)if(n=a._tr_tally(t,t.strstart-t.match_start,t.match_length-y),t.lookahead-=t.match_length,t.match_length<=t.max_lazy_match&&t.lookahead>=y){for(t.match_length--;t.strstart++,t.ins_h=(t.ins_h<<t.hash_shift^t.window[t.strstart+y-1])&t.hash_mask,r=t.prev[t.strstart&t.w_mask]=t.head[t.ins_h],t.head[t.ins_h]=t.strstart,0!=--t.match_length;);t.strstart++}else t.strstart+=t.match_length,t.match_length=0,t.ins_h=t.window[t.strstart],t.ins_h=(t.ins_h<<t.hash_shift^t.window[t.strstart+1])&t.hash_mask;else n=a._tr_tally(t,0,t.window[t.strstart]),t.lookahead--,t.strstart++;if(n&&(O(t,!1),0===t.strm.avail_out))return 1}return t.insert=t.strstart<y-1?t.strstart:y-1,4===e?(O(t,!0),0===t.strm.avail_out?3:4):t.last_lit&&(O(t,!1),0===t.strm.avail_out)?1:2}function L(t,e){for(var r,n,i;;){if(t.lookahead<w){if(D(t),t.lookahead<w&&e===u)return 1;if(0===t.lookahead)break}if(r=0,t.lookahead>=y&&(t.ins_h=(t.ins_h<<t.hash_shift^t.window[t.strstart+y-1])&t.hash_mask,r=t.prev[t.strstart&t.w_mask]=t.head[t.ins_h],t.head[t.ins_h]=t.strstart),t.prev_length=t.match_length,t.prev_match=t.match_start,t.match_length=y-1,0!==r&&t.prev_length<t.max_lazy_match&&t.strstart-r<=t.w_size-w&&(t.match_length=T(t,r),t.match_length<=5&&(1===t.strategy||t.match_length===y&&4096<t.strstart-t.match_start)&&(t.match_length=y-1)),t.prev_length>=y&&t.match_length<=t.prev_length){for(i=t.strstart+t.lookahead-y,n=a._tr_tally(t,t.strstart-1-t.prev_match,t.prev_length-y),t.lookahead-=t.prev_length-1,t.prev_length-=2;++t.strstart<=i&&(t.ins_h=(t.ins_h<<t.hash_shift^t.window[t.strstart+y-1])&t.hash_mask,r=t.prev[t.strstart&t.w_mask]=t.head[t.ins_h],t.head[t.ins_h]=t.strstart),0!=--t.prev_length;);if(t.match_available=0,t.match_length=y-1,t.strstart++,n&&(O(t,!1),0===t.strm.avail_out))return 1}else if(t.match_available){if((n=a._tr_tally(t,0,t.window[t.strstart-1]))&&O(t,!1),t.strstart++,t.lookahead--,0===t.strm.avail_out)return 1}else t.match_available=1,t.strstart++,t.lookahead--}return t.match_available&&(n=a._tr_tally(t,0,t.window[t.strstart-1]),t.match_available=0),t.insert=t.strstart<y-1?t.strstart:y-1,4===e?(O(t,!0),0===t.strm.avail_out?3:4):t.last_lit&&(O(t,!1),0===t.strm.avail_out)?1:2}function R(t,e,r,n,i){this.good_length=t,this.max_lazy=e,this.nice_length=r,this.max_chain=n,this.func=i}function j(){this.strm=null,this.status=0,this.pending_buf=null,this.pending_buf_size=0,this.pending_out=0,this.pending=0,this.wrap=0,this.gzhead=null,this.gzindex=0,this.method=d,this.last_flush=-1,this.w_size=0,this.w_bits=0,this.w_mask=0,this.window=null,this.window_size=0,this.prev=null,this.head=null,this.ins_h=0,this.hash_size=0,this.hash_bits=0,this.hash_mask=0,this.hash_shift=0,this.block_start=0,this.match_length=0,this.prev_match=0,this.match_available=0,this.strstart=0,this.match_start=0,this.lookahead=0,this.prev_length=0,this.max_chain_length=0,this.max_lazy_match=0,this.level=0,this.strategy=0,this.good_match=0,this.nice_match=0,this.dyn_ltree=new i.Buf16(2*v),this.dyn_dtree=new i.Buf16(2*(2*m+1)),this.bl_tree=new i.Buf16(2*(2*g+1)),A(this.dyn_ltree),A(this.dyn_dtree),A(this.bl_tree),this.l_desc=null,this.d_desc=null,this.bl_desc=null,this.bl_count=new i.Buf16(_+1),this.heap=new i.Buf16(2*p+1),A(this.heap),this.heap_len=0,this.heap_max=0,this.depth=new i.Buf16(2*p+1),A(this.depth),this.l_buf=0,this.lit_bufsize=0,this.last_lit=0,this.d_buf=0,this.opt_len=0,this.static_len=0,this.matches=0,this.insert=0,this.bi_buf=0,this.bi_valid=0}function F(t){var e;return t&&t.state?(t.total_in=t.total_out=0,t.data_type=f,(e=t.state).pending=0,e.pending_out=0,e.wrap<0&&(e.wrap=-e.wrap),e.status=e.wrap?k:x,t.adler=2===e.wrap?0:1,e.last_flush=u,a._tr_init(e),l):S(t,h)}function P(t){var e=F(t);return e===l&&function(t){t.window_size=2*t.w_size,A(t.head),t.max_lazy_match=n[t.level].max_lazy,t.good_match=n[t.level].good_length,t.nice_match=n[t.level].nice_length,t.max_chain_length=n[t.level].max_chain,t.strstart=0,t.block_start=0,t.lookahead=0,t.insert=0,t.match_length=t.prev_length=y-1,t.match_available=0,t.ins_h=0}(t.state),e}function N(t,e,r,n,a,o){if(!t)return h;var s=1;if(-1===e&&(e=6),n<0?(s=0,n=-n):15<n&&(s=2,n-=16),a<1||9<a||r!==d||n<8||15<n||e<0||9<e||o<0||4<o)return S(t,h);8===n&&(n=9);var c=new j;return(t.state=c).strm=t,c.wrap=s,c.gzhead=null,c.w_bits=n,c.w_size=1<<c.w_bits,c.w_mask=c.w_size-1,c.hash_bits=a+7,c.hash_size=1<<c.hash_bits,c.hash_mask=c.hash_size-1,c.hash_shift=~~((c.hash_bits+y-1)/y),c.window=new i.Buf8(2*c.w_size),c.head=new i.Buf16(c.hash_size),c.prev=new i.Buf16(c.w_size),c.lit_bufsize=1<<a+6,c.pending_buf_size=4*c.lit_bufsize,c.pending_buf=new i.Buf8(c.pending_buf_size),c.d_buf=1*c.lit_bufsize,c.l_buf=3*c.lit_bufsize,c.level=e,c.strategy=o,c.method=r,P(t)}n=[new R(0,0,0,0,(function(t,e){var r=65535;for(r>t.pending_buf_size-5&&(r=t.pending_buf_size-5);;){if(t.lookahead<=1){if(D(t),0===t.lookahead&&e===u)return 1;if(0===t.lookahead)break}t.strstart+=t.lookahead,t.lookahead=0;var n=t.block_start+r;if((0===t.strstart||t.strstart>=n)&&(t.lookahead=t.strstart-n,t.strstart=n,O(t,!1),0===t.strm.avail_out))return 1;if(t.strstart-t.block_start>=t.w_size-w&&(O(t,!1),0===t.strm.avail_out))return 1}return t.insert=0,4===e?(O(t,!0),0===t.strm.avail_out?3:4):(t.strstart>t.block_start&&(O(t,!1),t.strm.avail_out),1)})),new R(4,4,8,4,B),new R(4,5,16,8,B),new R(4,6,32,32,B),new R(4,4,16,16,L),new R(8,16,32,32,L),new R(8,16,128,128,L),new R(8,32,128,256,L),new R(32,128,258,1024,L),new R(32,258,258,4096,L)],r.deflateInit=function(t,e){return N(t,e,d,15,8,0)},r.deflateInit2=N,r.deflateReset=P,r.deflateResetKeep=F,r.deflateSetHeader=function(t,e){return t&&t.state?2!==t.state.wrap?h:(t.state.gzhead=e,l):h},r.deflate=function(t,e){var r,i,o,c;if(!t||!t.state||5<e||e<0)return t?S(t,h):h;if(i=t.state,!t.output||!t.input&&0!==t.avail_in||666===i.status&&4!==e)return S(t,0===t.avail_out?-5:h);if(i.strm=t,r=i.last_flush,i.last_flush=e,i.status===k)if(2===i.wrap)t.adler=0,C(i,31),C(i,139),C(i,8),i.gzhead?(C(i,(i.gzhead.text?1:0)+(i.gzhead.hcrc?2:0)+(i.gzhead.extra?4:0)+(i.gzhead.name?8:0)+(i.gzhead.comment?16:0)),C(i,255&i.gzhead.time),C(i,i.gzhead.time>>8&255),C(i,i.gzhead.time>>16&255),C(i,i.gzhead.time>>24&255),C(i,9===i.level?2:2<=i.strategy||i.level<2?4:0),C(i,255&i.gzhead.os),i.gzhead.extra&&i.gzhead.extra.length&&(C(i,255&i.gzhead.extra.length),C(i,i.gzhead.extra.length>>8&255)),i.gzhead.hcrc&&(t.adler=s(t.adler,i.pending_buf,i.pending,0)),i.gzindex=0,i.status=69):(C(i,0),C(i,0),C(i,0),C(i,0),C(i,0),C(i,9===i.level?2:2<=i.strategy||i.level<2?4:0),C(i,3),i.status=x);else{var f=d+(i.w_bits-8<<4)<<8;f|=(2<=i.strategy||i.level<2?0:i.level<6?1:6===i.level?2:3)<<6,0!==i.strstart&&(f|=32),f+=31-f%31,i.status=x,I(i,f),0!==i.strstart&&(I(i,t.adler>>>16),I(i,65535&t.adler)),t.adler=1}if(69===i.status)if(i.gzhead.extra){for(o=i.pending;i.gzindex<(65535&i.gzhead.extra.length)&&(i.pending!==i.pending_buf_size||(i.gzhead.hcrc&&i.pending>o&&(t.adler=s(t.adler,i.pending_buf,i.pending-o,o)),z(t),o=i.pending,i.pending!==i.pending_buf_size));)C(i,255&i.gzhead.extra[i.gzindex]),i.gzindex++;i.gzhead.hcrc&&i.pending>o&&(t.adler=s(t.adler,i.pending_buf,i.pending-o,o)),i.gzindex===i.gzhead.extra.length&&(i.gzindex=0,i.status=73)}else i.status=73;if(73===i.status)if(i.gzhead.name){o=i.pending;do{if(i.pending===i.pending_buf_size&&(i.gzhead.hcrc&&i.pending>o&&(t.adler=s(t.adler,i.pending_buf,i.pending-o,o)),z(t),o=i.pending,i.pending===i.pending_buf_size)){c=1;break}c=i.gzindex<i.gzhead.name.length?255&i.gzhead.name.charCodeAt(i.gzindex++):0,C(i,c)}while(0!==c);i.gzhead.hcrc&&i.pending>o&&(t.adler=s(t.adler,i.pending_buf,i.pending-o,o)),0===c&&(i.gzindex=0,i.status=91)}else i.status=91;if(91===i.status)if(i.gzhead.comment){o=i.pending;do{if(i.pending===i.pending_buf_size&&(i.gzhead.hcrc&&i.pending>o&&(t.adler=s(t.adler,i.pending_buf,i.pending-o,o)),z(t),o=i.pending,i.pending===i.pending_buf_size)){c=1;break}c=i.gzindex<i.gzhead.comment.length?255&i.gzhead.comment.charCodeAt(i.gzindex++):0,C(i,c)}while(0!==c);i.gzhead.hcrc&&i.pending>o&&(t.adler=s(t.adler,i.pending_buf,i.pending-o,o)),0===c&&(i.status=103)}else i.status=103;if(103===i.status&&(i.gzhead.hcrc?(i.pending+2>i.pending_buf_size&&z(t),i.pending+2<=i.pending_buf_size&&(C(i,255&t.adler),C(i,t.adler>>8&255),t.adler=0,i.status=x)):i.status=x),0!==i.pending){if(z(t),0===t.avail_out)return i.last_flush=-1,l}else if(0===t.avail_in&&E(e)<=E(r)&&4!==e)return S(t,-5);if(666===i.status&&0!==t.avail_in)return S(t,-5);if(0!==t.avail_in||0!==i.lookahead||e!==u&&666!==i.status){var p=2===i.strategy?function(t,e){for(var r;;){if(0===t.lookahead&&(D(t),0===t.lookahead)){if(e===u)return 1;break}if(t.match_length=0,r=a._tr_tally(t,0,t.window[t.strstart]),t.lookahead--,t.strstart++,r&&(O(t,!1),0===t.strm.avail_out))return 1}return t.insert=0,4===e?(O(t,!0),0===t.strm.avail_out?3:4):t.last_lit&&(O(t,!1),0===t.strm.avail_out)?1:2}(i,e):3===i.strategy?function(t,e){for(var r,n,i,o,s=t.window;;){if(t.lookahead<=b){if(D(t),t.lookahead<=b&&e===u)return 1;if(0===t.lookahead)break}if(t.match_length=0,t.lookahead>=y&&0<t.strstart&&(n=s[i=t.strstart-1])===s[++i]&&n===s[++i]&&n===s[++i]){o=t.strstart+b;do{}while(n===s[++i]&&n===s[++i]&&n===s[++i]&&n===s[++i]&&n===s[++i]&&n===s[++i]&&n===s[++i]&&n===s[++i]&&i<o);t.match_length=b-(o-i),t.match_length>t.lookahead&&(t.match_length=t.lookahead)}if(t.match_length>=y?(r=a._tr_tally(t,1,t.match_length-y),t.lookahead-=t.match_length,t.strstart+=t.match_length,t.match_length=0):(r=a._tr_tally(t,0,t.window[t.strstart]),t.lookahead--,t.strstart++),r&&(O(t,!1),0===t.strm.avail_out))return 1}return t.insert=0,4===e?(O(t,!0),0===t.strm.avail_out?3:4):t.last_lit&&(O(t,!1),0===t.strm.avail_out)?1:2}(i,e):n[i.level].func(i,e);if(3!==p&&4!==p||(i.status=666),1===p||3===p)return 0===t.avail_out&&(i.last_flush=-1),l;if(2===p&&(1===e?a._tr_align(i):5!==e&&(a._tr_stored_block(i,0,0,!1),3===e&&(A(i.head),0===i.lookahead&&(i.strstart=0,i.block_start=0,i.insert=0))),z(t),0===t.avail_out))return i.last_flush=-1,l}return 4!==e?l:i.wrap<=0?1:(2===i.wrap?(C(i,255&t.adler),C(i,t.adler>>8&255),C(i,t.adler>>16&255),C(i,t.adler>>24&255),C(i,255&t.total_in),C(i,t.total_in>>8&255),C(i,t.total_in>>16&255),C(i,t.total_in>>24&255)):(I(i,t.adler>>>16),I(i,65535&t.adler)),z(t),0<i.wrap&&(i.wrap=-i.wrap),0!==i.pending?l:1)},r.deflateEnd=function(t){var e;return t&&t.state?(e=t.state.status)!==k&&69!==e&&73!==e&&91!==e&&103!==e&&e!==x&&666!==e?S(t,h):(t.state=null,e===x?S(t,-3):l):h},r.deflateSetDictionary=function(t,e){var r,n,a,s,c,u,f,d,p=e.length;if(!t||!t.state)return h;if(2===(s=(r=t.state).wrap)||1===s&&r.status!==k||r.lookahead)return h;for(1===s&&(t.adler=o(t.adler,e,p,0)),r.wrap=0,p>=r.w_size&&(0===s&&(A(r.head),r.strstart=0,r.block_start=0,r.insert=0),d=new i.Buf8(r.w_size),i.arraySet(d,e,p-r.w_size,r.w_size,0),e=d,p=r.w_size),c=t.avail_in,u=t.next_in,f=t.input,t.avail_in=p,t.next_in=0,t.input=e,D(r);r.lookahead>=y;){for(n=r.strstart,a=r.lookahead-(y-1);r.ins_h=(r.ins_h<<r.hash_shift^r.window[n+y-1])&r.hash_mask,r.prev[n&r.w_mask]=r.head[r.ins_h],r.head[r.ins_h]=n,n++,--a;);r.strstart=n,r.lookahead=y-1,D(r)}return r.strstart+=r.lookahead,r.block_start=r.strstart,r.insert=r.lookahead,r.lookahead=0,r.match_length=r.prev_length=y-1,r.match_available=0,t.next_in=u,t.input=f,t.avail_in=c,r.wrap=s,l},r.deflateInfo="pako deflate (from Nodeca project)"},{"../utils/common":41,"./adler32":43,"./crc32":45,"./messages":51,"./trees":52}],47:[function(t,e,r){"use strict";e.exports=function(){this.text=0,this.time=0,this.xflags=0,this.os=0,this.extra=null,this.extra_len=0,this.name="",this.comment="",this.hcrc=0,this.done=!1}},{}],48:[function(t,e,r){"use strict";e.exports=function(t,e){var r,n,i,a,o,s,c,u,l,h,f,d,p,m,g,v,_,y,b,w,k,x,S,E,A;r=t.state,n=t.next_in,E=t.input,i=n+(t.avail_in-5),a=t.next_out,A=t.output,o=a-(e-t.avail_out),s=a+(t.avail_out-257),c=r.dmax,u=r.wsize,l=r.whave,h=r.wnext,f=r.window,d=r.hold,p=r.bits,m=r.lencode,g=r.distcode,v=(1<<r.lenbits)-1,_=(1<<r.distbits)-1;t:do{p<15&&(d+=E[n++]<<p,p+=8,d+=E[n++]<<p,p+=8),y=m[d&v];e:for(;;){if(d>>>=b=y>>>24,p-=b,0==(b=y>>>16&255))A[a++]=65535&y;else{if(!(16&b)){if(!(64&b)){y=m[(65535&y)+(d&(1<<b)-1)];continue e}if(32&b){r.mode=12;break t}t.msg="invalid literal/length code",r.mode=30;break t}w=65535&y,(b&=15)&&(p<b&&(d+=E[n++]<<p,p+=8),w+=d&(1<<b)-1,d>>>=b,p-=b),p<15&&(d+=E[n++]<<p,p+=8,d+=E[n++]<<p,p+=8),y=g[d&_];r:for(;;){if(d>>>=b=y>>>24,p-=b,!(16&(b=y>>>16&255))){if(!(64&b)){y=g[(65535&y)+(d&(1<<b)-1)];continue r}t.msg="invalid distance code",r.mode=30;break t}if(k=65535&y,p<(b&=15)&&(d+=E[n++]<<p,(p+=8)<b&&(d+=E[n++]<<p,p+=8)),c<(k+=d&(1<<b)-1)){t.msg="invalid distance too far back",r.mode=30;break t}if(d>>>=b,p-=b,(b=a-o)<k){if(l<(b=k-b)&&r.sane){t.msg="invalid distance too far back",r.mode=30;break t}if(S=f,(x=0)===h){if(x+=u-b,b<w){for(w-=b;A[a++]=f[x++],--b;);x=a-k,S=A}}else if(h<b){if(x+=u+h-b,(b-=h)<w){for(w-=b;A[a++]=f[x++],--b;);if(x=0,h<w){for(w-=b=h;A[a++]=f[x++],--b;);x=a-k,S=A}}}else if(x+=h-b,b<w){for(w-=b;A[a++]=f[x++],--b;);x=a-k,S=A}for(;2<w;)A[a++]=S[x++],A[a++]=S[x++],A[a++]=S[x++],w-=3;w&&(A[a++]=S[x++],1<w&&(A[a++]=S[x++]))}else{for(x=a-k;A[a++]=A[x++],A[a++]=A[x++],A[a++]=A[x++],2<(w-=3););w&&(A[a++]=A[x++],1<w&&(A[a++]=A[x++]))}break}}break}}while(n<i&&a<s);n-=w=p>>3,d&=(1<<(p-=w<<3))-1,t.next_in=n,t.next_out=a,t.avail_in=n<i?i-n+5:5-(n-i),t.avail_out=a<s?s-a+257:257-(a-s),r.hold=d,r.bits=p}},{}],49:[function(t,e,r){"use strict";var n=t("../utils/common"),i=t("./adler32"),a=t("./crc32"),o=t("./inffast"),s=t("./inftrees"),c=0,u=-2,l=1,h=852,f=592;function d(t){return(t>>>24&255)+(t>>>8&65280)+((65280&t)<<8)+((255&t)<<24)}function p(){this.mode=0,this.last=!1,this.wrap=0,this.havedict=!1,this.flags=0,this.dmax=0,this.check=0,this.total=0,this.head=null,this.wbits=0,this.wsize=0,this.whave=0,this.wnext=0,this.window=null,this.hold=0,this.bits=0,this.length=0,this.offset=0,this.extra=0,this.lencode=null,this.distcode=null,this.lenbits=0,this.distbits=0,this.ncode=0,this.nlen=0,this.ndist=0,this.have=0,this.next=null,this.lens=new n.Buf16(320),this.work=new n.Buf16(288),this.lendyn=null,this.distdyn=null,this.sane=0,this.back=0,this.was=0}function m(t){var e;return t&&t.state?(e=t.state,t.total_in=t.total_out=e.total=0,t.msg="",e.wrap&&(t.adler=1&e.wrap),e.mode=l,e.last=0,e.havedict=0,e.dmax=32768,e.head=null,e.hold=0,e.bits=0,e.lencode=e.lendyn=new n.Buf32(h),e.distcode=e.distdyn=new n.Buf32(f),e.sane=1,e.back=-1,c):u}function g(t){var e;return t&&t.state?((e=t.state).wsize=0,e.whave=0,e.wnext=0,m(t)):u}function v(t,e){var r,n;return t&&t.state?(n=t.state,e<0?(r=0,e=-e):(r=1+(e>>4),e<48&&(e&=15)),e&&(e<8||15<e)?u:(null!==n.window&&n.wbits!==e&&(n.window=null),n.wrap=r,n.wbits=e,g(t))):u}function _(t,e){var r,n;return t?(n=new p,(t.state=n).window=null,(r=v(t,e))!==c&&(t.state=null),r):u}var y,b,w=!0;function k(t){if(w){var e;for(y=new n.Buf32(512),b=new n.Buf32(32),e=0;e<144;)t.lens[e++]=8;for(;e<256;)t.lens[e++]=9;for(;e<280;)t.lens[e++]=7;for(;e<288;)t.lens[e++]=8;for(s(1,t.lens,0,288,y,0,t.work,{bits:9}),e=0;e<32;)t.lens[e++]=5;s(2,t.lens,0,32,b,0,t.work,{bits:5}),w=!1}t.lencode=y,t.lenbits=9,t.distcode=b,t.distbits=5}function x(t,e,r,i){var a,o=t.state;return null===o.window&&(o.wsize=1<<o.wbits,o.wnext=0,o.whave=0,o.window=new n.Buf8(o.wsize)),i>=o.wsize?(n.arraySet(o.window,e,r-o.wsize,o.wsize,0),o.wnext=0,o.whave=o.wsize):(i<(a=o.wsize-o.wnext)&&(a=i),n.arraySet(o.window,e,r-i,a,o.wnext),(i-=a)?(n.arraySet(o.window,e,r-i,i,0),o.wnext=i,o.whave=o.wsize):(o.wnext+=a,o.wnext===o.wsize&&(o.wnext=0),o.whave<o.wsize&&(o.whave+=a))),0}r.inflateReset=g,r.inflateReset2=v,r.inflateResetKeep=m,r.inflateInit=function(t){return _(t,15)},r.inflateInit2=_,r.inflate=function(t,e){var r,h,f,p,m,g,v,_,y,b,w,S,E,A,z,O,C,I,T,D,B,L,R,j,F=0,P=new n.Buf8(4),N=[16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15];if(!t||!t.state||!t.output||!t.input&&0!==t.avail_in)return u;12===(r=t.state).mode&&(r.mode=13),m=t.next_out,f=t.output,v=t.avail_out,p=t.next_in,h=t.input,g=t.avail_in,_=r.hold,y=r.bits,b=g,w=v,L=c;t:for(;;)switch(r.mode){case l:if(0===r.wrap){r.mode=13;break}for(;y<16;){if(0===g)break t;g--,_+=h[p++]<<y,y+=8}if(2&r.wrap&&35615===_){P[r.check=0]=255&_,P[1]=_>>>8&255,r.check=a(r.check,P,2,0),y=_=0,r.mode=2;break}if(r.flags=0,r.head&&(r.head.done=!1),!(1&r.wrap)||(((255&_)<<8)+(_>>8))%31){t.msg="incorrect header check",r.mode=30;break}if(8!=(15&_)){t.msg="unknown compression method",r.mode=30;break}if(y-=4,B=8+(15&(_>>>=4)),0===r.wbits)r.wbits=B;else if(B>r.wbits){t.msg="invalid window size",r.mode=30;break}r.dmax=1<<B,t.adler=r.check=1,r.mode=512&_?10:12,y=_=0;break;case 2:for(;y<16;){if(0===g)break t;g--,_+=h[p++]<<y,y+=8}if(r.flags=_,8!=(255&r.flags)){t.msg="unknown compression method",r.mode=30;break}if(57344&r.flags){t.msg="unknown header flags set",r.mode=30;break}r.head&&(r.head.text=_>>8&1),512&r.flags&&(P[0]=255&_,P[1]=_>>>8&255,r.check=a(r.check,P,2,0)),y=_=0,r.mode=3;case 3:for(;y<32;){if(0===g)break t;g--,_+=h[p++]<<y,y+=8}r.head&&(r.head.time=_),512&r.flags&&(P[0]=255&_,P[1]=_>>>8&255,P[2]=_>>>16&255,P[3]=_>>>24&255,r.check=a(r.check,P,4,0)),y=_=0,r.mode=4;case 4:for(;y<16;){if(0===g)break t;g--,_+=h[p++]<<y,y+=8}r.head&&(r.head.xflags=255&_,r.head.os=_>>8),512&r.flags&&(P[0]=255&_,P[1]=_>>>8&255,r.check=a(r.check,P,2,0)),y=_=0,r.mode=5;case 5:if(1024&r.flags){for(;y<16;){if(0===g)break t;g--,_+=h[p++]<<y,y+=8}r.length=_,r.head&&(r.head.extra_len=_),512&r.flags&&(P[0]=255&_,P[1]=_>>>8&255,r.check=a(r.check,P,2,0)),y=_=0}else r.head&&(r.head.extra=null);r.mode=6;case 6:if(1024&r.flags&&(g<(S=r.length)&&(S=g),S&&(r.head&&(B=r.head.extra_len-r.length,r.head.extra||(r.head.extra=new Array(r.head.extra_len)),n.arraySet(r.head.extra,h,p,S,B)),512&r.flags&&(r.check=a(r.check,h,S,p)),g-=S,p+=S,r.length-=S),r.length))break t;r.length=0,r.mode=7;case 7:if(2048&r.flags){if(0===g)break t;for(S=0;B=h[p+S++],r.head&&B&&r.length<65536&&(r.head.name+=String.fromCharCode(B)),B&&S<g;);if(512&r.flags&&(r.check=a(r.check,h,S,p)),g-=S,p+=S,B)break t}else r.head&&(r.head.name=null);r.length=0,r.mode=8;case 8:if(4096&r.flags){if(0===g)break t;for(S=0;B=h[p+S++],r.head&&B&&r.length<65536&&(r.head.comment+=String.fromCharCode(B)),B&&S<g;);if(512&r.flags&&(r.check=a(r.check,h,S,p)),g-=S,p+=S,B)break t}else r.head&&(r.head.comment=null);r.mode=9;case 9:if(512&r.flags){for(;y<16;){if(0===g)break t;g--,_+=h[p++]<<y,y+=8}if(_!==(65535&r.check)){t.msg="header crc mismatch",r.mode=30;break}y=_=0}r.head&&(r.head.hcrc=r.flags>>9&1,r.head.done=!0),t.adler=r.check=0,r.mode=12;break;case 10:for(;y<32;){if(0===g)break t;g--,_+=h[p++]<<y,y+=8}t.adler=r.check=d(_),y=_=0,r.mode=11;case 11:if(0===r.havedict)return t.next_out=m,t.avail_out=v,t.next_in=p,t.avail_in=g,r.hold=_,r.bits=y,2;t.adler=r.check=1,r.mode=12;case 12:if(5===e||6===e)break t;case 13:if(r.last){_>>>=7&y,y-=7&y,r.mode=27;break}for(;y<3;){if(0===g)break t;g--,_+=h[p++]<<y,y+=8}switch(r.last=1&_,y-=1,3&(_>>>=1)){case 0:r.mode=14;break;case 1:if(k(r),r.mode=20,6!==e)break;_>>>=2,y-=2;break t;case 2:r.mode=17;break;case 3:t.msg="invalid block type",r.mode=30}_>>>=2,y-=2;break;case 14:for(_>>>=7&y,y-=7&y;y<32;){if(0===g)break t;g--,_+=h[p++]<<y,y+=8}if((65535&_)!=(_>>>16^65535)){t.msg="invalid stored block lengths",r.mode=30;break}if(r.length=65535&_,y=_=0,r.mode=15,6===e)break t;case 15:r.mode=16;case 16:if(S=r.length){if(g<S&&(S=g),v<S&&(S=v),0===S)break t;n.arraySet(f,h,p,S,m),g-=S,p+=S,v-=S,m+=S,r.length-=S;break}r.mode=12;break;case 17:for(;y<14;){if(0===g)break t;g--,_+=h[p++]<<y,y+=8}if(r.nlen=257+(31&_),_>>>=5,y-=5,r.ndist=1+(31&_),_>>>=5,y-=5,r.ncode=4+(15&_),_>>>=4,y-=4,286<r.nlen||30<r.ndist){t.msg="too many length or distance symbols",r.mode=30;break}r.have=0,r.mode=18;case 18:for(;r.have<r.ncode;){for(;y<3;){if(0===g)break t;g--,_+=h[p++]<<y,y+=8}r.lens[N[r.have++]]=7&_,_>>>=3,y-=3}for(;r.have<19;)r.lens[N[r.have++]]=0;if(r.lencode=r.lendyn,r.lenbits=7,R={bits:r.lenbits},L=s(0,r.lens,0,19,r.lencode,0,r.work,R),r.lenbits=R.bits,L){t.msg="invalid code lengths set",r.mode=30;break}r.have=0,r.mode=19;case 19:for(;r.have<r.nlen+r.ndist;){for(;O=(F=r.lencode[_&(1<<r.lenbits)-1])>>>16&255,C=65535&F,!((z=F>>>24)<=y);){if(0===g)break t;g--,_+=h[p++]<<y,y+=8}if(C<16)_>>>=z,y-=z,r.lens[r.have++]=C;else{if(16===C){for(j=z+2;y<j;){if(0===g)break t;g--,_+=h[p++]<<y,y+=8}if(_>>>=z,y-=z,0===r.have){t.msg="invalid bit length repeat",r.mode=30;break}B=r.lens[r.have-1],S=3+(3&_),_>>>=2,y-=2}else if(17===C){for(j=z+3;y<j;){if(0===g)break t;g--,_+=h[p++]<<y,y+=8}y-=z,B=0,S=3+(7&(_>>>=z)),_>>>=3,y-=3}else{for(j=z+7;y<j;){if(0===g)break t;g--,_+=h[p++]<<y,y+=8}y-=z,B=0,S=11+(127&(_>>>=z)),_>>>=7,y-=7}if(r.have+S>r.nlen+r.ndist){t.msg="invalid bit length repeat",r.mode=30;break}for(;S--;)r.lens[r.have++]=B}}if(30===r.mode)break;if(0===r.lens[256]){t.msg="invalid code -- missing end-of-block",r.mode=30;break}if(r.lenbits=9,R={bits:r.lenbits},L=s(1,r.lens,0,r.nlen,r.lencode,0,r.work,R),r.lenbits=R.bits,L){t.msg="invalid literal/lengths set",r.mode=30;break}if(r.distbits=6,r.distcode=r.distdyn,R={bits:r.distbits},L=s(2,r.lens,r.nlen,r.ndist,r.distcode,0,r.work,R),r.distbits=R.bits,L){t.msg="invalid distances set",r.mode=30;break}if(r.mode=20,6===e)break t;case 20:r.mode=21;case 21:if(6<=g&&258<=v){t.next_out=m,t.avail_out=v,t.next_in=p,t.avail_in=g,r.hold=_,r.bits=y,o(t,w),m=t.next_out,f=t.output,v=t.avail_out,p=t.next_in,h=t.input,g=t.avail_in,_=r.hold,y=r.bits,12===r.mode&&(r.back=-1);break}for(r.back=0;O=(F=r.lencode[_&(1<<r.lenbits)-1])>>>16&255,C=65535&F,!((z=F>>>24)<=y);){if(0===g)break t;g--,_+=h[p++]<<y,y+=8}if(O&&!(240&O)){for(I=z,T=O,D=C;O=(F=r.lencode[D+((_&(1<<I+T)-1)>>I)])>>>16&255,C=65535&F,!(I+(z=F>>>24)<=y);){if(0===g)break t;g--,_+=h[p++]<<y,y+=8}_>>>=I,y-=I,r.back+=I}if(_>>>=z,y-=z,r.back+=z,r.length=C,0===O){r.mode=26;break}if(32&O){r.back=-1,r.mode=12;break}if(64&O){t.msg="invalid literal/length code",r.mode=30;break}r.extra=15&O,r.mode=22;case 22:if(r.extra){for(j=r.extra;y<j;){if(0===g)break t;g--,_+=h[p++]<<y,y+=8}r.length+=_&(1<<r.extra)-1,_>>>=r.extra,y-=r.extra,r.back+=r.extra}r.was=r.length,r.mode=23;case 23:for(;O=(F=r.distcode[_&(1<<r.distbits)-1])>>>16&255,C=65535&F,!((z=F>>>24)<=y);){if(0===g)break t;g--,_+=h[p++]<<y,y+=8}if(!(240&O)){for(I=z,T=O,D=C;O=(F=r.distcode[D+((_&(1<<I+T)-1)>>I)])>>>16&255,C=65535&F,!(I+(z=F>>>24)<=y);){if(0===g)break t;g--,_+=h[p++]<<y,y+=8}_>>>=I,y-=I,r.back+=I}if(_>>>=z,y-=z,r.back+=z,64&O){t.msg="invalid distance code",r.mode=30;break}r.offset=C,r.extra=15&O,r.mode=24;case 24:if(r.extra){for(j=r.extra;y<j;){if(0===g)break t;g--,_+=h[p++]<<y,y+=8}r.offset+=_&(1<<r.extra)-1,_>>>=r.extra,y-=r.extra,r.back+=r.extra}if(r.offset>r.dmax){t.msg="invalid distance too far back",r.mode=30;break}r.mode=25;case 25:if(0===v)break t;if(S=w-v,r.offset>S){if((S=r.offset-S)>r.whave&&r.sane){t.msg="invalid distance too far back",r.mode=30;break}E=S>r.wnext?(S-=r.wnext,r.wsize-S):r.wnext-S,S>r.length&&(S=r.length),A=r.window}else A=f,E=m-r.offset,S=r.length;for(v<S&&(S=v),v-=S,r.length-=S;f[m++]=A[E++],--S;);0===r.length&&(r.mode=21);break;case 26:if(0===v)break t;f[m++]=r.length,v--,r.mode=21;break;case 27:if(r.wrap){for(;y<32;){if(0===g)break t;g--,_|=h[p++]<<y,y+=8}if(w-=v,t.total_out+=w,r.total+=w,w&&(t.adler=r.check=r.flags?a(r.check,f,w,m-w):i(r.check,f,w,m-w)),w=v,(r.flags?_:d(_))!==r.check){t.msg="incorrect data check",r.mode=30;break}y=_=0}r.mode=28;case 28:if(r.wrap&&r.flags){for(;y<32;){if(0===g)break t;g--,_+=h[p++]<<y,y+=8}if(_!==(4294967295&r.total)){t.msg="incorrect length check",r.mode=30;break}y=_=0}r.mode=29;case 29:L=1;break t;case 30:L=-3;break t;case 31:return-4;default:return u}return t.next_out=m,t.avail_out=v,t.next_in=p,t.avail_in=g,r.hold=_,r.bits=y,(r.wsize||w!==t.avail_out&&r.mode<30&&(r.mode<27||4!==e))&&x(t,t.output,t.next_out,w-t.avail_out)?(r.mode=31,-4):(b-=t.avail_in,w-=t.avail_out,t.total_in+=b,t.total_out+=w,r.total+=w,r.wrap&&w&&(t.adler=r.check=r.flags?a(r.check,f,w,t.next_out-w):i(r.check,f,w,t.next_out-w)),t.data_type=r.bits+(r.last?64:0)+(12===r.mode?128:0)+(20===r.mode||15===r.mode?256:0),(0==b&&0===w||4===e)&&L===c&&(L=-5),L)},r.inflateEnd=function(t){if(!t||!t.state)return u;var e=t.state;return e.window&&(e.window=null),t.state=null,c},r.inflateGetHeader=function(t,e){var r;return t&&t.state&&2&(r=t.state).wrap?((r.head=e).done=!1,c):u},r.inflateSetDictionary=function(t,e){var r,n=e.length;return t&&t.state?0!==(r=t.state).wrap&&11!==r.mode?u:11===r.mode&&i(1,e,n,0)!==r.check?-3:x(t,e,n,n)?(r.mode=31,-4):(r.havedict=1,c):u},r.inflateInfo="pako inflate (from Nodeca project)"},{"../utils/common":41,"./adler32":43,"./crc32":45,"./inffast":48,"./inftrees":50}],50:[function(t,e,r){"use strict";var n=t("../utils/common"),i=[3,4,5,6,7,8,9,10,11,13,15,17,19,23,27,31,35,43,51,59,67,83,99,115,131,163,195,227,258,0,0],a=[16,16,16,16,16,16,16,16,17,17,17,17,18,18,18,18,19,19,19,19,20,20,20,20,21,21,21,21,16,72,78],o=[1,2,3,4,5,7,9,13,17,25,33,49,65,97,129,193,257,385,513,769,1025,1537,2049,3073,4097,6145,8193,12289,16385,24577,0,0],s=[16,16,16,16,17,17,18,18,19,19,20,20,21,21,22,22,23,23,24,24,25,25,26,26,27,27,28,28,29,29,64,64];e.exports=function(t,e,r,c,u,l,h,f){var d,p,m,g,v,_,y,b,w,k=f.bits,x=0,S=0,E=0,A=0,z=0,O=0,C=0,I=0,T=0,D=0,B=null,L=0,R=new n.Buf16(16),j=new n.Buf16(16),F=null,P=0;for(x=0;x<=15;x++)R[x]=0;for(S=0;S<c;S++)R[e[r+S]]++;for(z=k,A=15;1<=A&&0===R[A];A--);if(A<z&&(z=A),0===A)return u[l++]=20971520,u[l++]=20971520,f.bits=1,0;for(E=1;E<A&&0===R[E];E++);for(z<E&&(z=E),x=I=1;x<=15;x++)if(I<<=1,(I-=R[x])<0)return-1;if(0<I&&(0===t||1!==A))return-1;for(j[1]=0,x=1;x<15;x++)j[x+1]=j[x]+R[x];for(S=0;S<c;S++)0!==e[r+S]&&(h[j[e[r+S]]++]=S);if(_=0===t?(B=F=h,19):1===t?(B=i,L-=257,F=a,P-=257,256):(B=o,F=s,-1),x=E,v=l,C=S=D=0,m=-1,g=(T=1<<(O=z))-1,1===t&&852<T||2===t&&592<T)return 1;for(;;){for(y=x-C,w=h[S]<_?(b=0,h[S]):h[S]>_?(b=F[P+h[S]],B[L+h[S]]):(b=96,0),d=1<<x-C,E=p=1<<O;u[v+(D>>C)+(p-=d)]=y<<24|b<<16|w,0!==p;);for(d=1<<x-1;D&d;)d>>=1;if(0!==d?(D&=d-1,D+=d):D=0,S++,0==--R[x]){if(x===A)break;x=e[r+h[S]]}if(z<x&&(D&g)!==m){for(0===C&&(C=z),v+=E,I=1<<(O=x-C);O+C<A&&!((I-=R[O+C])<=0);)O++,I<<=1;if(T+=1<<O,1===t&&852<T||2===t&&592<T)return 1;u[m=D&g]=z<<24|O<<16|v-l}}return 0!==D&&(u[v+D]=x-C<<24|64<<16),f.bits=z,0}},{"../utils/common":41}],51:[function(t,e,r){"use strict";e.exports={2:"need dictionary",1:"stream end",0:"","-1":"file error","-2":"stream error","-3":"data error","-4":"insufficient memory","-5":"buffer error","-6":"incompatible version"}},{}],52:[function(t,e,r){"use strict";var n=t("../utils/common");function i(t){for(var e=t.length;0<=--e;)t[e]=0}var a=256,o=286,s=30,c=15,u=16,l=[0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0],h=[0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13],f=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,3,7],d=[16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15],p=new Array(576);i(p);var m=new Array(60);i(m);var g=new Array(512);i(g);var v=new Array(256);i(v);var _=new Array(29);i(_);var y,b,w,k=new Array(s);function x(t,e,r,n,i){this.static_tree=t,this.extra_bits=e,this.extra_base=r,this.elems=n,this.max_length=i,this.has_stree=t&&t.length}function S(t,e){this.dyn_tree=t,this.max_code=0,this.stat_desc=e}function E(t){return t<256?g[t]:g[256+(t>>>7)]}function A(t,e){t.pending_buf[t.pending++]=255&e,t.pending_buf[t.pending++]=e>>>8&255}function z(t,e,r){t.bi_valid>u-r?(t.bi_buf|=e<<t.bi_valid&65535,A(t,t.bi_buf),t.bi_buf=e>>u-t.bi_valid,t.bi_valid+=r-u):(t.bi_buf|=e<<t.bi_valid&65535,t.bi_valid+=r)}function O(t,e,r){z(t,r[2*e],r[2*e+1])}function C(t,e){for(var r=0;r|=1&t,t>>>=1,r<<=1,0<--e;);return r>>>1}function I(t,e,r){var n,i,a=new Array(c+1),o=0;for(n=1;n<=c;n++)a[n]=o=o+r[n-1]<<1;for(i=0;i<=e;i++){var s=t[2*i+1];0!==s&&(t[2*i]=C(a[s]++,s))}}function T(t){var e;for(e=0;e<o;e++)t.dyn_ltree[2*e]=0;for(e=0;e<s;e++)t.dyn_dtree[2*e]=0;for(e=0;e<19;e++)t.bl_tree[2*e]=0;t.dyn_ltree[512]=1,t.opt_len=t.static_len=0,t.last_lit=t.matches=0}function D(t){8<t.bi_valid?A(t,t.bi_buf):0<t.bi_valid&&(t.pending_buf[t.pending++]=t.bi_buf),t.bi_buf=0,t.bi_valid=0}function B(t,e,r,n){var i=2*e,a=2*r;return t[i]<t[a]||t[i]===t[a]&&n[e]<=n[r]}function L(t,e,r){for(var n=t.heap[r],i=r<<1;i<=t.heap_len&&(i<t.heap_len&&B(e,t.heap[i+1],t.heap[i],t.depth)&&i++,!B(e,n,t.heap[i],t.depth));)t.heap[r]=t.heap[i],r=i,i<<=1;t.heap[r]=n}function R(t,e,r){var n,i,o,s,c=0;if(0!==t.last_lit)for(;n=t.pending_buf[t.d_buf+2*c]<<8|t.pending_buf[t.d_buf+2*c+1],i=t.pending_buf[t.l_buf+c],c++,0===n?O(t,i,e):(O(t,(o=v[i])+a+1,e),0!==(s=l[o])&&z(t,i-=_[o],s),O(t,o=E(--n),r),0!==(s=h[o])&&z(t,n-=k[o],s)),c<t.last_lit;);O(t,256,e)}function j(t,e){var r,n,i,a=e.dyn_tree,o=e.stat_desc.static_tree,s=e.stat_desc.has_stree,u=e.stat_desc.elems,l=-1;for(t.heap_len=0,t.heap_max=573,r=0;r<u;r++)0!==a[2*r]?(t.heap[++t.heap_len]=l=r,t.depth[r]=0):a[2*r+1]=0;for(;t.heap_len<2;)a[2*(i=t.heap[++t.heap_len]=l<2?++l:0)]=1,t.depth[i]=0,t.opt_len--,s&&(t.static_len-=o[2*i+1]);for(e.max_code=l,r=t.heap_len>>1;1<=r;r--)L(t,a,r);for(i=u;r=t.heap[1],t.heap[1]=t.heap[t.heap_len--],L(t,a,1),n=t.heap[1],t.heap[--t.heap_max]=r,t.heap[--t.heap_max]=n,a[2*i]=a[2*r]+a[2*n],t.depth[i]=(t.depth[r]>=t.depth[n]?t.depth[r]:t.depth[n])+1,a[2*r+1]=a[2*n+1]=i,t.heap[1]=i++,L(t,a,1),2<=t.heap_len;);t.heap[--t.heap_max]=t.heap[1],function(t,e){var r,n,i,a,o,s,u=e.dyn_tree,l=e.max_code,h=e.stat_desc.static_tree,f=e.stat_desc.has_stree,d=e.stat_desc.extra_bits,p=e.stat_desc.extra_base,m=e.stat_desc.max_length,g=0;for(a=0;a<=c;a++)t.bl_count[a]=0;for(u[2*t.heap[t.heap_max]+1]=0,r=t.heap_max+1;r<573;r++)m<(a=u[2*u[2*(n=t.heap[r])+1]+1]+1)&&(a=m,g++),u[2*n+1]=a,l<n||(t.bl_count[a]++,o=0,p<=n&&(o=d[n-p]),s=u[2*n],t.opt_len+=s*(a+o),f&&(t.static_len+=s*(h[2*n+1]+o)));if(0!==g){do{for(a=m-1;0===t.bl_count[a];)a--;t.bl_count[a]--,t.bl_count[a+1]+=2,t.bl_count[m]--,g-=2}while(0<g);for(a=m;0!==a;a--)for(n=t.bl_count[a];0!==n;)l<(i=t.heap[--r])||(u[2*i+1]!==a&&(t.opt_len+=(a-u[2*i+1])*u[2*i],u[2*i+1]=a),n--)}}(t,e),I(a,l,t.bl_count)}function F(t,e,r){var n,i,a=-1,o=e[1],s=0,c=7,u=4;for(0===o&&(c=138,u=3),e[2*(r+1)+1]=65535,n=0;n<=r;n++)i=o,o=e[2*(n+1)+1],++s<c&&i===o||(s<u?t.bl_tree[2*i]+=s:0!==i?(i!==a&&t.bl_tree[2*i]++,t.bl_tree[32]++):s<=10?t.bl_tree[34]++:t.bl_tree[36]++,a=i,u=(s=0)===o?(c=138,3):i===o?(c=6,3):(c=7,4))}function P(t,e,r){var n,i,a=-1,o=e[1],s=0,c=7,u=4;for(0===o&&(c=138,u=3),n=0;n<=r;n++)if(i=o,o=e[2*(n+1)+1],!(++s<c&&i===o)){if(s<u)for(;O(t,i,t.bl_tree),0!=--s;);else 0!==i?(i!==a&&(O(t,i,t.bl_tree),s--),O(t,16,t.bl_tree),z(t,s-3,2)):s<=10?(O(t,17,t.bl_tree),z(t,s-3,3)):(O(t,18,t.bl_tree),z(t,s-11,7));a=i,u=(s=0)===o?(c=138,3):i===o?(c=6,3):(c=7,4)}}i(k);var N=!1;function U(t,e,r,i){z(t,0+(i?1:0),3),function(t,e,r){D(t),A(t,r),A(t,~r),n.arraySet(t.pending_buf,t.window,e,r,t.pending),t.pending+=r}(t,e,r)}r._tr_init=function(t){N||(function(){var t,e,r,n,i,a=new Array(c+1);for(n=r=0;n<28;n++)for(_[n]=r,t=0;t<1<<l[n];t++)v[r++]=n;for(v[r-1]=n,n=i=0;n<16;n++)for(k[n]=i,t=0;t<1<<h[n];t++)g[i++]=n;for(i>>=7;n<s;n++)for(k[n]=i<<7,t=0;t<1<<h[n]-7;t++)g[256+i++]=n;for(e=0;e<=c;e++)a[e]=0;for(t=0;t<=143;)p[2*t+1]=8,t++,a[8]++;for(;t<=255;)p[2*t+1]=9,t++,a[9]++;for(;t<=279;)p[2*t+1]=7,t++,a[7]++;for(;t<=287;)p[2*t+1]=8,t++,a[8]++;for(I(p,287,a),t=0;t<s;t++)m[2*t+1]=5,m[2*t]=C(t,5);y=new x(p,l,257,o,c),b=new x(m,h,0,s,c),w=new x(new Array(0),f,0,19,7)}(),N=!0),t.l_desc=new S(t.dyn_ltree,y),t.d_desc=new S(t.dyn_dtree,b),t.bl_desc=new S(t.bl_tree,w),t.bi_buf=0,t.bi_valid=0,T(t)},r._tr_stored_block=U,r._tr_flush_block=function(t,e,r,n){var i,o,s=0;0<t.level?(2===t.strm.data_type&&(t.strm.data_type=function(t){var e,r=4093624447;for(e=0;e<=31;e++,r>>>=1)if(1&r&&0!==t.dyn_ltree[2*e])return 0;if(0!==t.dyn_ltree[18]||0!==t.dyn_ltree[20]||0!==t.dyn_ltree[26])return 1;for(e=32;e<a;e++)if(0!==t.dyn_ltree[2*e])return 1;return 0}(t)),j(t,t.l_desc),j(t,t.d_desc),s=function(t){var e;for(F(t,t.dyn_ltree,t.l_desc.max_code),F(t,t.dyn_dtree,t.d_desc.max_code),j(t,t.bl_desc),e=18;3<=e&&0===t.bl_tree[2*d[e]+1];e--);return t.opt_len+=3*(e+1)+5+5+4,e}(t),i=t.opt_len+3+7>>>3,(o=t.static_len+3+7>>>3)<=i&&(i=o)):i=o=r+5,r+4<=i&&-1!==e?U(t,e,r,n):4===t.strategy||o===i?(z(t,2+(n?1:0),3),R(t,p,m)):(z(t,4+(n?1:0),3),function(t,e,r,n){var i;for(z(t,e-257,5),z(t,r-1,5),z(t,n-4,4),i=0;i<n;i++)z(t,t.bl_tree[2*d[i]+1],3);P(t,t.dyn_ltree,e-1),P(t,t.dyn_dtree,r-1)}(t,t.l_desc.max_code+1,t.d_desc.max_code+1,s+1),R(t,t.dyn_ltree,t.dyn_dtree)),T(t),n&&D(t)},r._tr_tally=function(t,e,r){return t.pending_buf[t.d_buf+2*t.last_lit]=e>>>8&255,t.pending_buf[t.d_buf+2*t.last_lit+1]=255&e,t.pending_buf[t.l_buf+t.last_lit]=255&r,t.last_lit++,0===e?t.dyn_ltree[2*r]++:(t.matches++,e--,t.dyn_ltree[2*(v[r]+a+1)]++,t.dyn_dtree[2*E(e)]++),t.last_lit===t.lit_bufsize-1},r._tr_align=function(t){z(t,2,3),O(t,256,p),function(t){16===t.bi_valid?(A(t,t.bi_buf),t.bi_buf=0,t.bi_valid=0):8<=t.bi_valid&&(t.pending_buf[t.pending++]=255&t.bi_buf,t.bi_buf>>=8,t.bi_valid-=8)}(t)}},{"../utils/common":41}],53:[function(t,e,r){"use strict";e.exports=function(){this.input=null,this.next_in=0,this.avail_in=0,this.total_in=0,this.output=null,this.next_out=0,this.avail_out=0,this.total_out=0,this.msg="",this.state=null,this.data_type=2,this.adler=0}},{}],54:[function(t,e,n){(function(t){!function(t,e){"use strict";if(!t.setImmediate){var r,n,i,a,o=1,s={},c=!1,u=t.document,l=Object.getPrototypeOf&&Object.getPrototypeOf(t);l=l&&l.setTimeout?l:t,r="[object process]"==={}.toString.call(t.process)?function(t){process.nextTick((function(){f(t)}))}:function(){if(t.postMessage&&!t.importScripts){var e=!0,r=t.onmessage;return t.onmessage=function(){e=!1},t.postMessage("","*"),t.onmessage=r,e}}()?(a="setImmediate$"+Math.random()+"$",t.addEventListener?t.addEventListener("message",d,!1):t.attachEvent("onmessage",d),function(e){t.postMessage(a+e,"*")}):t.MessageChannel?((i=new MessageChannel).port1.onmessage=function(t){f(t.data)},function(t){i.port2.postMessage(t)}):u&&"onreadystatechange"in u.createElement("script")?(n=u.documentElement,function(t){var e=u.createElement("script");e.onreadystatechange=function(){f(t),e.onreadystatechange=null,n.removeChild(e),e=null},n.appendChild(e)}):function(t){setTimeout(f,0,t)},l.setImmediate=function(t){"function"!=typeof t&&(t=new Function(""+t));for(var e=new Array(arguments.length-1),n=0;n<e.length;n++)e[n]=arguments[n+1];var i={callback:t,args:e};return s[o]=i,r(o),o++},l.clearImmediate=h}function h(t){delete s[t]}function f(t){if(c)setTimeout(f,0,t);else{var r=s[t];if(r){c=!0;try{!function(t){var r=t.callback,n=t.args;switch(n.length){case 0:r();break;case 1:r(n[0]);break;case 2:r(n[0],n[1]);break;case 3:r(n[0],n[1],n[2]);break;default:r.apply(e,n)}}(r)}finally{h(t),c=!1}}}}function d(e){e.source===t&&"string"==typeof e.data&&0===e.data.indexOf(a)&&f(+e.data.slice(a.length))}}("undefined"==typeof self?void 0===t?this:t:self)}).call(this,void 0!==r.g?r.g:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{})},{}]},{},[10])(10)}},r={};function n(e){var i=r[e];if(void 0!==i)return i.exports;var a=r[e]={exports:{}};return t[e](a,a.exports,n),a.exports}n.n=t=>{var e=t&&t.__esModule?()=>t.default:()=>t;return n.d(e,{a:e}),e},n.d=(t,e)=>{for(var r in e)n.o(e,r)&&!n.o(t,r)&&Object.defineProperty(t,r,{enumerable:!0,get:e[r]})},n.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(t){if("object"==typeof window)return window}}(),n.o=(t,e)=>Object.prototype.hasOwnProperty.call(t,e),(()=>{"use strict";const t={randomUUID:"undefined"!=typeof crypto&&crypto.randomUUID&&crypto.randomUUID.bind(crypto)};let r;const i=new Uint8Array(16);function a(){if(!r){if("undefined"==typeof crypto||!crypto.getRandomValues)throw new Error("crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported");r=crypto.getRandomValues.bind(crypto)}return r(i)}const o=[];for(let t=0;t<256;++t)o.push((t+256).toString(16).slice(1));const s=function(e,r,n){if(t.randomUUID&&!r&&!e)return t.randomUUID();const i=(e=e||{}).random||(e.rng||a)();if(i[6]=15&i[6]|64,i[8]=63&i[8]|128,r){n=n||0;for(let t=0;t<16;++t)r[n+t]=i[t];return r}return function(t,e=0){return(o[t[e+0]]+o[t[e+1]]+o[t[e+2]]+o[t[e+3]]+"-"+o[t[e+4]]+o[t[e+5]]+"-"+o[t[e+6]]+o[t[e+7]]+"-"+o[t[e+8]]+o[t[e+9]]+"-"+o[t[e+10]]+o[t[e+11]]+o[t[e+12]]+o[t[e+13]]+o[t[e+14]]+o[t[e+15]]).toLowerCase()}(i)};var c=n(710),u=n.n(c),l="user_interaction_data",h=!0,f="http://userdatacollect.hailab.io",d="676a665144398e6967567a2b",p=["amazon.com","127.0.0.1:8000"],m=("".concat(f,"/interactions_record_status"),"".concat(f,"/check_user_id"),["https://www.amazon.com/checkout/","https://www.amazon.com/gp/buy/","https://www.amazon.com/a/addresses","https://www.amazon.com/cpe/yourpayments/"]);function g(t){return g="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},g(t)}function v(){v=function(){return e};var t,e={},r=Object.prototype,n=r.hasOwnProperty,i=Object.defineProperty||function(t,e,r){t[e]=r.value},a="function"==typeof Symbol?Symbol:{},o=a.iterator||"@@iterator",s=a.asyncIterator||"@@asyncIterator",c=a.toStringTag||"@@toStringTag";function u(t,e,r){return Object.defineProperty(t,e,{value:r,enumerable:!0,configurable:!0,writable:!0}),t[e]}try{u({},"")}catch(t){u=function(t,e,r){return t[e]=r}}function l(t,e,r,n){var a=e&&e.prototype instanceof y?e:y,o=Object.create(a.prototype),s=new D(n||[]);return i(o,"_invoke",{value:O(t,r,s)}),o}function h(t,e,r){try{return{type:"normal",arg:t.call(e,r)}}catch(t){return{type:"throw",arg:t}}}e.wrap=l;var f="suspendedStart",d="suspendedYield",p="executing",m="completed",_={};function y(){}function b(){}function w(){}var k={};u(k,o,(function(){return this}));var x=Object.getPrototypeOf,S=x&&x(x(B([])));S&&S!==r&&n.call(S,o)&&(k=S);var E=w.prototype=y.prototype=Object.create(k);function A(t){["next","throw","return"].forEach((function(e){u(t,e,(function(t){return this._invoke(e,t)}))}))}function z(t,e){function r(i,a,o,s){var c=h(t[i],t,a);if("throw"!==c.type){var u=c.arg,l=u.value;return l&&"object"==g(l)&&n.call(l,"__await")?e.resolve(l.__await).then((function(t){r("next",t,o,s)}),(function(t){r("throw",t,o,s)})):e.resolve(l).then((function(t){u.value=t,o(u)}),(function(t){return r("throw",t,o,s)}))}s(c.arg)}var a;i(this,"_invoke",{value:function(t,n){function i(){return new e((function(e,i){r(t,n,e,i)}))}return a=a?a.then(i,i):i()}})}function O(e,r,n){var i=f;return function(a,o){if(i===p)throw Error("Generator is already running");if(i===m){if("throw"===a)throw o;return{value:t,done:!0}}for(n.method=a,n.arg=o;;){var s=n.delegate;if(s){var c=C(s,n);if(c){if(c===_)continue;return c}}if("next"===n.method)n.sent=n._sent=n.arg;else if("throw"===n.method){if(i===f)throw i=m,n.arg;n.dispatchException(n.arg)}else"return"===n.method&&n.abrupt("return",n.arg);i=p;var u=h(e,r,n);if("normal"===u.type){if(i=n.done?m:d,u.arg===_)continue;return{value:u.arg,done:n.done}}"throw"===u.type&&(i=m,n.method="throw",n.arg=u.arg)}}}function C(e,r){var n=r.method,i=e.iterator[n];if(i===t)return r.delegate=null,"throw"===n&&e.iterator.return&&(r.method="return",r.arg=t,C(e,r),"throw"===r.method)||"return"!==n&&(r.method="throw",r.arg=new TypeError("The iterator does not provide a '"+n+"' method")),_;var a=h(i,e.iterator,r.arg);if("throw"===a.type)return r.method="throw",r.arg=a.arg,r.delegate=null,_;var o=a.arg;return o?o.done?(r[e.resultName]=o.value,r.next=e.nextLoc,"return"!==r.method&&(r.method="next",r.arg=t),r.delegate=null,_):o:(r.method="throw",r.arg=new TypeError("iterator result is not an object"),r.delegate=null,_)}function I(t){var e={tryLoc:t[0]};1 in t&&(e.catchLoc=t[1]),2 in t&&(e.finallyLoc=t[2],e.afterLoc=t[3]),this.tryEntries.push(e)}function T(t){var e=t.completion||{};e.type="normal",delete e.arg,t.completion=e}function D(t){this.tryEntries=[{tryLoc:"root"}],t.forEach(I,this),this.reset(!0)}function B(e){if(e||""===e){var r=e[o];if(r)return r.call(e);if("function"==typeof e.next)return e;if(!isNaN(e.length)){var i=-1,a=function r(){for(;++i<e.length;)if(n.call(e,i))return r.value=e[i],r.done=!1,r;return r.value=t,r.done=!0,r};return a.next=a}}throw new TypeError(g(e)+" is not iterable")}return b.prototype=w,i(E,"constructor",{value:w,configurable:!0}),i(w,"constructor",{value:b,configurable:!0}),b.displayName=u(w,c,"GeneratorFunction"),e.isGeneratorFunction=function(t){var e="function"==typeof t&&t.constructor;return!!e&&(e===b||"GeneratorFunction"===(e.displayName||e.name))},e.mark=function(t){return Object.setPrototypeOf?Object.setPrototypeOf(t,w):(t.__proto__=w,u(t,c,"GeneratorFunction")),t.prototype=Object.create(E),t},e.awrap=function(t){return{__await:t}},A(z.prototype),u(z.prototype,s,(function(){return this})),e.AsyncIterator=z,e.async=function(t,r,n,i,a){void 0===a&&(a=Promise);var o=new z(l(t,r,n,i),a);return e.isGeneratorFunction(r)?o:o.next().then((function(t){return t.done?t.value:o.next()}))},A(E),u(E,c,"Generator"),u(E,o,(function(){return this})),u(E,"toString",(function(){return"[object Generator]"})),e.keys=function(t){var e=Object(t),r=[];for(var n in e)r.push(n);return r.reverse(),function t(){for(;r.length;){var n=r.pop();if(n in e)return t.value=n,t.done=!1,t}return t.done=!0,t}},e.values=B,D.prototype={constructor:D,reset:function(e){if(this.prev=0,this.next=0,this.sent=this._sent=t,this.done=!1,this.delegate=null,this.method="next",this.arg=t,this.tryEntries.forEach(T),!e)for(var r in this)"t"===r.charAt(0)&&n.call(this,r)&&!isNaN(+r.slice(1))&&(this[r]=t)},stop:function(){this.done=!0;var t=this.tryEntries[0].completion;if("throw"===t.type)throw t.arg;return this.rval},dispatchException:function(e){if(this.done)throw e;var r=this;function i(n,i){return s.type="throw",s.arg=e,r.next=n,i&&(r.method="next",r.arg=t),!!i}for(var a=this.tryEntries.length-1;a>=0;--a){var o=this.tryEntries[a],s=o.completion;if("root"===o.tryLoc)return i("end");if(o.tryLoc<=this.prev){var c=n.call(o,"catchLoc"),u=n.call(o,"finallyLoc");if(c&&u){if(this.prev<o.catchLoc)return i(o.catchLoc,!0);if(this.prev<o.finallyLoc)return i(o.finallyLoc)}else if(c){if(this.prev<o.catchLoc)return i(o.catchLoc,!0)}else{if(!u)throw Error("try statement without catch or finally");if(this.prev<o.finallyLoc)return i(o.finallyLoc)}}}},abrupt:function(t,e){for(var r=this.tryEntries.length-1;r>=0;--r){var i=this.tryEntries[r];if(i.tryLoc<=this.prev&&n.call(i,"finallyLoc")&&this.prev<i.finallyLoc){var a=i;break}}a&&("break"===t||"continue"===t)&&a.tryLoc<=e&&e<=a.finallyLoc&&(a=null);var o=a?a.completion:{};return o.type=t,o.arg=e,a?(this.method="next",this.next=a.finallyLoc,_):this.complete(o)},complete:function(t,e){if("throw"===t.type)throw t.arg;return"break"===t.type||"continue"===t.type?this.next=t.arg:"return"===t.type?(this.rval=this.arg=t.arg,this.method="return",this.next="end"):"normal"===t.type&&e&&(this.next=e),_},finish:function(t){for(var e=this.tryEntries.length-1;e>=0;--e){var r=this.tryEntries[e];if(r.finallyLoc===t)return this.complete(r.completion,r.afterLoc),T(r),_}},catch:function(t){for(var e=this.tryEntries.length-1;e>=0;--e){var r=this.tryEntries[e];if(r.tryLoc===t){var n=r.completion;if("throw"===n.type){var i=n.arg;T(r)}return i}}throw Error("illegal catch attempt")},delegateYield:function(e,r,n){return this.delegate={iterator:B(e),resultName:r,nextLoc:n},"next"===this.method&&(this.arg=t),_}},e}function _(t,e,r,n,i,a,o){try{var s=t[a](o),c=s.value}catch(t){return void r(t)}s.done?e(c):Promise.resolve(c).then(n,i)}function y(t){return function(){var e=this,r=arguments;return new Promise((function(n,i){var a=t.apply(e,r);function o(t){_(a,n,i,o,s,"next",t)}function s(t){_(a,n,i,o,s,"throw",t)}o(void 0)}))}}function b(t){return w.apply(this,arguments)}function w(){return(w=y(v().mark((function t(e){return v().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return console.log("update_icon",e),t.next=3,k(e);case 3:if(t.sent){t.next=8;break}console.log("active icon"),chrome.action.setIcon({path:"../icon.png"}),t.next=10;break;case 8:console.log("inactive icon"),chrome.action.setIcon({path:"../inactive_icon.png"});case 10:case"end":return t.stop()}}),t)})))).apply(this,arguments)}function k(t){return x.apply(this,arguments)}function x(){return x=y(v().mark((function t(e){var r=arguments;return v().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:if(r.length>1&&void 0!==r[1]&&r[1]){t.next=16;break}if(!chrome.storage){t.next=11;break}return t.next=5,chrome.storage.local.get("userId");case 5:if(t.sent.userId){t.next=9;break}return console.log("no user id"),t.abrupt("return",!0);case 9:t.next=16;break;case 11:return t.next=13,new Promise((function(t){var e=function(r){"GET_USER_ID_RESPONSE"===r.data.type&&(window.removeEventListener("message",e),t(r.data.userId))};window.addEventListener("message",e),window.postMessage({type:"GET_USER_ID"},"*")}));case 13:if(t.sent){t.next=16;break}return t.abrupt("return",!0);case 16:if(e){t.next=18;break}return t.abrupt("return",!0);case 18:return t.abrupt("return",!p.some((function(t){return e.includes(t)}))||m.some((function(t){return e.includes(t)})));case 19:case"end":return t.stop()}}),t)}))),x.apply(this,arguments)}function S(t){return S="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},S(t)}function E(t,e){var r="undefined"!=typeof Symbol&&t[Symbol.iterator]||t["@@iterator"];if(!r){if(Array.isArray(t)||(r=T(t))||e&&t&&"number"==typeof t.length){r&&(t=r);var n=0,i=function(){};return{s:i,n:function(){return n>=t.length?{done:!0}:{done:!1,value:t[n++]}},e:function(t){throw t},f:i}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var a,o=!0,s=!1;return{s:function(){r=r.call(t)},n:function(){var t=r.next();return o=t.done,t},e:function(t){s=!0,a=t},f:function(){try{o||null==r.return||r.return()}finally{if(s)throw a}}}}function A(t,e){var r=Object.keys(t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(t);e&&(n=n.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),r.push.apply(r,n)}return r}function z(t){for(var e=1;e<arguments.length;e++){var r=null!=arguments[e]?arguments[e]:{};e%2?A(Object(r),!0).forEach((function(e){O(t,e,r[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(r)):A(Object(r)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(r,e))}))}return t}function O(t,e,r){return(e=function(t){var e=function(t){if("object"!=S(t)||!t)return t;var e=t[Symbol.toPrimitive];if(void 0!==e){var r=e.call(t,"string");if("object"!=S(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(t);return"symbol"==S(e)?e:e+""}(e))in t?Object.defineProperty(t,e,{value:r,enumerable:!0,configurable:!0,writable:!0}):t[e]=r,t}function C(t){return function(t){if(Array.isArray(t))return D(t)}(t)||function(t){if("undefined"!=typeof Symbol&&null!=t[Symbol.iterator]||null!=t["@@iterator"])return Array.from(t)}(t)||T(t)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function I(t,e){return function(t){if(Array.isArray(t))return t}(t)||function(t,e){var r=null==t?null:"undefined"!=typeof Symbol&&t[Symbol.iterator]||t["@@iterator"];if(null!=r){var n,i,a,o,s=[],c=!0,u=!1;try{if(a=(r=r.call(t)).next,0===e){if(Object(r)!==r)return;c=!1}else for(;!(c=(n=a.call(r)).done)&&(s.push(n.value),s.length!==e);c=!0);}catch(t){u=!0,i=t}finally{try{if(!c&&null!=r.return&&(o=r.return(),Object(o)!==o))return}finally{if(u)throw i}}return s}}(t,e)||T(t,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function T(t,e){if(t){if("string"==typeof t)return D(t,e);var r={}.toString.call(t).slice(8,-1);return"Object"===r&&t.constructor&&(r=t.constructor.name),"Map"===r||"Set"===r?Array.from(t):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?D(t,e):void 0}}function D(t,e){(null==e||e>t.length)&&(e=t.length);for(var r=0,n=Array(e);r<e;r++)n[r]=t[r];return n}function B(){B=function(){return e};var t,e={},r=Object.prototype,n=r.hasOwnProperty,i=Object.defineProperty||function(t,e,r){t[e]=r.value},a="function"==typeof Symbol?Symbol:{},o=a.iterator||"@@iterator",s=a.asyncIterator||"@@asyncIterator",c=a.toStringTag||"@@toStringTag";function u(t,e,r){return Object.defineProperty(t,e,{value:r,enumerable:!0,configurable:!0,writable:!0}),t[e]}try{u({},"")}catch(t){u=function(t,e,r){return t[e]=r}}function l(t,e,r,n){var a=e&&e.prototype instanceof v?e:v,o=Object.create(a.prototype),s=new T(n||[]);return i(o,"_invoke",{value:z(t,r,s)}),o}function h(t,e,r){try{return{type:"normal",arg:t.call(e,r)}}catch(t){return{type:"throw",arg:t}}}e.wrap=l;var f="suspendedStart",d="suspendedYield",p="executing",m="completed",g={};function v(){}function _(){}function y(){}var b={};u(b,o,(function(){return this}));var w=Object.getPrototypeOf,k=w&&w(w(D([])));k&&k!==r&&n.call(k,o)&&(b=k);var x=y.prototype=v.prototype=Object.create(b);function E(t){["next","throw","return"].forEach((function(e){u(t,e,(function(t){return this._invoke(e,t)}))}))}function A(t,e){function r(i,a,o,s){var c=h(t[i],t,a);if("throw"!==c.type){var u=c.arg,l=u.value;return l&&"object"==S(l)&&n.call(l,"__await")?e.resolve(l.__await).then((function(t){r("next",t,o,s)}),(function(t){r("throw",t,o,s)})):e.resolve(l).then((function(t){u.value=t,o(u)}),(function(t){return r("throw",t,o,s)}))}s(c.arg)}var a;i(this,"_invoke",{value:function(t,n){function i(){return new e((function(e,i){r(t,n,e,i)}))}return a=a?a.then(i,i):i()}})}function z(e,r,n){var i=f;return function(a,o){if(i===p)throw Error("Generator is already running");if(i===m){if("throw"===a)throw o;return{value:t,done:!0}}for(n.method=a,n.arg=o;;){var s=n.delegate;if(s){var c=O(s,n);if(c){if(c===g)continue;return c}}if("next"===n.method)n.sent=n._sent=n.arg;else if("throw"===n.method){if(i===f)throw i=m,n.arg;n.dispatchException(n.arg)}else"return"===n.method&&n.abrupt("return",n.arg);i=p;var u=h(e,r,n);if("normal"===u.type){if(i=n.done?m:d,u.arg===g)continue;return{value:u.arg,done:n.done}}"throw"===u.type&&(i=m,n.method="throw",n.arg=u.arg)}}}function O(e,r){var n=r.method,i=e.iterator[n];if(i===t)return r.delegate=null,"throw"===n&&e.iterator.return&&(r.method="return",r.arg=t,O(e,r),"throw"===r.method)||"return"!==n&&(r.method="throw",r.arg=new TypeError("The iterator does not provide a '"+n+"' method")),g;var a=h(i,e.iterator,r.arg);if("throw"===a.type)return r.method="throw",r.arg=a.arg,r.delegate=null,g;var o=a.arg;return o?o.done?(r[e.resultName]=o.value,r.next=e.nextLoc,"return"!==r.method&&(r.method="next",r.arg=t),r.delegate=null,g):o:(r.method="throw",r.arg=new TypeError("iterator result is not an object"),r.delegate=null,g)}function C(t){var e={tryLoc:t[0]};1 in t&&(e.catchLoc=t[1]),2 in t&&(e.finallyLoc=t[2],e.afterLoc=t[3]),this.tryEntries.push(e)}function I(t){var e=t.completion||{};e.type="normal",delete e.arg,t.completion=e}function T(t){this.tryEntries=[{tryLoc:"root"}],t.forEach(C,this),this.reset(!0)}function D(e){if(e||""===e){var r=e[o];if(r)return r.call(e);if("function"==typeof e.next)return e;if(!isNaN(e.length)){var i=-1,a=function r(){for(;++i<e.length;)if(n.call(e,i))return r.value=e[i],r.done=!1,r;return r.value=t,r.done=!0,r};return a.next=a}}throw new TypeError(S(e)+" is not iterable")}return _.prototype=y,i(x,"constructor",{value:y,configurable:!0}),i(y,"constructor",{value:_,configurable:!0}),_.displayName=u(y,c,"GeneratorFunction"),e.isGeneratorFunction=function(t){var e="function"==typeof t&&t.constructor;return!!e&&(e===_||"GeneratorFunction"===(e.displayName||e.name))},e.mark=function(t){return Object.setPrototypeOf?Object.setPrototypeOf(t,y):(t.__proto__=y,u(t,c,"GeneratorFunction")),t.prototype=Object.create(x),t},e.awrap=function(t){return{__await:t}},E(A.prototype),u(A.prototype,s,(function(){return this})),e.AsyncIterator=A,e.async=function(t,r,n,i,a){void 0===a&&(a=Promise);var o=new A(l(t,r,n,i),a);return e.isGeneratorFunction(r)?o:o.next().then((function(t){return t.done?t.value:o.next()}))},E(x),u(x,c,"Generator"),u(x,o,(function(){return this})),u(x,"toString",(function(){return"[object Generator]"})),e.keys=function(t){var e=Object(t),r=[];for(var n in e)r.push(n);return r.reverse(),function t(){for(;r.length;){var n=r.pop();if(n in e)return t.value=n,t.done=!1,t}return t.done=!0,t}},e.values=D,T.prototype={constructor:T,reset:function(e){if(this.prev=0,this.next=0,this.sent=this._sent=t,this.done=!1,this.delegate=null,this.method="next",this.arg=t,this.tryEntries.forEach(I),!e)for(var r in this)"t"===r.charAt(0)&&n.call(this,r)&&!isNaN(+r.slice(1))&&(this[r]=t)},stop:function(){this.done=!0;var t=this.tryEntries[0].completion;if("throw"===t.type)throw t.arg;return this.rval},dispatchException:function(e){if(this.done)throw e;var r=this;function i(n,i){return s.type="throw",s.arg=e,r.next=n,i&&(r.method="next",r.arg=t),!!i}for(var a=this.tryEntries.length-1;a>=0;--a){var o=this.tryEntries[a],s=o.completion;if("root"===o.tryLoc)return i("end");if(o.tryLoc<=this.prev){var c=n.call(o,"catchLoc"),u=n.call(o,"finallyLoc");if(c&&u){if(this.prev<o.catchLoc)return i(o.catchLoc,!0);if(this.prev<o.finallyLoc)return i(o.finallyLoc)}else if(c){if(this.prev<o.catchLoc)return i(o.catchLoc,!0)}else{if(!u)throw Error("try statement without catch or finally");if(this.prev<o.finallyLoc)return i(o.finallyLoc)}}}},abrupt:function(t,e){for(var r=this.tryEntries.length-1;r>=0;--r){var i=this.tryEntries[r];if(i.tryLoc<=this.prev&&n.call(i,"finallyLoc")&&this.prev<i.finallyLoc){var a=i;break}}a&&("break"===t||"continue"===t)&&a.tryLoc<=e&&e<=a.finallyLoc&&(a=null);var o=a?a.completion:{};return o.type=t,o.arg=e,a?(this.method="next",this.next=a.finallyLoc,g):this.complete(o)},complete:function(t,e){if("throw"===t.type)throw t.arg;return"break"===t.type||"continue"===t.type?this.next=t.arg:"return"===t.type?(this.rval=this.arg=t.arg,this.method="return",this.next="end"):"normal"===t.type&&e&&(this.next=e),g},finish:function(t){for(var e=this.tryEntries.length-1;e>=0;--e){var r=this.tryEntries[e];if(r.finallyLoc===t)return this.complete(r.completion,r.afterLoc),I(r),g}},catch:function(t){for(var e=this.tryEntries.length-1;e>=0;--e){var r=this.tryEntries[e];if(r.tryLoc===t){var n=r.completion;if("throw"===n.type){var i=n.arg;I(r)}return i}}throw Error("illegal catch attempt")},delegateYield:function(e,r,n){return this.delegate={iterator:D(e),resultName:r,nextLoc:n},"next"===this.method&&(this.arg=t),g}},e}function L(t,e,r,n,i,a,o){try{var s=t[a](o),c=s.value}catch(t){return void r(t)}s.done?e(c):Promise.resolve(c).then(n,i)}function R(t){return function(){var e=this,r=arguments;return new Promise((function(n,i){var a=t.apply(e,r);function o(t){L(a,n,i,o,s,"next",t)}function s(t){L(a,n,i,o,s,"throw",t)}o(void 0)}))}}var j=[],F=0,P=null,N=null,U=null,W=null,Z=("".concat(f,"/upload"),"".concat(f,"/interactions")),M="".concat(f,"/generate_presigned_post"),G={};function H(t,e){G[t]||(G[t]={backStack:[],forwardStack:[],currentUrl:null});var r=G[t];return r.currentUrl?r.currentUrl===e?"reload":r.backStack.length>0&&r.backStack[r.backStack.length-1]===e?(r.forwardStack.push(r.currentUrl),r.currentUrl=r.backStack.pop(),"back"):r.forwardStack.length>0&&r.forwardStack[r.forwardStack.length-1]===e?(r.backStack.push(r.currentUrl),r.currentUrl=r.forwardStack.pop(),"forward"):(r.backStack.push(r.currentUrl),r.forwardStack=[],r.currentUrl=e,"new"):(r.currentUrl=e,"new")}function Y(t,e){var r;switch(t){case"click_a":case"click_b":case"click_c":return"Set Up Now"===e.target.innerText?"Why did you choose 'Set Up Now' instead of buy once, and why do you like this particular product?":"buy-now-button"===e.target.id?"Why did you choose to buy this product immediately, and what convinced you to skip further exploration of other options? Why do you like this particular product?":null!==(r=e.target.className)&&void 0!==r&&r.includes("sc-product-link")?"What made you click on this product, and what specific aspects attracted your attention compared to other search results?":"add-to-cart-button"===e.target.id?"Why did you decide to add this item to your cart, and are you planning to buy it now or later? What convinced you that this item was the right choice for your needs?":"What was your reason for clicking on this element?";case"scroll":return"What are you doing while scrolling—are you browsing search results, looking at reviews, or something else, and what are you hoping to find?";case"input":return"What are you searching for, and how did you decide on the search terms you used? Are you looking for a specific product, brand, or feature?";case"navigation":return"back"===e.navigationType?"Why did you decide to go back to the previous page, and what were you hoping to revisit or reconsider?":"forward"===e.navigationType?"Why did you decide to return to this page after previously navigating away, and what new or unresolved information are you looking for now?":"What is the reason for this ".concat(e.navigationType," navigation?");case"tabActivate":return"Why did you switch to this tab? Do you have specific task or information in mind?";default:return"What is the reason for the ".concat(t," action?")}}function K(t,e){return V.apply(this,arguments)}function V(){return(V=R(B().mark((function t(e,r){var n,i;return B().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:if(!e){t.next=9;break}return t.next=3,chrome.storage.local.get({screenshots:[]});case 3:return n=t.sent,(i=n.screenshots||[]).push([e,r]),t.next=8,chrome.storage.local.set({screenshots:i});case 8:return t.abrupt("return",!0);case 9:return t.abrupt("return",!1);case 10:case"end":return t.stop()}}),t)})))).apply(this,arguments)}function X(){return J.apply(this,arguments)}function J(){return(J=R(B().mark((function t(){var e,r,n;return B().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return t.prev=0,t.next=3,chrome.tabs.query({active:!0,currentWindow:!0});case 3:if(e=t.sent,r=I(e,1),!(n=r[0])){t.next=10;break}return t.next=9,chrome.tabs.captureVisibleTab(n.windowId,{format:"jpeg",quality:25});case 9:return t.abrupt("return",t.sent);case 10:t.next=15;break;case 12:t.prev=12,t.t0=t.catch(0),console.error("Error capturing screenshot:",t.t0);case 15:return t.abrupt("return",null);case 16:case"end":return t.stop()}}),t,null,[[0,12]])})))).apply(this,arguments)}function q(t){for(var e=0,r=0;r<t.length;r++)e=(e<<5)-e+t.charCodeAt(r),e|=0;return console.log("Hash value before return:",e),e.toString()}chrome.runtime.onMessage.addListener((function(t,e,r){return R(B().mark((function n(){var i,a,o,s,c,u,l,h;return B().wrap((function(n){for(;;)switch(n.prev=n.next){case 0:if("saveData"!==t.action){n.next=17;break}return n.prev=1,F++,a=F,console.log(a),o=t.data.uuid,s=function(){var e=R(B().mark((function e(){var r;return B().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return console.log("saveData ",t.data.eventType),e.next=3,chrome.storage.local.get({interactions:[]});case 3:return(r=(r=e.sent).interactions||[]).push(t.data),e.next=8,chrome.storage.local.set({interactions:r});case 8:case"end":return e.stop()}}),e)})));return function(){return e.apply(this,arguments)}}(),n.next=9,Promise.all([s(),et(null===(i=e.tab)||void 0===i?void 0:i.id,t.data.timestamp,t.data.eventType,t.data,o)]);case 9:r({success:!0}),n.next=16;break;case 12:n.prev=12,n.t0=n.catch(1),console.error("Error in saveData:",n.t0),r({success:!1,error:n.t0.message});case 16:return n.abrupt("return",!0);case 17:if("captureScreenshot"!==t.action){n.next=42;break}return n.prev=18,console.log("get screenshot request"),c=(new Date).getTime(),n.next=23,X();case 23:if(u=n.sent,console.log("capture screenshot time: ",(new Date).getTime()-c),!u){n.next=34;break}return n.next=28,K(u,t.screenshotId);case 28:l=n.sent,console.log("save screenshot success",l),console.log("time: ",(new Date).getTime()-c),r({success:l,message:l?void 0:"Failed to capture screenshot"}),n.next=35;break;case 34:r({success:!1,message:"Failed to capture screenshot"});case 35:n.next=41;break;case 37:n.prev=37,n.t1=n.catch(18),console.error("Error in captureScreenshot:",n.t1),r({success:!1,message:"Failed to capture screenshot"});case 41:return n.abrupt("return",!0);case 42:if("downloadData"!==t.action){n.next=56;break}return n.prev=43,console.log("downloadData"),n.next=47,rt();case 47:h=n.sent,r({success:h}),n.next=55;break;case 51:n.prev=51,n.t2=n.catch(43),console.error("Error handling download:",n.t2),r({success:!1,error:n.t2.message});case 55:return n.abrupt("return",!0);case 56:if("clearMemoryCache"!==t.action){n.next=59;break}try{j=[],F=0,[].length=0,j.length=0,r({success:!0})}catch(t){console.error("Error handling clearMemoryCache:",t),r({success:!1,error:t.message})}return n.abrupt("return",!0);case 59:case"end":return n.stop()}}),n,null,[[1,12],[18,37],[43,51]])})))(),!0}));var $=function(){var t=R(B().mark((function t(e,r){var n,i;return B().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return t.next=2,chrome.storage.local.get({htmlSnapshots:{}});case 2:return n=t.sent,(i=n.htmlSnapshots||{})[r]=e,t.next=7,chrome.storage.local.set({htmlSnapshots:i});case 7:case"end":return t.stop()}}),t)})));return function(e,r){return t.apply(this,arguments)}}(),Q=function(){var t=R(B().mark((function t(e,r,n,i,a,o){var s,c,u,l,h=arguments;return B().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return c={eventType:e,timestamp:r,target_url:n,htmlSnapshotId:i,uuid:o,pageMeta:h.length>7&&void 0!==h[7]?h[7]:null},(s=h.length>6&&void 0!==h[6]?h[6]:null)&&(c.navigationType=s),t.next=6,chrome.storage.local.get({interactions:[]});case 6:return u=t.sent,(l=u.interactions||[]).push(c),t.next=11,chrome.storage.local.set({interactions:l});case 11:case"end":return t.stop()}}),t)})));return function(e,r,n,i,a,o){return t.apply(this,arguments)}}(),tt=function(){var t=R(B().mark((function t(e,r,n){var i,a;return B().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return t.next=2,chrome.tabs.captureVisibleTab(e,{format:"jpeg",quality:25});case 2:return i=t.sent,a="screenshot_".concat(r,"_").concat(n),t.next=6,K(i,a);case 6:case"end":return t.stop()}}),t)})));return function(e,r,n){return t.apply(this,arguments)}}(),et=function(){var t=R(B().mark((function t(e,r,n,i,a){var o,s,c,u,l,h,f;return B().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:if(!(null!==(o=i.target)&&void 0!==o&&null!==(o=o.id)&&void 0!==o&&o.toLowerCase().includes("rufus")||null!==(s=i.target)&&void 0!==s&&null!==(s=s.className)&&void 0!==s&&s.toLowerCase().includes("rufus"))){t.next=2;break}return t.abrupt("return");case 2:if(c=Y(n,i),!(Math.random()<.15&&e)){t.next=24;break}return console.log("send popup"),t.prev=5,t.next=8,chrome.tabs.sendMessage(e,{action:"show_popup",question:c});case 8:if(u=t.sent,console.log("reason",u),!u||null===u.input){t.next=19;break}return l={action_uuid:a,timestamp:r,eventType:n,reason:u},t.next=14,chrome.storage.local.get({reasonsAnnotation:[]});case 14:return h=t.sent,(f=h.reasonsAnnotation||[]).push(l),t.next=19,chrome.storage.local.set({reasonsAnnotation:f});case 19:t.next=24;break;case 21:t.prev=21,t.t0=t.catch(5),console.error("Error popup:",t.t0);case 24:case"end":return t.stop()}}),t,null,[[5,21]])})));return function(e,r,n,i,a){return t.apply(this,arguments)}}();function rt(){return nt.apply(this,arguments)}function nt(){return(nt=R(B().mark((function t(){var e,r,n,i,a,o,s,c,f,d,p,m,g,v,_,y,b,w,k,x,S,A,O,T,D,L,R,j,F,P,N,U,W,Z,M,G,H,Y,K,V,X,J,q,$,Q,tt,et,rt,nt,it,at,ot,st,ct,ut,lt,ht;return B().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return t.prev=0,e=(new Date).toISOString().replace(/[:.]/g,"-"),t.next=4,chrome.storage.local.get({userId:""});case 4:return r=t.sent,n=r.userId,i=n||"unknown",a="".concat(l,"/USER_").concat(i,"/SESSION_").concat(e),t.next=10,chrome.storage.local.get({htmlSnapshots:[]});case 10:return o=t.sent,t.next=13,chrome.storage.local.get({interactions:[]});case 13:return s=t.sent,t.next=16,chrome.storage.local.get({orderDetails:[]});case 16:return c=t.sent,t.next=19,chrome.storage.local.get({screenshots:[]});case 19:return f=t.sent,t.next=22,chrome.storage.local.get({reasonsAnnotation:[]});case 22:return d=t.sent,p=o.htmlSnapshots||{},m=s.interactions||[],g=c.orderDetails||[],v=f.screenshots||[],_=d.reasonsAnnotation||[],t.next=30,chrome.storage.local.get({seen_interactions:[]});case 30:return y=t.sent,t.next=33,chrome.storage.local.get({seen_htmlSnapshots:[]});case 33:return b=t.sent,t.next=36,chrome.storage.local.get({seen_orderDetails:[]});case 36:return w=t.sent,t.next=39,chrome.storage.local.get({seen_screenshots:[]});case 39:return k=t.sent,t.next=42,chrome.storage.local.get({seen_reasonsAnnotation:[]});case 42:if(x=t.sent,S=y.seen_interactions||[],A=b.seen_htmlSnapshots||{},O=w.seen_orderDetails||[],T=k.seen_screenshots||[],D=x.seen_reasonsAnnotation||[],m=[].concat(C(S),C(m)),p=z(z({},A),p),g=[].concat(C(O),C(g)),v=[].concat(C(T),C(v)),_=[].concat(C(D),C(_)),h){t.next=75;break}console.log("downloading session info"),L="Session data for timestamp: ".concat(e,", user id: ").concat(n,",\n order details: \n ").concat(JSON.stringify(storeorderDetails)),chrome.downloads.download({url:"data:text/plain;charset=utf-8,"+encodeURIComponent(L),filename:"".concat(a,"/session_info.txt"),saveAs:!1}),console.log("downloading html snapshots"),R=0,j=Object.entries(p);case 59:if(!(R<j.length)){t.next=66;break}return F=I(j[R],2),P=F[0],N=F[1],t.next=63,chrome.downloads.download({url:"data:text/html;charset=utf-8,"+encodeURIComponent(N),filename:"".concat(a,"/html/").concat(P.replace(/[:.]/g,"-"),".html"),saveAs:!1});case 63:R++,t.next=59;break;case 66:console.log("downloading interactions"),U={interactions:m,reasons:_,orderDetails:c},W=JSON.stringify(U,null,2),chrome.downloads.download({url:"data:text/json;charset=utf-8,"+encodeURIComponent(W),filename:"".concat(a,"/interactions.json"),saveAs:!1}),console.log("downloading screenshots"),Z=E(v);try{for(Z.s();!(M=Z.n()).done;)G=I(M.value,2),H=G[0],Y=G[1],chrome.downloads.download({url:H,filename:"".concat(a,"/screenshots/").concat(Y.replace(/[:.]/g,"-"),".jpg"),saveAs:!1})}catch(t){Z.e(t)}finally{Z.f()}t.next=113;break;case 75:console.log("downloading zip file"),(K=new(u())).file("session_info.txt","Session data for timestamp: ".concat(e,"\n          \n user id: ").concat(i,"\n                \n order details:\n                \n ").concat(JSON.stringify(c))),V={interactions:m,reasons:_,orderDetails:c},X=JSON.stringify(V,null,2),K.file("interactions.json",X),J=K.folder("screenshots"),q=E(v),t.prev=83,q.s();case 85:if(($=q.n()).done){t.next=96;break}return Q=I($.value,2),tt=Q[0],et=Q[1],t.next=89,fetch(tt);case 89:return rt=t.sent,t.next=92,rt.blob();case 92:nt=t.sent,J.file(et.replace(/[:.]/g,"-")+".jpg",nt);case 94:t.next=85;break;case 96:t.next=101;break;case 98:t.prev=98,t.t0=t.catch(83),q.e(t.t0);case 101:return t.prev=101,q.f(),t.finish(101);case 104:for(it=K.folder("htmlSnapshots"),at=0,ot=Object.entries(p);at<ot.length;at++)st=I(ot[at],2),ct=st[0],ut=st[1],it.file(ct+".html",ut);return t.next=108,K.generateAsync({type:"blob"});case 108:lt=t.sent,console.log("zip file is generated"),(ht=new FileReader).onloadend=function(){var t=ht.result.split(",")[1];chrome.downloads.download({url:"data:application/zip;base64,"+t,filename:"".concat(a,".zip"),saveAs:!1})},ht.readAsDataURL(lt);case 113:return chrome.storage.local.remove(["seen_htmlSnapshots","seen_interactions","seen_orderDetails","seen_screenshots","seen_reasonsAnnotation"]),t.abrupt("return",!0);case 117:return t.prev=117,t.t1=t.catch(0),console.error("Error download data:",t.t1),t.abrupt("return",!1);case 121:case"end":return t.stop()}}),t,null,[[0,117],[83,98,101,104]])})))).apply(this,arguments)}function it(t){var e=new FormData;return e.append("key",t),Object.keys(W.fields).forEach((function(t){"key"!=t&&e.append(t,W.fields[t])})),e}chrome.tabs.onActivated.addListener(function(){var t=R(B().mark((function t(e){var r,n,i,a,o;return B().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return t.prev=0,r=e.tabId,t.next=4,chrome.tabs.get(r);case 4:if(n=t.sent){t.next=8;break}return console.error("Failed to get tab with ID: ".concat(r)),t.abrupt("return");case 8:if(console.log("Switched to tab ".concat(r," with URL: ").concat(n.url)),b(n.url),t.t0=n.url,!t.t0){t.next=15;break}return t.next=14,k(n.url);case 14:t.t0=!t.sent;case 15:if(!t.t0){t.next=20;break}i=(new Date).toISOString(),a=s(),o="html_".concat(q(n.url),"_").concat(i,"_").concat(a),chrome.tabs.sendMessage(r,{action:"getHTML"},function(){var t=R(B().mark((function t(e){var s,c,u;return B().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return s=null==e?void 0:e.html,c=null==e?void 0:e.pageMeta,F++,u=F,t.next=6,Promise.all([$(s,o),Q("tabActivate",i,n.url,o,u,a,null,c),tt(n.windowId,i,a),et(r,i,"tabActivate",{},a)]);case 6:case"end":return t.stop()}}),t)})));return function(e){return t.apply(this,arguments)}}());case 20:t.next=25;break;case 22:t.prev=22,t.t1=t.catch(0),console.error("Error in tab activate handler:",t.t1);case 25:case"end":return t.stop()}}),t,null,[[0,22]])})));return function(e){return t.apply(this,arguments)}}()),chrome.webNavigation.onCompleted.addListener(function(){var t=R(B().mark((function t(e){var r,n,i;return B().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:if(0===e.frameId){t.next=2;break}return t.abrupt("return");case 2:return console.log("webNavigation onCompleted event triggered:",e),b(e.url),t.next=6,k(e.url);case 6:if(t.sent){t.next=12;break}r=H(e.tabId,e.url),console.log("Navigation type: ".concat(r," for tab ").concat(e.tabId," to ").concat(e.url)),n=(new Date).toISOString(),i=s(),chrome.tabs.sendMessage(e.tabId,{action:"getHTML"},function(){var t=R(B().mark((function t(a){var o,s,c,u;return B().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return o=null==a?void 0:a.html,s=null==a?void 0:a.pageMeta,c="html_".concat(q(e.url),"_").concat(n,"_").concat(i),F++,u=F,t.t0=Promise,t.t1=$(o,c),t.t2=Q("navigation",n,e.url,c,u,i,r,s),t.t3=tt,t.next=11,chrome.tabs.get(e.tabId);case 11:return t.t4=t.sent.windowId,t.t5=n,t.t6=i,t.t7=(0,t.t3)(t.t4,t.t5,t.t6),t.t8=[t.t1,t.t2,t.t7],t.next=18,t.t0.all.call(t.t0,t.t8);case 18:if("new"===r||"reload"===r){t.next=22;break}return console.log("send message to popup navigation"),t.next=22,et(e.tabId,n,"navigation",{navigationType:r},i);case 22:case"end":return t.stop()}}),t)})));return function(e){return t.apply(this,arguments)}}());case 12:case"end":return t.stop()}}),t)})));return function(e){return t.apply(this,arguments)}}()),chrome.tabs.onRemoved.addListener((function(t){delete G[t]}));var at=function(){var t=R(B().mark((function t(e,r){var n;return B().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return t.next=2,fetch(e,r);case 2:if((n=t.sent).ok){t.next=6;break}throw console.log("response",n),new Error("HTTP error! Status: ".concat(n.status));case 6:return t.abrupt("return",n);case 7:case"end":return t.stop()}}),t)})));return function(e,r){return t.apply(this,arguments)}}();function ot(t){return st.apply(this,arguments)}function st(){return(st=R(B().mark((function t(e){var r,n,i,a,o;return B().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return r=new CompressionStream("gzip"),n=r.writable.getWriter(),i=new TextEncoder,a=i.encode(e),n.write(a),n.close(),t.next=8,new Response(r.readable).blob();case 8:return o=t.sent,t.abrupt("return",o);case 10:case"end":return t.stop()}}),t)})))).apply(this,arguments)}function ct(){P||(console.log("startPeriodicUpload"),P=setInterval(ut,1e4))}function ut(){return lt.apply(this,arguments)}function lt(){return(lt=R(B().mark((function t(){var r,n,i,a,o,s,c,u,h,f,p,m,g,v,_,y,b,w,k,x,S,A,O,T,D,L,R,j,F,G,H,Y,K,V,X,J,q,$,Q,tt,et,rt,nt,st,ut,lt,ht,ft,dt,pt,mt,gt,vt,_t,yt,bt,wt,kt,xt;return B().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return P&&(clearInterval(P),P=!1),t.prev=1,t.next=4,chrome.storage.local.get({interactions:[]});case 4:if(0!==(t.sent.interactions||[]).length){t.next=10;break}return console.log("No interactions to upload"),ct(),t.abrupt("return",!1);case 10:return t.next=12,chrome.storage.local.get({lastuploadTimestamp:null});case 12:return U=(U=t.sent).lastuploadTimestamp||null,i=(new Date).toISOString(),t.next=17,chrome.storage.local.get({user_interaction_tracker_last_timestamp:null});case 17:return(N=(N=t.sent).user_interaction_tracker_last_timestamp||null)&&console.log("lastTimestamp restored: ",N),a=N||i.replace(/[:.]/g,"-"),t.next=23,chrome.storage.local.set({user_interaction_tracker_last_timestamp:a});case 23:return t.next=25,chrome.storage.local.get({userId:""});case 25:return o=t.sent,s=o.userId,c=s||"unknown",u="".concat(l,"/USER/").concat(c),t.next=31,chrome.storage.local.get({htmlSnapshots:[]});case 31:return h=t.sent,t.next=34,chrome.storage.local.get({orderDetails:[]});case 34:return f=t.sent,t.next=37,chrome.storage.local.get({screenshots:[]});case 37:return p=t.sent,t.next=40,chrome.storage.local.get({reasonsAnnotation:[]});case 40:return m=t.sent,t.next=43,chrome.storage.local.get({interactions:[]});case 43:if(g=t.sent,v=g.interactions||[],_=h.htmlSnapshots||{},y=f.orderDetails||[],b=p.screenshots||[],w=m.reasonsAnnotation||[],k=v.filter((function(t){return!U||t.timestamp>U})),x=Object.entries(_).filter((function(t){var e=I(t,2),r=e[0],n=(e[1],r.match(/_(\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}.\d{3}Z)_/));if(!n)return!0;var i=n[1];return!U||i>U})),S=b.filter((function(t){var e=I(t,2),r=(e[0],e[1].match(/screenshot_(.+?)_/));if(!r)return!0;var n=r[1];return!U||n>U})),A=w.filter((function(t){return!U||t.timestamp>U})),O=y.filter((function(t){return!U||t.timestamp>U})),T={interactions:k,reasons:A,orderDetails:O},W&&!((null===(r=W)||void 0===r?void 0:r.expire_timestamp)<Date.now()/1e3)&&null!==(n=W)&&void 0!==n&&null!==(n=n.fields)&&void 0!==n&&n.key.includes(c)){t.next=65;break}return console.log("getting new post url"),console.log("".concat(M,"?user_id=").concat(c)),t.next=60,at("".concat(M,"?user_id=").concat(c),{method:"GET"});case 60:return L=t.sent,t.next=63,L.json();case 63:W=t.sent,console.log("new post url received",(null===(D=W)||void 0===D?void 0:D.expire_timestamp)-Date.now()/1e3);case 65:return t.prev=65,R=new Blob(["Session data for timestamp: ".concat(a,"\n                    \n user id: ").concat(c,"\n                    \n order details:\n                    \n ").concat(JSON.stringify(O))],{type:"text/plain"}),(j=it("".concat(u,"/order_info_").concat(a,".txt"))).append("file",R),console.log("uploading session info"),t.next=72,at(W.url,{method:"POST",body:j});case 72:console.log("uploading html snapshots"),F=E(x),t.prev=74,F.s();case 76:if((G=F.n()).done){t.next=87;break}return H=I(G.value,2),Y=H[0],K=H[1],t.next=80,ot(K);case 80:return V=t.sent,(X=it("".concat(u,"/html/").concat(Y,".html.gz"))).append("file",V),t.next=85,at(W.url,{method:"POST",body:X});case 85:t.next=76;break;case 87:t.next=92;break;case 89:t.prev=89,t.t0=t.catch(74),F.e(t.t0);case 92:return t.prev=92,F.f(),t.finish(92);case 95:console.log("uploading screenshots"),J=E(S),t.prev=97,J.s();case 99:if((q=J.n()).done){t.next=114;break}return $=I(q.value,2),Q=$[0],tt=$[1],t.next=103,at(Q);case 103:return et=t.sent,t.next=106,et.blob();case 106:return rt=t.sent,(nt=it("".concat(u,"/screenshots/").concat(tt.replace(/[:.]/g,"-"),".jpg"))).append("file",rt),console.log("uploading screenshots"),t.next=112,at(W.url,{method:"POST",body:nt}).catch((function(){throw new Error("Error: ".concat(e))}));case 112:t.next=99;break;case 114:t.next=119;break;case 116:t.prev=116,t.t1=t.catch(97),J.e(t.t1);case 119:return t.prev=119,J.f(),t.finish(119);case 122:return console.log("uploading interactions"),st=JSON.stringify(T,null,2),ut=new Blob([st],{type:"application/json"}),(lt=it("".concat(u,"/interactions_").concat(a,".json"))).append("file",ut),t.next=129,at(W.url,{method:"POST",body:lt});case 129:return(ht=new FormData).append("interactions",st),ht.append("user_id",c),console.log("uploading interactions as a json"),t.next=135,at(Z,{method:"POST",body:ht});case 135:t.next=142;break;case 137:return t.prev=137,t.t2=t.catch(65),ct(),console.error("Error uploading data:",t.t2),t.abrupt("return",!1);case 142:if(!c.includes(d)){t.next=178;break}return t.next=145,chrome.storage.local.get({seen_interactions:[]});case 145:return ft=t.sent,t.next=148,chrome.storage.local.get({seen_htmlSnapshots:[]});case 148:return dt=t.sent,t.next=151,chrome.storage.local.get({seen_orderDetails:[]});case 151:return pt=t.sent,t.next=154,chrome.storage.local.get({seen_screenshots:[]});case 154:return mt=t.sent,t.next=157,chrome.storage.local.get({seen_reasonsAnnotation:[]});case 157:return gt=t.sent,vt=ft.interactions||[],_t=dt.htmlSnapshots||{},yt=pt.orderDetails||[],bt=mt.screenshots||[],wt=gt.reasonsAnnotation||[],vt=[].concat(C(vt),C(v)),_t=z(z({},_t),_),yt=[].concat(C(yt),C(y)),bt=[].concat(C(bt),C(b)),wt=[].concat(C(wt),C(w)),t.next=170,chrome.storage.local.set({seen_interactions:vt});case 170:return t.next=172,chrome.storage.local.set({seen_htmlSnapshots:_t});case 172:return t.next=174,chrome.storage.local.set({seen_orderDetails:yt});case 174:return t.next=176,chrome.storage.local.set({seen_screenshots:bt});case 176:return t.next=178,chrome.storage.local.set({seen_reasonsAnnotation:wt});case 178:return N=null,U=i,t.next=182,chrome.storage.local.set({lastuploadTimestamp:U});case 182:return t.next=184,chrome.storage.local.get({interactions:[],htmlSnapshots:{},orderDetails:[],screenshots:[],reasonsAnnotation:[]});case 184:return kt=t.sent,xt={interactions:kt.interactions.filter((function(t){return t.timestamp>i})),htmlSnapshots:Object.fromEntries(Object.entries(kt.htmlSnapshots).filter((function(t){var e=I(t,1)[0].match(/_(\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}.\d{3}Z)_/);return!e||e[1]>i}))),orderDetails:kt.orderDetails.filter((function(t){return t.timestamp>i})),screenshots:kt.screenshots.filter((function(t){var e=I(t,2),r=(e[0],e[1].match(/screenshot_(.+?)_/));return!r||r[1]>i})),reasonsAnnotation:kt.reasonsAnnotation.filter((function(t){return t.timestamp>i}))},t.next=188,chrome.storage.local.set(xt);case 188:return ct(),t.abrupt("return",!0);case 192:return t.prev=192,t.t3=t.catch(1),ct(),console.error("Error uploading data:",t.t3),t.abrupt("return",!1);case 197:case"end":return t.stop()}}),t,null,[[1,192],[65,137],[74,89,92,95],[97,116,119,122]])})))).apply(this,arguments)}null==P&&(console.log("--initializing interval--"),ct()),chrome.storage.local.onChanged.addListener((function(t){t.userId&&chrome.tabs.query({active:!0,currentWindow:!0},(function(t){var e;b(null===(e=t[0])||void 0===e?void 0:e.url)}))})),chrome.runtime.onMessage.addListener((function(t,e,r){"invalid_user_id"===t.action&&console.log("invalid_user_id",t)}))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,