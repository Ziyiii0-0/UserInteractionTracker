(()=>{"use strict";const e=["www.amazon.com"],t=["https://www.amazon.com/checkout/","https://www.amazon.com/gp/buy/","https://www.amazon.com/a/addresses","https://www.amazon.com/cpe/yourpayments/","https://www.amazon.com/ap/signin","https://www.amazon.com/ap/cvf/","https://www.amazon.com/ap/profile/","https://www.amazon.com/ax/account/","https://www.amazon.com/gp/product/handle-buy-box/","https://www.amazon.com/gp/checkoutportal/","https://www.amazon.com/gp/cart/desktop/","https://www.amazon.com/gp/primecentral/editPaymentPreference"],a={selector:"#navbar-main",name:"nav_bar",children:[{selector:"#nav-search-bar-form",children:[{selector:"input#twotabsearchtextbox",name:"search_input",clickable:!0,generate_metadata:e=>({name:"search_term",data:{term:null==e?void 0:e.value}})},{selector:"#nav-search-submit-button",clickable:!0,name:"search_button"}]},{selector:"#nav-link-accountList",text_selector:"#nav-link-accountList span.nav-line-2",add_text:!0,clickable:!0,name:"account_and_list_button"},{selector:"#nav-orders",add_text:!0,clickable:!0,name:"order_button"},{selector:"#nav-cart",text_selector:"#nav-cart .nav-line-2",add_text:!0,clickable:!0,name:"cart_button"},{selector:"#nav-flyout-searchAjax",name:"suggested_terms",children:[{selector:"div.s-suggestion-ellipsis-direction",name:"from_text",add_text:!0,clickable:!0}]},{selector:"#nav-xshop",name:"stores",children:[{selector:"a",direct_child:!0,clickable:!0,add_text:!0,name:"from_text"}]}]},r={selector:"#nav-flyout-ewc",name:"cart_side_bar",children:[{selector:"div.ewc-cart-header",add_text:!0},{selector:"div.ewc-compact-actions a",add_text:!0,clickable:!0,name:"go_to_cart"},{selector:"#ewc-compact-body ul",name:"product_list",children:[{selector:"li div[id^='sc-item']",name:"from_text",text_js:e=>{const t=e.querySelector("div.ewc-item-image a.sc-product-link img:not(.ewc-sfl-image-small)");return(null==t?void 0:t.alt)||""},children:[{selector:"div.ewc-item-image a.sc-product-link img:not(.ewc-sfl-image-small)",name:"product_image",clickable:!0,add_text:!0,text_format:"Product Image"},{selector:"span.ewc-unit-price",add_text:!0},{selector:"select",name:"drop_down_list"},{selector:'div[data-action="a-dropdown-button"], span[data-action="a-dropdown-button"]',name:"drop_down_list",clickable:!0,add_text:!0},{selector:"div.ewc-delete-icon-container button",name:"delete",add_text:!0,text_format:"delete",clickable:!0}],generate_metadata:e=>{var t;const a=e.getAttribute("data-asin"),r=e.querySelector("span.ewc-unit-price"),i=null===(t=null==r?void 0:r.innerText)||void 0===t?void 0:t.replace(/[\n]/g,"").trim(),l=e.querySelector("div.ewc-item-image a.sc-product-link img:not(.ewc-sfl-image-small)"),n=null==l?void 0:l.alt,o=null==l?void 0:l.parentElement,c=null==o?void 0:o.getAttribute("href"),d=e.querySelector('div[data-action="a-dropdown-button"], span[data-action="a-dropdown-button"]');return{name:"cart_items",data:{title:n,asin:a,price:i,url:c,quantity:null==d?void 0:d.innerText}}}}]}]},i={selector:"#productFactsDesktopExpander",add_text:!0,class:"product-facts"},l={selector:"div.mir-layout-DELIVERY_BLOCK-slot-PRIMARY_DELIVERY_MESSAGE_LARGE",add_text:!0,class:"product-delivery"},n={selector:'#selectQuantity, div[id^="qs-widget-button-container-atfc"]',name:"quantity_selector",children:[{selector:"label",add_text:!0},{selector:"span.a-dropdown-prompt",add_text:!0,generate_metadata:e=>({name:"product_quantity",data:{quantity:e.innerText}})},{selector:"select",name:"drop_down_list"},{selector:"button",name:"drop_down_list",clickable:!0,add_text:!0},{selector:'div.qs-widget-dropdown-wrapper span[data-action="qs-widget-dropdown-decl"]',add_text:!0,clickable:!0,use_root:!0,name:"from_text",text_format:"Drop Down Option {}"}]},o={selector:"input[name='submit.add-to-cart'], input[name='submit.add-to-cart-ubb'], #freshAddToCartButton input",add_text:!0,clickable:!0,name:"add_to_cart",class:"product-add-to-cart"},c={selector:"input[name='submit.buy-now']",add_text:!0,clickable:!0,name:"buy_now",class:"product-buy-now"},d={selector:"#buyBoxAccordion > div.a-box.celwidget",name:"from_text",text_selector:"div.accordion-caption > span",children:[{selector:"div[data-csa-c-content-id='offer_display_desktop_accordion_header'], div[data-csa-c-content-id='offer_display_mobile_accordion_header']",name:"accordion_selector",add_text:!0,clickable:!0,text_selector:"h5 span.a-text-bold"},{selector:"div.a-accordion-inner.accordion-row-content",name:"purchase_form",children:[i,l,n,{selector:"#replenishmentFrequency_feature_div",name:"delivery_frequency_selector",text_selector:"div.a-section.a-spacing-micro > span",add_text:!0,children:[{selector:"#rcxOrdFreqOnmlWrapper span.a-dropdown-prompt",add_text:!0},{selector:"#rcxOrdFreqOnmlWrapper select",name:"drop_down_list"}]},{selector:"#rcx-subscribe-submit-button-announce",add_text:!0,clickable:!0,name:"set_up_now",class:"product-set-up-now"},o,c]}]},s={selector:"#gsod_singleOfferDisplay_Desktop",children:[{selector:"#addToCart",name:"purchase_form",children:[i,l,n,o,c]}]},u={selector:"li.a-carousel-card:not(.a-carousel-card-empty), #gridItemRoot",name:"from_text",text_js:e=>{const t=e.querySelector('a div[class*="sc-truncate-desktop"], a span.title, a div[class*="sc-css-line-clamp"]');return(null==t?void 0:t.title)||(null==t?void 0:t.innerText)||""},children:[{selector:'a:has(img[class*="product-image"], img.a-dynamic-image)',name:"product_image",add_text:!0,text_format:"Product Image",clickable:!0},{selector:'a div[class*="sc-truncate-desktop"], a span.title, a div[class*="sc-css-line-clamp"]',add_text:!0,name:"product_title",clickable:!0},{selector:'a:has(i[class*="star"])',name:"product_review",clickable:!0,add_text:!0,text_js:e=>e.title},{selector:'div[class*="sc-price"]',add_text:!0,text_selector:'span[class*="sc-price"]',name:"product_price",clickable:!0},{selector:"div.a-section.aok-relative:has(span.a-price span.a-offscreen)",add_text:!0,clickable:!0,name:"product_price"},{selector:"span.a-price span.a-offscreen",add_text:!0},{selector:"a.pBooks-sf-points-component",add_text:!0,clickable:!0,name:"product_points"},{selector:'input[name="submit.addToCart"]',name:"add_to_cart",add_text:!0,text_format:"Add To Cart",clickable:!0},{selector:'div[name="ax-qs"], div[id^="atcStepperSection"]',children:[{selector:"button[aria-label='Decrease quantity by one'], button[data-action='remove']",add_text:!0,text_format:"Decrease quantity by one",clickable:!0,name:"from_text"},{selector:"div[role='spinbutton'], span.atcStepperQuantity",add_text:!0,text_format:"Current Quantity: {}"},{selector:"button[aria-label='Increase quantity by one'], button[data-action='add']",add_text:!0,text_format:"Increase quantity by one",clickable:!0,name:"from_text"}]}],generate_metadata:e=>{var t,a;const r=e.querySelector('div[id*="sc-turbo-container"], div[data-asin]'),i=(null===(t=null==r?void 0:r.getAttribute("id"))||void 0===t?void 0:t.split("-").pop())||(null==r?void 0:r.getAttribute("data-asin")),l=e.querySelector('a span[class*="sc-price"], span.a-price span.a-offscreen'),n=null===(a=null==l?void 0:l.innerText)||void 0===a?void 0:a.replace(/[\n]/g,""),o=e.querySelector('a div[class*="sc-truncate-desktop"], a span.title, a div[class*="sc-css-line-clamp"]'),c=(null==o?void 0:o.title)||(null==o?void 0:o.innerText)||"",d=e.querySelector('a:has(div[class*="sc-truncate-desktop"]), a:has(span.title)'),s=null==d?void 0:d.getAttribute("href"),u=e.querySelector('div[name="ax-qs"] div[role="spinbutton"], div[id^="atcStepperSection"] span.atcStepperQuantity');return{name:"promotion_items",data:{title:c,asin:i,price:n,url:s,quantity:(null==u?void 0:u.innerText)||""}}}},m=[a,{selector:"#sc-collapsed-carts-container",name:"cart",children:[{selector:"div.sc-localmarket-text-logo",add_text:!0},{selector:'div[data-name="collapsed_item_list"]',clickable:!0,name:"item_list"},{selector:'div.sc-buy-box-inner-box input[name^="proceedToALMCheckout"]',clickable:!0,name:"check_out",add_text:!0},{selector:"div.sc-buy-box-inner-box a",clickable:!0,name:"from_text",add_text:!0}]},{selector:"div[data-name='Active Items']",name:"active_item_list",children:[{selector:"div.sc-list-item-content",text_selector:"div.sc-item-content-group ul > li > span.a-list-item > a.sc-product-title span.a-truncate-full",name:"from_text",children:[{selector:"div.sc-item-check-checkbox-selector label",clickable:!0,name:"checkbox"},{selector:"div.sc-image-wrapper a",clickable:!0,name:"product_image",add_text:!0,text_format:"Product Image"},{selector:"div.sc-item-content-group ul > li > span.a-list-item > a.sc-product-title",clickable:!0,text_selector:"span.a-truncate-full",add_text:!0,name:"product_detail"},{selector:"li.sc-delivery-messaging",add_text:!0},{selector:"div.sc-badge-price-to-pay span.sc-product-price span:not(.a-offscreen)",add_text:!0},{selector:"li.sc-product-variation",add_text:!0},{selector:"div.sc-item-content-group span.sc-quantity-stepper",children:[{selector:"button[aria-label='Decrease quantity by one']",add_text:!0,text_js:function(e){return e.hasAttribute("aria-label")?e.getAttribute("aria-label"):""},clickable:!0,name:"decrease_quantity_by_one"},{selector:"div[role='spinbutton']",add_text:!0,text_format:"Current Quantity: {}"},{selector:"button[aria-label='Increase quantity by one']",add_text:!0,text_js:function(e){return e.hasAttribute("aria-label")?e.getAttribute("aria-label"):""},clickable:!0,name:"increase_quantity_by_one"}]},{selector:"div.sc-item-content-group input[data-action='delete']",add_text:!0,clickable:!0,name:"delete"},{selector:"div.sc-item-content-group input[data-action='save-for-later']",add_text:!0,clickable:!0,name:"save_for_later"}],generate_metadata:e=>{var t,a;const r=null===(t=e.parentElement)||void 0===t?void 0:t.getAttribute("data-asin"),i=e.querySelector("div.sc-badge-price-to-pay span.sc-product-price span:not(.a-offscreen)"),l=null===(a=null==i?void 0:i.innerText)||void 0===a?void 0:a.replace(/[\n]/g,""),n=e.querySelector("div.sc-item-content-group ul > li > span.a-list-item > a.sc-product-title span.a-truncate-full"),o=null==n?void 0:n.innerText,c=e.querySelector("div.sc-item-content-group ul > li > span.a-list-item > a.sc-product-title"),d=null==c?void 0:c.getAttribute("href"),s=e.querySelector("li.sc-delivery-messaging"),u=null==s?void 0:s.innerText.replace(/[\n]/g," "),m=e.querySelector("div.sc-item-content-group span.sc-quantity-stepper div[role='spinbutton']"),p=null==m?void 0:m.innerText,_=e.querySelector("div.sc-item-check-checkbox-selector input"),v=null!==(null==_?void 0:_.getAttribute("checked")),b=e.querySelectorAll("li.sc-product-variation > span"),h=[];for(const e of b){const t=null==e?void 0:e.querySelector("span.a-text-bold"),a=null==e?void 0:e.querySelector("span:not(.a-text-bold)"),r=null==t?void 0:t.innerText.replace(/[:\n]/g,"").trim(),i=null==a?void 0:a.innerText.replace(/[:\n]/g,"").trim(),l={[r]:i};h.push(l)}return{name:"active_items",data:{title:o,asin:r,price:l,url:d,delivery:u,quantity:p,selected:v,options:h}}}}]},{selector:"#sc-buy-box-ptc-button input",add_text:!0,clickable:!0,name:"check_out"}],p={selector:'li.a-carousel-card, div[id^="gridElement"]',name:"from_text",text_selector:"span.a-truncate-full",children:[{selector:"a:has(div.a-image-container)",name:"product_image",add_text:!0,text_format:"Product Image",clickable:!0},{selector:"span[id^='qs-widget-atc-button']",name:"add_to_cart",add_text:!0,text_format:"Add To Cart",clickable:!0},{selector:'div[id^="qs-widget-button-container-atfc"]',name:"quantity_selector",children:[{selector:"input[aria-label^='Remove']",add_text:!0,text_format:"Decrease quantity by 1",name:"from_text",clickable:!0},{selector:"button[id^='qs-widget-button-atfc']",add_text:!0},{selector:"input[aria-label^='Add']",add_text:!0,text_format:"Increase quantity by 1",name:"from_text",clickable:!0}]},{selector:"a > span > span > span.a-truncate-full",add_text:!0,name:"product_detail",clickable:!0},{selector:"div > span > span > span.a-truncate-full",add_text:!0},{selector:'div[class*="priceToPay"] span.a-offscreen',add_text:!0},{selector:"li.a-carousel-card a.a-size-mini",name:"from_text",clickable:!0,add_text:!0}],generate_metadata:e=>{var t,a;const r=e.querySelector('div[data-csa-c-item-id^="amzn1.asin"]'),i=null===(t=null==r?void 0:r.getAttribute("data-csa-c-item-id"))||void 0===t?void 0:t.split(":")[0].split(".").pop(),l=e.querySelector('div[class*="priceToPay"] span.a-offscreen'),n=null===(a=null==l?void 0:l.innerText)||void 0===a?void 0:a.replace(/[\n]/g,""),o=e.querySelector("span.a-truncate-full"),c=null==o?void 0:o.innerText,d=e.querySelector("a:has(span.a-truncate-full)"),s=null==d?void 0:d.getAttribute("href"),u=e.querySelector('div[id^="qs-widget-button-container-atfc"] button[id^="qs-widget-button-atfc"]');return{name:"promotion_items",data:{title:c,asin:i,price:n,url:s,quantity:null==u?void 0:u.innerText}}}},_=[{selector:"head",children:[{selector:"title",add_text:!0}]},{selector:"body",children:[a,{selector:"#zg_header",name:"categories",children:[{selector:"li a",clickable:!0,name:"from_text",add_text:!0}]},{selector:'div[class*="zg-banner-landing-page-header"]',add_text:!0},{selector:'div[class*="g-nav-tree-all_style_zg-browse-root"]',name:"departments",children:[{selector:'div[class*="zg-nav-tree-all_style_zg-root-browse-item"] > a, div[class*="zg-nav-tree-all_style_zg-browse-item"] > a',add_text:!0,clickable:!0,name:"from_text"},{selector:'div[class*="zg-nav-tree-all_style_zg-root-browse-item"] > span, div[class*="zg-nav-tree-all_style_zg-browse-item"] > span',name:"from_text",add_text:!0}]},{selector:'div[id^="CardInstance"]',text_selector:"h2.a-carousel-heading, h1",name:"from_text",children:[{selector:"h2.a-carousel-heading, h1",add_text:!0},{selector:"div.a-carousel-header-row a",add_text:!0,clickable:!0,name:"from_text"},u]}]}],v=[{match:"/",match_method:"url",match_with_ref:!0,selector:"html",children:[{selector:"head",children:[{selector:"title",add_text:!0}]},{selector:"body",children:[a,r,{selector:"div.gw-col",text_selector:"h1 span.a-truncate-full, h2 span.a-truncate-full, h3 span.a-truncate-full, h1:not(:has(span.a-truncate-full)), h2:not(:has(span.a-truncate-full)), h3:not(:has(span.a-truncate-full))",name:"from_text",children:[{selector:"h1 span.a-truncate-full, h2 span.a-truncate-full, h3 span.a-truncate-full, h1:not(:has(span.a-truncate-full)), h2:not(:has(span.a-truncate-full)), h3:not(:has(span.a-truncate-full))",add_text:!0},{selector:"a",add_text:!0,clickable:!0,name:"from_text",text_js:e=>{var t,a;return e.getAttribute("aria-label")||(null===(t=e.querySelector("img"))||void 0===t?void 0:t.alt)||(null===(a=e.querySelector("span.a-truncate-full"))||void 0===a?void 0:a.innerText)||e.innerText||""}}]},{selector:'div[data-card-metrics-id*="rhf"]',text_selector:"h2.a-carousel-heading",name:"from_text",children:[{selector:"h2.a-carousel-heading",add_text:!0},u]},{selector:'div[data-card-metrics-id*="rvi"]',text_selector:"h2.a-carousel-heading",name:"from_text",children:[{selector:"h2.a-carousel-heading",add_text:!0},{selector:"a",clickable:!0,add_text:!0,name:"from_text",text_js:e=>{var t;return(null===(t=e.querySelector("img"))||void 0===t?void 0:t.alt)||e.innerText||""}}]}]}]},{match:"/fmc/storefront",match_method:"url",match_with_ref:!0,selector:"html",children:[{selector:"head",children:[{selector:"title",add_text:!0}]},{selector:"body",children:[a,r]}]},{match:"/s",match_method:"url",selector:"html",children:[{selector:"head",children:[{selector:"title",add_text:!0}]},{selector:"body",children:[a,r,{selector:"div.sf-rib-v1-toolbar",name:"refinements_toolbar",children:[{selector:'span[data-csa-c-slot-id="nav-rib"], div[data-csa-c-slot-id="nav-rib"], a.sf-clear-all',add_text:!0,clickable:!0,name:"from_text",text_js:e=>"s-all-filters"==e.getAttribute("data-csa-c-content-id")?"Show All Filters":e.getAttribute("aria-label")||e.innerText||""},{selector:"div.sf-rib-v1-dropdown-main-container",name:"drop_down_lists",children:[{selector:"div.a-section.a-spacing-none",name:"from_text",text_selector:"div.sf-rib-v1-dropdown-popup-title-container",direct_child:!0,children:[{selector:"div.sf-rib-v1-dropdown-popup-title-container",add_text:!0},{selector:'ul span[role="listitem"]',clickable:!0,add_text:!0,name:"from_text",children:[{selector:'input[type="checkbox"]'}]},{selector:"div.sf-rib-v1-range-slider-label-container",add_text:!0},{selector:"div.s-slider-container div.s-lower-bound input",name:"price_min_value",add_text:!0,clickable:!0,keep_attr:["min","max","step"],override_attr:{step_values:e=>{const t=e.closest("form");if(t){const e=t.getAttribute("data-slider-props");if(e)return JSON.parse(e).stepLabels}return""},current_value:e=>{const t=Number.parseInt(e.getAttribute("value"));if(null!==t){const a=e.closest("form");if(a){const e=a.getAttribute("data-slider-props");if(e)return JSON.parse(e).stepLabels[t]}}return""}}},{selector:"div.s-slider-container div.s-upper-bound input",name:"price_min_value",add_text:!0,clickable:!0,keep_attr:["min","max","step"],override_attr:{step_values:e=>{const t=e.closest("form");if(t){const e=t.getAttribute("data-slider-props");if(e)return JSON.parse(e).stepLabels}return""},current_value:e=>{const t=Number.parseInt(e.getAttribute("value"));if(null!==t){const a=e.closest("form");if(a){const e=a.getAttribute("data-slider-props");if(e)return JSON.parse(e).stepLabels[t]}}return""}}},{selector:"div.sf-rib-v1-dropdown-buttons button, div.sf-rib-v1-dropdown-buttons input",name:"from_text",add_text:!0,clickable:!0}]}]}]},{selector:"#s-refinements",name:"refinements",children:[{selector:"#topRefinements\\/0",name:"top_refinements",add_text:"true",text_format:"Recently used filters",children:[{selector:"li",add_text:!0,name:"from_text",clickable:!0,text_js:function(e){try{let t="";if(!e)return t;const a=e.querySelector("a.a-link-normal.s-navigation-item");if(e.innerText&&e.innerText.trim())t+=e.innerText.trim(),a&&a.hasAttribute("title")&&(t+=" ",t+=a.getAttribute("title"));else{const a=e.querySelector("a.a-link-normal.s-navigation-item");a&&a.hasAttribute("title")&&(t+=a.getAttribute("title"))}return t}catch(e){return console.log(e),""}},children:[{selector:"input[type='checkbox']"}]}]},{selector:"div.a-section.a-spacing-none:not(:has(#n-title)):has(span.a-size-base.a-color-base.puis-bold-weight-text):has(ul span.a-declarative > span > li):not(#reviewsRefinements):not(#departments):not(#priceRefinements):not(#filters)",name:"from_text",text_selector:"span.a-size-base.a-color-base.puis-bold-weight-text",children:[{selector:"span.a-size-base.a-color-base.puis-bold-weight-text",add_text:!0,class:"refinement-title"},{selector:"a.s-navigation-clear-link",add_text:!0,name:"clear_selection",clickable:!0},{selector:"ul > span.a-declarative > span > li:has(a.a-link-normal.s-navigation-item)",add_text:!0,name:"from_text",clickable:!0,direct_child:!0,text_js:function(e){try{let t="";if(!e)return t;const a=e.querySelector("a.a-link-normal.s-navigation-item");if(e.innerText&&e.innerText.trim())t+=e.innerText.trim(),a&&a.hasAttribute("title")&&(t+=" ",t+=a.getAttribute("title"));else{const a=e.querySelector("a.a-link-normal.s-navigation-item");a&&a.hasAttribute("title")&&(t+=a.getAttribute("title"))}return a&&a.getAttribute("aria-current"),t}catch(e){return console.log(e),""}},generate_metadata:e=>{var t,a,r;let i="";const l=e.querySelector("a.a-link-normal.s-navigation-item");if(e.innerText&&e.innerText.trim())i+=e.innerText.trim(),l&&l.hasAttribute("title")&&(i+="_",i+=l.getAttribute("title"));else{const t=e.querySelector("a.a-link-normal.s-navigation-item");t&&t.hasAttribute("title")&&(i+=t.getAttribute("title"))}const n=null===(a=null===(t=e.closest("ul"))||void 0===t?void 0:t.parentElement)||void 0===a?void 0:a.firstElementChild,o=null===(r=null==n?void 0:n.innerText)||void 0===r?void 0:r.trim().replace(/[ ]/g,"_").toLowerCase().trim().replace(/^_+|_+$/g,"").replace(/[_\d]+$/,"");let c="";return l&&l.hasAttribute("href")&&(c=l.getAttribute("href")),l&&"true"===l.getAttribute("aria-current")?{name:"refinements."+o,data:{title:(null==i?void 0:i.trim())||"",selected:!0,url:c}}:{name:"refinements."+o,data:{title:(null==i?void 0:i.trim())||"",selected:!1,url:c}}},children:[{selector:"input[type='checkbox']"}]},{selector:"ul > span.a-declarative > li > span > div[data-a-expander-name='filter-content-expander']",name:"more_options",children:[{selector:"a[data-csa-c-func-deps='aui-da-a-expander-toggle']",name:"toggle_expansion",add_text:!0},{selector:"li",add_text:!0,name:"from_text",clickable:!0,text_js:function(e){try{let t="";if(!e)return t;const a=e.querySelector("a.a-link-normal.s-navigation-item");if(e.innerText&&e.innerText.trim())t+=e.innerText.trim(),a&&a.hasAttribute("title")&&(t+=" ",t+=a.getAttribute("title"));else{const a=e.querySelector("a.a-link-normal.s-navigation-item");a&&a.hasAttribute("title")&&(t+=a.getAttribute("title"))}return a&&a.getAttribute("aria-current"),t}catch(e){return console.log(e),""}},generate_metadata:e=>{var t,a,r,i,l;let n="";const o=e.querySelector("a.a-link-normal.s-navigation-item");if(e.innerText&&e.innerText.trim())n+=e.innerText.trim(),o&&o.hasAttribute("title")&&(n+="_",n+=o.getAttribute("title"));else{const t=e.querySelector("a.a-link-normal.s-navigation-item");t&&t.hasAttribute("title")&&(n+=t.getAttribute("title"))}const c=null===(i=null===(r=null===(a=null===(t=e.closest("ul"))||void 0===t?void 0:t.parentElement)||void 0===a?void 0:a.closest("ul"))||void 0===r?void 0:r.parentElement)||void 0===i?void 0:i.firstElementChild,d=null===(l=null==c?void 0:c.innerText)||void 0===l?void 0:l.trim().replace(/[ ]/g,"_").toLowerCase().trim().replace(/^_+|_+$/g,"").replace(/[_\d]+$/,"");let s="";return o&&o.hasAttribute("href")&&(s=o.getAttribute("href")),o&&"true"===o.getAttribute("aria-current")?{name:"refinements."+d,data:{title:(null==n?void 0:n.trim())||"",selected:!0,url:s}}:{name:"refinements."+d,data:{title:(null==n?void 0:n.trim())||"",selected:!1,url:s}}},children:[{selector:"input[type='checkbox']"}]}]}]},{selector:"#departments",name:"departments",add_text:!0,text_format:"Department",children:[{selector:"li a",add_text:!0,name:"from_text",clickable:!0,generate_metadata:e=>{var t;const a=null==e?void 0:e.getAttribute("aria-current"),r=null===(t=null==e?void 0:e.innerText)||void 0===t?void 0:t.trim(),i=null==e?void 0:e.getAttribute("href");return a&&"true"==a?{name:"refinements.departments",data:{title:r,selected:!0,url:i}}:{name:"refinements.departments",data:{title:r,selected:!1,url:i}}}}]},{selector:"#reviewsRefinements",name:"reviews_refinements",add_text:!0,text_format:"Customer Reviews",children:[{selector:"a.s-navigation-clear-link",add_text:!0,name:"clear_selection",clickable:!0},{selector:"li a[aria-current='true']",add_text:!0,name:"from_text",clickable:!0,generate_metadata:e=>{var t,a;return{name:"refinements.reviews",data:{title:null===(a=null===(t=null==e?void 0:e.innerText)||void 0===t?void 0:t.replace(/\n/g," "))||void 0===a?void 0:a.trim(),selected:!0,url:null==e?void 0:e.getAttribute("href")}}}},{selector:"li a[aria-current='false']",add_text:!0,name:"from_text",clickable:!0,generate_metadata:e=>{var t,a;return{name:"refinements.reviews",data:{title:null===(a=null===(t=null==e?void 0:e.innerText)||void 0===t?void 0:t.replace(/\n/g," "))||void 0===a?void 0:a.trim(),selected:!1,url:null==e?void 0:e.getAttribute("href")}}}}]},{selector:"#priceRefinements",name:"price_refinements",children:[{selector:"#p_36-title, div.sf-refinement-heading span",add_text:!0,name:"price_heading"},{selector:"div[aria-labelledby='p_36-title'] > a",add_text:!0,name:"clear_price_selection",clickable:!0},{selector:"ul[aria-labelledby='p_36-title'] a[aria-current='true']",add_text:!0,name:"from_text",clickable:!0,generate_metadata:e=>{var t;return{name:"refinements.price",data:{title:null===(t=null==e?void 0:e.innerText)||void 0===t?void 0:t.trim(),selected:!0,url:null==e?void 0:e.getAttribute("href")}}}},{selector:"ul[aria-labelledby='p_36-title'] a[aria-current='false']",add_text:!0,name:"from_text",clickable:!0,generate_metadata:e=>{var t;return{name:"refinements.price",data:{title:null===(t=null==e?void 0:e.innerText)||void 0===t?void 0:t.trim(),selected:!1,url:null==e?void 0:e.getAttribute("href")}}}},{selector:"div.sf-range-slider-row:nth-of-type(1)",add_text:!0,generate_metadata:e=>{var t;return{name:"refinements.price",data:{title:"price_range",range:null===(t=null==e?void 0:e.innerText)||void 0===t?void 0:t.replace(/\s+/g,"")}}}},{selector:"div.sf-range-slider-row:nth-of-type(2) div.s-lower-bound input",name:"price_min_value",add_text:!0,clickable:!0,keep_attr:["min","max","step"],override_attr:{step_values:e=>{const t=e.closest("form");if(t){const e=t.getAttribute("data-slider-props");if(e)return JSON.parse(e).stepLabels}return""},current_value:e=>{const t=Number.parseInt(e.getAttribute("value"));if(null!==t){const a=e.closest("form");if(a){const e=a.getAttribute("data-slider-props");if(e)return JSON.parse(e).stepLabels[t]}}return""}}},{selector:"div.sf-range-slider-row:nth-of-type(2) div.s-upper-bound input",name:"price_max_value",add_text:!0,clickable:!0,keep_attr:["min","max","step"],override_attr:{step_values:e=>{const t=e.closest("form");if(t){const e=t.getAttribute("data-slider-props");if(e)return JSON.parse(e).stepLabels}return""},current_value:e=>{const t=Number.parseInt(e.getAttribute("value"));if(null!==t){const a=e.closest("form");if(a){const e=a.getAttribute("data-slider-props");if(e)return JSON.parse(e).stepLabels[t]}}return""}}},{selector:"div.sf-submit-range-button input",name:"submit_price_range",add_text:!0,text_format:"Go",clickable:!0},{selector:"div.sf-reset-range-link a",name:"reset_price_selection",add_text:!0,clickable:!0},{selector:"#p_n_deal_type-title",add_text:!0,name:"deals_discounts_heading"},{selector:"div[aria-labelledby='p_n_deal_type-title'] > a",add_text:!0,name:"clear_deals_discount_selection",clickable:!0},{selector:"ul[aria-labelledby='p_n_deal_type-title'] a[aria-current='true']",add_text:!0,name:"from_text",clickable:!0,generate_metadata:e=>{var t;return{name:"refinements.price",data:{title:null===(t=null==e?void 0:e.innerText)||void 0===t?void 0:t.trim(),selected:!0,url:null==e?void 0:e.getAttribute("href")}}}},{selector:"ul[aria-labelledby='p_n_deal_type-title'] a[aria-current='false']",add_text:!0,name:"from_text",clickable:!0,generate_metadata:e=>{var t;return{name:"refinements.price",data:{title:null===(t=null==e?void 0:e.innerText)||void 0===t?void 0:t.trim(),selected:!1,url:null==e?void 0:e.getAttribute("href")}}}}]}]},{selector:"div.s-main-slot.s-result-list.s-search-results",name:"search_results",children:[{selector:"div.AdHolder",name:"ads",children:[{selector:"div[data-asin]",name:"from_text",add_text:!0,clickable:!0,text_js:e=>{const t=e.querySelector("img");return(null==t?void 0:t.getAttribute("alt")).trim()||""},generate_metadata:e=>{const t=null==e?void 0:e.getAttribute("data-asin"),a=e.querySelector("img"),r=null==a?void 0:a.getAttribute("alt"),i=e.querySelector("a[data-type='productTitle']");return{name:"ads",data:{title:r,asin:t,url:null==i?void 0:i.getAttribute("href")}}}}]},{insert_split_marker:!0,insert_split_marker_every:4,selector:'div[data-component-type="s-search-result"]',text_selector:"span.a-color-base.a-text-normal, h2.a-color-base.a-text-normal span",name:"from_text",class:"search-result",children:[{selector:"div[data-cy='title-recipe'] a.a-link-normal.s-link-style.a-text-normal",add_text:!0,class:"product-name",clickable:!0,name:"product_name"},{selector:"div.s-product-image-container, div.s-image-overlay-black",add_text:!0,name:"product_image",clickable:!0,text_format:"Product Image"},{selector:"div.s-color-swatch-container",name:"available_colors",children:[{selector:"div.s-color-swatch-pad",name:"from_text",clickable:!0,add_text:!0,text_js:e=>{const t=e.querySelector("a");return t&&t.getAttribute("aria-label")||""}},{selector:"div[data-csa-c-type='link'] a",direct_child:!0,name:"from_text",clickable:!0,add_text:!0}]},{selector:"div.s-variations-options-elevated, div.s-variations-options-justify-content",name:"options",add_text:!0,clickable:!0,click_selector:"a"},{selector:"div[data-cy='reviews-block']",class:"product-review",children:[{selector:"span.a-icon-alt",add_text:!0,class:"product-rating"},{selector:"span.a-size-base.s-underline-text",add_text:!0,text_format:"{} reviews",class:"product-rating-count",name:"product_rating_count",clickable:!0}]},{selector:"div[data-cy='price-recipe']",class:"product-price",children:[{selector:"a.a-link-normal:has(> span.a-price > span.a-offscreen)",clickable:!0,name:"product_price",add_text:!0,text_selector:"a > span.a-price > span.a-offscreen"}]},{selector:"div[data-cy='delivery-recipe']",add_text:!0,class:"product-delivery"},{selector:"div[data-cy='add-to-cart'] button, span[id*='add-to-cart'] input",add_text:!0,clickable:!0,name:"add_to_cart"},{selector:"div[data-csa-c-content-id='s-search-see-details-button'] a",add_text:!0,clickable:!0,name:"see_options"},{selector:'div[name="ax-qs"]',children:[{selector:"button[aria-label='Decrease quantity by one']",add_text:!0,text_js:function(e){return e.hasAttribute("aria-label")?e.getAttribute("aria-label"):""},clickable:!0,name:"decrease_quantity_by_one"},{selector:"div[role='spinbutton']",add_text:!0,text_format:"Current Quantity: {}"},{selector:"button[aria-label='Increase quantity by one']",add_text:!0,text_js:function(e){return e.hasAttribute("aria-label")?e.getAttribute("aria-label"):""},clickable:!0,name:"increase_quantity_by_one"}]}],generate_metadata:e=>{const t=e.getAttribute("data-asin"),a=e.querySelector("div[data-cy='price-recipe'] a.a-link-normal > span.a-price > span.a-offscreen"),r=null==a?void 0:a.innerText,i=e.querySelector("span.a-color-base.a-text-normal, h2.a-color-base.a-text-normal span"),l=null==i?void 0:i.innerText,n=e.querySelector("div[data-cy='title-recipe'] a.a-link-normal.s-link-style.a-text-normal"),o=null==n?void 0:n.getAttribute("href"),c=e.querySelector("div[data-cy='delivery-recipe']");return{name:"search_results",data:{title:l,asin:t,price:r,url:o,delivery:null==c?void 0:c.innerText.replace(/[\n]/g," ")}}}}]},{selector:"span.s-pagination-strip",name:"pagination",children:[{selector:".s-pagination-item",add_text:!0,name:"from_text",clickable:!0}]},{selector:"div.a-popover-wrapper",name:"popover",children:[{selector:"header.a-popover-header button",add_text:!0,clickable:!0,name:"close",text_format:"Close"},{selector:"div.a-popover-inner div.puis-atc-size-variation",children:[{selector:"div.a-row:nth-of-type(1)",direct_child:!0,children:[{selector:"span[data-component-type='s-product-image'] a",name:"product_image",add_text:!0,clickable:!0,text_format:"Product Image"},{selector:"div.puis-size-variation-title a",name:"product_title",add_text:!0,clickable:!0},{selector:"div.puis-size-variation-product-spec",name:"product_specification",add_text:!0,clickable:!0,click_selector:"a"}]},{selector:"div.a-row:nth-of-type(2)",direct_child:!0,children:[{selector:"div.puis-size-variation-product-options",name:"from_text",text_selector:"span.a-size-base.a-color-secondary",children:[{selector:"span.a-size-base.a-color-secondary",add_text:!0},{selector:"span.a-dropdown-prompt",add_text:!0},{selector:"select",name:"drop_down_list"}]},{selector:"div.puis-size-variation-price a.a-text-normal",name:"price",clickable:!0,add_text:!0,text_selector:"span[aria-hidden='true']"},{selector:"div.puis-size-variation-delivery",add_text:!0,name:"delivery"}]},{selector:"div.a-row:nth-of-type(3)",direct_child:!0,children:[{selector:"span.s-no-js-hide input",name:"cancel",clickable:!0,add_text:!0,text_format:"Cancel"},{selector:"div.puis-atcb-add-container button",name:"add_to_cart",clickable:!0,add_text:!0}]}]}],generate_metadata:e=>{var t,a;const r=null===(t=e.querySelector("div[data-asin]"))||void 0===t?void 0:t.getAttribute("data-asin"),i=e.querySelector('div.a-popover-inner div.puis-atc-size-variation div.a-row:nth-of-type(2) div.puis-size-variation-price a.a-text-normal span[aria-hidden="true"]'),l=null===(a=null==i?void 0:i.innerText)||void 0===a?void 0:a.replace(/[\n]/g,""),n=e.querySelector("div.a-popover-inner div.puis-atc-size-variation div.a-row:nth-of-type(1) div.puis-size-variation-title a"),o=null==n?void 0:n.innerText,c=null==n?void 0:n.getAttribute("href"),d=(e.querySelector('div[data-action="a-dropdown-button"]'),e.querySelectorAll("div.a-popover-inner div.puis-atc-size-variation div.a-row:nth-of-type(1) div.puis-size-variation-product-spec, div.a-popover-inner div.puis-atc-size-variation div.a-row:nth-of-type(2) div.puis-size-variation-product-options")),s=[];for(const e of d){const t=null==e?void 0:e.querySelector("span.a-size-base.a-color-secondary"),a=null==e?void 0:e.querySelector("span.a-size-base.a-color-base, span.a-dropdown-prompt"),r=null==t?void 0:t.innerText.replace(/[:\n]/g,"").trim(),i=null==a?void 0:a.innerText.replace(/[:\n]/g,"").trim(),l={[r]:i};s.push(l)}return{name:"popover_item",data:{title:o,asin:r,price:l,url:c,options:s}}}}]}]},{match:"#productTitle, #titleBlock",match_text:"",selector:"html",children:[{selector:"head",children:[{selector:"title",add_text:!0}]},{selector:"body",children:[a,r,{selector:"#centerCol",class:"product-card",children:[{selector:"#title",add_text:!0,keep_attr:["id"],generate_metadata:e=>({name:"product_details",data:{title:(null==e?void 0:e.innerText)||""}})},{selector:"#bondByLine_feature_div",add_text:!0,clickable:!0,name:"product_brand",generate_metadata:e=>({name:"product_details",data:{brand:(null==e?void 0:e.innerText)||""}})},{selector:"#bondByLine_feature_div",add_text:!0,name:"product_title",generate_metadata:e=>({name:"product_details",data:{title:(null==e?void 0:e.innerText)||""}})},{selector:"#averageCustomerReviews",class:"review",children:[{selector:"span.a-icon-alt",add_text:!0},{selector:"#acrCustomerReviewText",add_text:!0}]},{selector:'#apex_desktop > div[data-csa-c-slot-id="apex_dp_center_column"] > div[class="offersConsistencyEnabled"] > div:not([style="display:none;"]):not([style="display: none;"]) #corePriceDisplay_desktop_feature_div:has(#sns-base-price) #sns-base-price span.a-price.aok-align-center.reinventPricePriceToPayMargin.priceToPay, #apex_desktop > div[data-csa-c-slot-id="apex_dp_center_column"] > div[class="offersConsistencyEnabled"] > div:not([style="display:none;"]):not([style="display: none;"]) #corePriceDisplay_desktop_feature_div:not(:has(#sns-base-price)) span.a-price.aok-align-center.reinventPricePriceToPayMargin.priceToPay, #apex_desktop > div[data-csa-c-slot-id="apex_dp_center_column"] > div[data-csa-c-content-id="apex_with_rio_cx"] #corePriceDisplay_desktop_feature_div span.a-price.aok-align-center.reinventPricePriceToPayMargin.priceToPay',add_text:!0,text_format:"Price: {}",class:"product-price",generate_metadata:e=>{var t;return{name:"product_details",data:{price:(null===(t=null==e?void 0:e.innerText)||void 0===t?void 0:t.replace(/\n/g,""))||""}}},text_js:e=>{var t;return(null===(t=null==e?void 0:e.innerText)||void 0===t?void 0:t.replace(/\n/g,""))||""}},{selector:"span.a-price span.a-offscreen",add_text:!0,text_format:"Price: {}",class:"product-price",generate_metadata:e=>{var t;return{name:"product_details",data:{price:(null===(t=null==e?void 0:e.innerText)||void 0===t?void 0:t.replace(/\n/g,""))||""}}}},{selector:"#twister",class:"product-options",name:"product_options",children:[{selector:"div.a-section",text_selector:"div.a-row:has(label.a-form-label) > label.a-form-label",name:"from_text",direct_child:!0,generate_metadata:e=>{var t,a,r;const i=null===(t=e.querySelector("div.a-row:has(label.a-form-label) label.a-form-label"))||void 0===t?void 0:t.innerHTML.replace(/[:\n]/g,"").trim();let l=null===(a=e.querySelector("div.a-row:has(label.a-form-label) span.selection"))||void 0===a?void 0:a.innerHTML;if(void 0===l||""===l){const t=null===(r=e.querySelector("select"))||void 0===r?void 0:r.querySelectorAll("option");if(t)for(const e of t)e&&null!==e.getAttribute("selected")&&(l=e.innerHTML.trim())}return{name:"product_options",data:{[i]:l.trim()}}},children:[{selector:"div.a-row:has(label.a-form-label)",children:[{selector:"label.a-form-label",add_text:!0},{selector:"span.selection",add_text:!0}]},{selector:"select",add_text:!0,name:"drop_down_list"},{selector:"ul",name:"button_list",children:[{selector:"li button",add_text:!0,clickable:!0,name:"from_text",text_js:function(e){let t="";if(e.innerText.trim()){t+=e.innerText.trim();const a=e.querySelector("img");a&&a.alt&&(t+=" ",t+=a.alt)}else{const a=e.querySelector("img");a&&a.alt&&(t+=a.alt)}return t.trim()}}]}]}]},{selector:"#twister-plus-inline-twister",class:"product-options",name:"product_options",children:[{selector:"div.inline-twister-row",text_selector:"div.inline-twister-dim-title-value-truncate-expanded span.a-size-base.a-color-secondary",name:"from_text",direct_child:!0,generate_metadata:e=>{var t,a,r;const i=null===(t=e.querySelector("div.inline-twister-dim-title-value-truncate-expanded span.a-size-base.a-color-secondary"))||void 0===t?void 0:t.innerHTML.replace(/[:\n]/g,"").trim();let l=null===(a=e.querySelector("div.inline-twister-dim-title-value-truncate-expanded span.inline-twister-dim-title-value"))||void 0===a?void 0:a.innerHTML;if(void 0===l||""===l){const t=null===(r=e.querySelector("select"))||void 0===r?void 0:r.querySelectorAll("option");if(t)for(const e of t)e&&null!==e.getAttribute("selected")&&(l=e.innerHTML.trim())}return{name:"product_options",data:{[i]:l.trim()}}},children:[{selector:"div.inline-twister-dim-title-value-truncate-expanded",children:[{selector:"span.a-size-base.a-color-secondary",add_text:!0},{selector:"span.inline-twister-dim-title-value",add_text:!0}]},{selector:"select",add_text:!0,name:"drop_down_list"},{selector:"ul",name:"button_list",children:[{selector:"li span.a-button:not(.aok-hidden) input",add_text:!0,clickable:!0,name:"from_text",text_js:function(e){const t=e.nextElementSibling;let a="";if(t.innerText.trim()){a+=t.innerText.trim();const e=t.querySelector("img");e&&e.alt&&(a+=" ",a+=e.alt)}else{const e=t.querySelector("img");e&&e.alt&&(a+=e.alt)}return a.trim()}}]}]},{selector:"div.inline-twister-singleton-header",text_selector:"span.a-size-base.a-color-secondary",name:"from_text",children:[{selector:"span.a-size-base.a-color-secondary",add_text:!0},{selector:"span.inline-twister-dim-title-value-truncate",add_text:!0}],generate_metadata:e=>{var t,a;const r=null===(t=e.querySelector("span.a-size-base.a-color-secondary"))||void 0===t?void 0:t.innerHTML.replace(/[:\n]/g,"").trim(),i=null===(a=e.querySelector("span.inline-twister-dim-title-value-truncate"))||void 0===a?void 0:a.innerHTML;return{name:"product_options",data:{[r]:i.trim()}}}}]},{selector:"#productFactsDesktopExpander ul.a-unordered-list, #featurebullets_feature_div ul.a-unordered-list, #bond-feature-bullets-desktop ul.a-unordered-list",add_text:!0,name:"about_this_item",text_format:"About this item: ",children:[{selector:"li",add_text:!0}],generate_metadata:e=>{var t;return{name:"product_details",data:{bullet_list:(null===(t=null==e?void 0:e.innerText)||void 0===t?void 0:t.replace(/\n/g," "))||""}}}}]},{selector:"#buybox:has(div.a-tab-container):not(:has(#partialState_buybox_desktop)):not(:has(#luxury_buybox_desktop))",name:"buybox",children:[{selector:"#tab_heading_desktop_buybox_group_1 a",name:"deliver_tab",clickable:!0,add_text:!0},{selector:"#tab_heading_desktop_buybox_group_2 a",name:"pick_up_tab",clickable:!0,add_text:!0},{selector:"#tab_desktop_buybox_group_1",name:"delivery",add_text:!0,text_format:"Delivery",children:[d,s]},{selector:"#tab_desktop_buybox_group_2",name:"pick_up",add_text:!0,text_format:"Pick Up",children:[{selector:"#gsod_singleOfferDisplay_group_2_Desktop",children:[{selector:"#pickUpOfferDisplay",name:"purchase_form",children:[i,l,n,o,c]}]}]}],generate_metadata:e=>{const t=e.querySelector("input#ASIN");return{name:"product_details",data:{asin:(null==t?void 0:t.value)||""}}}},{selector:"#buybox:not(:has(div.a-tab-container)):not(:has(#partialState_buybox_desktop)):not(:has(#luxury_buybox_desktop))",name:"buybox",children:[d,s],generate_metadata:e=>{const t=e.querySelector("input#ASIN");return{name:"product_details",data:{asin:(null==t?void 0:t.value)||""}}}},{selector:"#partialState_buybox_desktop",children:[{selector:"#partialStateBuybox div.a-section.a-text-center.a-spacing-small",add_text:!0}],generate_metadata:e=>{const t=e.querySelector("input#ASIN");return{name:"product_details",data:{asin:(null==t?void 0:t.value)||""}}}},{selector:"#buybox:has(#luxury_buybox_desktop)",name:"buybox",children:[{selector:"#bondApexPrice_feature_div",add_text:!0},{selector:"#deliveryBlockMessage",add_text:!0},{selector:"span.a-dropdown-container select",name:"drop_down_list"},{selector:"#bond-atc-button input",name:"from_text",text_format:"Add To Cart",clickable:!0,add_text:!0}],generate_metadata:e=>{const t=e.querySelector("input#ASIN");return{name:"product_details",data:{asin:(null==t?void 0:t.value)||""}}}},{selector:"#outOfStock",add_text:!0,text_format:"Currently Unavailable"},{selector:"#product-comparison_feature_div",name:"product_comparison",children:[{selector:"h2",add_text:!0},{selector:'tr:has(div[class^="_product-comparison-desktop_titleStyle"])',children:[{selector:'td[class*="asin"]',name:"from_text",text_selector:'div[class^="_product-comparison-desktop_titleStyle"]',children:[{selector:'a > div[id^="imageContainer"]',name:"product_image",clickable:!0,add_text:!0,text_format:"Product Image"},{selector:'div > div[id^="imageContainer"]',name:"product_image",add_text:!0,text_format:"Product Image"},{selector:'a > div[class^="_product-comparison-desktop_titleStyle"]',add_text:!0,clickable:!0,name:"product_title"},{selector:'div > div[class^="_product-comparison-desktop_titleStyle"]',add_text:!0,name:"product_title"}]}]},{selector:'tr:has(input[name="submit.addToCart"])',children:[{selector:'td[class*="asin"]',name:"from_text",text_js:e=>{var t,a,r;const i=e.classList.value.split(" ").map((e=>`.${e}`)).join(", "),l=null===(r=null===(a=null===(t=e.closest("tbody"))||void 0===t?void 0:t.querySelector('tr:has(div[class^="_product-comparison-desktop_titleStyle"])'))||void 0===a?void 0:a.querySelector(i))||void 0===r?void 0:r.querySelector('div[class^="_product-comparison-desktop_titleStyle"]');return(null==l?void 0:l.innerText)||""},children:[{selector:'input[name="submit.addToCart"]',name:"add_to_cart",clickable:!0,add_text:!0}],generate_metadata:e=>{var t,a,r,i,l,n,o,c,d,s,u;const m=e.classList.value.split(" ").map((e=>`.${e}`)).join(", "),p=null===(r=null===(a=null===(t=e.closest("tbody"))||void 0===t?void 0:t.querySelector('tr:has(div[class^="_product-comparison-desktop_titleStyle"])'))||void 0===a?void 0:a.querySelector(m))||void 0===r?void 0:r.querySelector('div[class^="_product-comparison-desktop_titleStyle"]'),_=(null==p?void 0:p.innerText)||"",v=null===(l=null===(i=e.querySelector('input[name="submit.addToCart"]'))||void 0===i?void 0:i.getAttribute("data-asins"))||void 0===l?void 0:l.replace(/[\[\]"]/g,""),b=null===(c=null===(o=null===(n=e.closest("tbody"))||void 0===n?void 0:n.querySelector("tr:has(span.a-price)"))||void 0===o?void 0:o.querySelector(m))||void 0===c?void 0:c.querySelector("span.a-price span.a-offscreen"),h=null==b?void 0:b.innerText,x=null===(u=null===(s=null===(d=e.closest("tbody"))||void 0===d?void 0:d.querySelector('tr:has(div[class^="_product-comparison-desktop_titleStyle"])'))||void 0===s?void 0:s.querySelector(m))||void 0===u?void 0:u.querySelector('a:has(div[class^="_product-comparison-desktop_titleStyle"])');return{name:"comparison_items",data:{title:_,asin:v,price:h,url:(null==x?void 0:x.href)||window.location.href}}}}]},{selector:"tr:has(span.a-price)",children:[{selector:'td[class*="asin"]',name:"from_text",text_js:e=>{var t,a,r;const i=e.classList.value.split(" ").map((e=>`.${e}`)).join(", "),l=null===(r=null===(a=null===(t=e.closest("tbody"))||void 0===t?void 0:t.querySelectorAll("tr")[0])||void 0===a?void 0:a.querySelector(i))||void 0===r?void 0:r.querySelector('div[class^="_product-comparison-desktop_titleStyle"]');return(null==l?void 0:l.innerText)||""},children:[{selector:"span.a-price span.a-offscreen",name:"product_price",add_text:!0}]}]},{selector:'tr:has(div[class*="delivery"])',children:[{selector:'td[class*="asin"]',name:"from_text",text_js:e=>{var t,a,r;const i=e.classList.value.split(" ").map((e=>`.${e}`)).join(", "),l=null===(r=null===(a=null===(t=e.closest("tbody"))||void 0===t?void 0:t.querySelectorAll("tr")[0])||void 0===a?void 0:a.querySelector(i))||void 0===r?void 0:r.querySelector('div[class^="_product-comparison-desktop_titleStyle"]');return(null==l?void 0:l.innerText)||""},children:[{selector:'div[class*="delivery"]',name:"product_delivery",add_text:!0}]}]},{selector:'tr:has(div[class*="reviews-rating"])',children:[{selector:'td[class*="asin"]',name:"from_text",text_js:e=>{var t,a,r;const i=e.classList.value.split(" ").map((e=>`.${e}`)).join(", "),l=null===(r=null===(a=null===(t=e.closest("tbody"))||void 0===t?void 0:t.querySelectorAll("tr")[0])||void 0===a?void 0:a.querySelector(i))||void 0===r?void 0:r.querySelector('div[class^="_product-comparison-desktop_titleStyle"]');return(null==l?void 0:l.innerText)||""},children:[{selector:'div[class*="reviews-rating"]',name:"product_reviews",add_text:!0,text_js:e=>{const t=e.querySelector("i"),a=e.querySelector("span.a-size-base.a-color-link");return(null==t?void 0:t.innerText)+" Reviewed by "+(null==a?void 0:a.innerText)||""},clickable:!0}]}]}]},{selector:"#attach-warranty-pane #attach-warranty-display",name:"warranty-box",children:[{selector:"div.attach-warranty-box",text_selector:"#attach-warranty-card-display-title",name:"from_text",children:[{selector:"i.a-icon-checkbox",name:"select",clickable:!0},{selector:"#attach-warranty-card-display-title",add_text:!0},{selector:"#attach-warranty-card-price",add_text:!0}]},{selector:"div.a-section.attach-warranty-button-row",children:[{selector:"input[aria-labelledby='attachSiAddCoverage-announce']",name:"add_protection",clickable:!0,add_text:!0,text_format:"Add Protection"},{selector:"input[aria-labelledby='attachSiNoCoverage-announce']",name:"no_protection",clickable:!0,add_text:!0,text_format:"No Thanks"}]}]}]}]},{match:"/hz/mobile/mission",match_method:"url",selector:"html",children:[{selector:"head",children:[{selector:"title",add_text:!0}]},{selector:"body",children:[a,{selector:'div[class*="singleProductContainer"]',name:"from_text",text_selector:'span[class*="titleR2"]',children:[{selector:"a:has(img)",add_text:!0,text_format:"Product Image",name:"from_text",clickable:!0},{selector:"a:not(:has(img))",add_text:!0,text_format:"Product Detail",name:"from_text",clickable:!0},{selector:"input",add_text:!0,clickable:!0,name:"add_to_cart"},{selector:"a.a-button-text",clickable:!0,add_text:!0,name:"from_text"}],generate_metadata:e=>{var t;const a=e.querySelector("div[data-asin]"),r=null==a?void 0:a.getAttribute("data-asin"),i=e.querySelector("span.a-price span.a-offscreen"),l=null===(t=null==i?void 0:i.innerText)||void 0===t?void 0:t.replace(/[\n]/g,""),n=e.querySelector('span[class*="titleR2"]'),o=null==n?void 0:n.innerText.replace('"',""),c=e.querySelector("a:not(:has(img))");return{name:"promotion_items",data:{title:o,asin:r,price:l,url:null==c?void 0:c.getAttribute("href")}}}},{selector:"#intent-tabs",name:"intent_tabs",children:[{selector:"li",clickable:!0,name:"from_text",add_text:!0,text_js:e=>{var t;return(null===(t=e.getAttribute("data-intent"))||void 0===t?void 0:t.replace("intent-feed-","").replaceAll("-","_"))||""}}]},{selector:"#intent-content-default",name:"from_text",text_js:e=>{var t;return(null===(t=e.getAttribute("data-intent"))||void 0===t?void 0:t.replace("intent-feed-","").replaceAll("-","_"))||""},children:[{selector:'li[class*="productContainer"]',name:"from_text",text_selector:'span[class*="titleR3"]',children:[{selector:"a:has(img)",add_text:!0,text_format:"Product Image",name:"from_text",clickable:!0},{selector:'div[class*="swatches"], div[class*="variationContainer"]',name:"options",children:[{selector:"li a",add_text:!0,name:"from_text",clickable:!0,text_js:e=>e.getAttribute("aria-label")||e.innerText},{selector:'a[class*="variationsLink"]',add_text:!0,name:"from_text",clickable:!0}]},{selector:'a[class*="productLink"]',clickable:!0,add_text:!0,name:"product_title"},{selector:"input",clickable:!0,add_text:!0,name:"add_to_cart"},{selector:"a.a-button-text",clickable:!0,add_text:!0,name:"from_text"}],generate_metadata:e=>{var t,a;const r=e.querySelector("div[data-asin]"),i=null==r?void 0:r.getAttribute("data-asin"),l=e.querySelector("span.a-price span.a-offscreen"),n=null===(t=null==l?void 0:l.innerText)||void 0===t?void 0:t.replace(/[\n]/g,""),o=e.querySelector('span[class*="titleR3"]'),c=null==o?void 0:o.innerText.replace('"',""),d=e.querySelector("a:not(:has(img))"),s=null==d?void 0:d.getAttribute("href"),u=e.closest("#intent-content-default");return{name:(null===(a=null==u?void 0:u.getAttribute("data-intent"))||void 0===a?void 0:a.replace("intent-feed-","").replaceAll("-","_"))||"",data:{title:c,asin:i,price:n,url:s}}}},{selector:'li[class*="intuition-product-grid__faceout"]',name:"from_text",text_selector:'span[class*="titleR3"]',children:[{selector:"a:has(img)",add_text:!0,text_format:"Product Image",name:"from_text",clickable:!0},{selector:'div[class*="swatches"], div[class*="variationContainer"]',name:"options",children:[{selector:"li a",add_text:!0,name:"from_text",clickable:!0,text_js:e=>e.getAttribute("aria-label")},{selector:'a[class*="variationsLink"]',add_text:!0,name:"from_text",clickable:!0}]},{selector:'a[class*="productLink"]',clickable:!0,name:"from_text",add_text:!0,text_format:"Product Detail"},{selector:"input",clickable:!0,add_text:!0,name:"add_to_cart"},{selector:"input",clickable:!0,add_text:!0,name:"add_to_cart"}],generate_metadata:e=>{var t,a;const r=e.querySelector("input"),i=null==r?void 0:r.getAttribute("data-asin"),l=e.querySelector("span.a-price span.a-offscreen"),n=null===(t=null==l?void 0:l.innerText)||void 0===t?void 0:t.replace(/[\n]/g,""),o=e.querySelector('span[class*="titleR3"]'),c=null==o?void 0:o.innerText.replace('"',""),d=e.querySelector("a:not(:has(img))"),s=null==d?void 0:d.getAttribute("href"),u=e.closest("#intent-content-default");return{name:(null===(a=null==u?void 0:u.getAttribute("data-intent"))||void 0===a?void 0:a.replace("intent-feed-","").replaceAll("-","_"))||"",data:{title:c,asin:i,price:n,url:s}}}}]}]}]},{match:"/cart/add-to-cart",match_method:"url",selector:"html",match_with_ref:!0,children:[{selector:"head",children:[{selector:"title",add_text:!0}]},{selector:"body",children:[a,r,{selector:"#sw-atc-buy-box",children:[{selector:"#sw-subtotal",children:[{selector:"#sw-subtotal-item-count",add_text:!0},{selector:"span[aria-hidden='true']",add_text:!0}]},{selector:"#sc-buy-box-ptc-button span.a-button-inner input",add_text:!0,text_selector:"div.sc-without-multicart",clickable:!0,name:"check_out",fetch_url:"/cart"},{selector:"#sw-gtc a",add_text:!0,clickable:!0,name:"go_to_cart"}]}]}]},{match:"/cart/smart-wagon",match_method:"url",selector:"html",children:[{selector:"head",children:[{selector:"title",add_text:!0}]},{selector:"body",children:[a,r,{selector:"#sw-atc-buy-box",children:[{selector:"#sw-subtotal",children:[{selector:"#sw-subtotal-item-count",add_text:!0},{selector:"span[aria-hidden='true']",add_text:!0}]},{selector:"#sc-buy-box-ptc-button span.a-button-inner input",add_text:!0,text_selector:"div.sc-without-multicart",clickable:!0,name:"check_out",fetch_url:"/cart"},{selector:"#sw-gtc a",add_text:!0,clickable:!0,name:"go_to_cart"}]}]}]},{match:"/gp/cart/view.html",match_method:"url",selector:"html",children:[{selector:"head",children:[{selector:"title",add_text:!0}]},{selector:"body",children:m}]},{match:"/cart",match_method:"url",match_with_ref:!0,selector:"html",children:[{selector:"head",children:[{selector:"title",add_text:!0}]},{selector:"body",children:m}]},{match:"/cart/luxury",match_method:"url",selector:"html",children:[{selector:"head",children:[{selector:"title",add_text:!0}]},{selector:"body",children:[a,{selector:"div[data-name='Active Items']",name:"active_item_list",children:[{selector:"div.sc-list-item-content",text_selector:"ul > li > span.a-list-item > a.sc-product-title span.a-truncate-full",name:"from_text",children:[{selector:"div.sc-product-image-desktop a img",clickable:!0,name:"product_image",add_text:!0,text_format:"Product Image"},{selector:"ul > li > span.a-list-item > a.sc-product-title",clickable:!0,text_selector:"span.sc-product-title",add_text:!0,name:"product_detail"},{selector:"div.sc-badge-price-to-pay span.sc-price",add_text:!0},{selector:"div.sc-action-links",children:[{selector:"span.sc-quantity-stepper",children:[{selector:'button[data-action="a-stepper-decrement"]',add_text:!0,text_js:function(e){return e.hasAttribute("aria-label")?e.getAttribute("aria-label"):""},clickable:!0,name:"decrease_quantity_by_one"},{selector:'div[role="spinbutton"]',add_text:!0,name:"quantity_drop_down_list",text_format:"Current Quantity: {}"},{selector:'button[data-action="a-stepper-increment"]',add_text:!0,text_js:function(e){return e.hasAttribute("aria-label")?e.getAttribute("aria-label"):""},clickable:!0,name:"increase_quantity_by_one"}]}]},{selector:"input[data-action='delete']",add_text:!0,clickable:!0,name:"delete"}],generate_metadata:e=>{var t,a;const r=null===(t=e.parentElement)||void 0===t?void 0:t.getAttribute("data-asin"),i=e.querySelector("div.sc-badge-price-to-pay span.sc-price"),l=null===(a=null==i?void 0:i.innerText)||void 0===a?void 0:a.replace(/[\n]/g,""),n=e.querySelector("ul > li > span.a-list-item > a.sc-product-title span.sc-product-title"),o=null==n?void 0:n.innerText,c=e.querySelector("ul > li > span.a-list-item > a.sc-product-title"),d=null==c?void 0:c.getAttribute("href"),s=e.querySelector('span.sc-quantity-stepper div[role="spinbutton"]');return{name:"active_items",data:{title:o,asin:r,price:l,url:d,quantity:null==s?void 0:s.innerText}}}}]},{selector:'div.sc-buy-box-inner-box input[name^="proceedToLuxuryCheckout"]',clickable:!0,name:"check_out",add_text:!0}]}]},{match:"/cart/localmarket",match_method:"url",match_with_ref:!0,selector:"html",children:[{selector:"head",children:[{selector:"title",add_text:!0}]},{selector:"body",children:[a,{selector:"div[data-name='Active Items']",name:"active_item_list",children:[{selector:"div.sc-list-item-content",text_selector:"ul > li > span.a-list-item > a.sc-product-title span.a-truncate-full",name:"from_text",children:[{selector:"div.sc-product-image-desktop a img",clickable:!0,name:"product_image",add_text:!0,text_format:"Product Image"},{selector:"ul > li > span.a-list-item > a.sc-product-title",clickable:!0,text_selector:"span.a-truncate-full",add_text:!0,name:"product_detail"},{selector:"div.sc-badge-price-to-pay span.sc-price",add_text:!0},{selector:"div.sc-action-links",children:[{selector:"div.qs-widget-container",children:[{selector:"input[aria-label='Remove']",add_text:!0,text_js:function(e){return e.hasAttribute("aria-label")?e.getAttribute("aria-label"):""},clickable:!0,name:"decrease_quantity_by_one"},{selector:"div.qs-widget-dropdown-flex-wrapper button",add_text:!0,clickable:!0,name:"quantity_drop_down_list",text_format:"Current Quantity: {}"},{selector:'div.qs-widget-dropdown-wrapper span[data-action="qs-widget-dropdown-decl"]',add_text:!0,clickable:!0,use_root:!0,name:"from_text",text_format:"Drop Down Option {}"},{selector:'div[id^="qs-widget-quantity-container-atfc"] span[data-action="qs-widget-quantity-changelink-decl"]',add_text:!0,clickable:!0,use_root:!0,name:"from_text"},{selector:'div[id^="qs-widget-summary-container-atfc"] span[id^="qs-widget-summary-atc-atfc"]',add_text:!0,clickable:!0,use_root:!0,name:"from_text"},{selector:"input[aria-label='Add']",add_text:!0,text_js:function(e){return e.hasAttribute("aria-label")?e.getAttribute("aria-label"):""},clickable:!0,name:"increase_quantity_by_one"}]}]},{selector:"input[data-action='delete']",add_text:!0,clickable:!0,name:"delete"}],generate_metadata:e=>{var t,a;const r=null===(t=e.parentElement)||void 0===t?void 0:t.getAttribute("data-asin"),i=e.querySelector("div.sc-badge-price-to-pay span.sc-price"),l=null===(a=null==i?void 0:i.innerText)||void 0===a?void 0:a.replace(/[\n]/g,""),n=e.querySelector("ul > li > span.a-list-item > a.sc-product-title span.a-truncate-full"),o=null==n?void 0:n.innerText,c=e.querySelector("ul > li > span.a-list-item > a.sc-product-title"),d=null==c?void 0:c.getAttribute("href"),s=e.querySelector("div.sc-action-links div.qs-widget-dropdown-flex-wrapper button");return{name:"active_items",data:{title:o,asin:r,price:l,url:d,quantity:null==s?void 0:s.innerText}}}}]},{selector:'div[id^="CardInstance"]',text_selector:"h2.a-carousel-heading",name:"from_text",children:[{selector:"h2.a-carousel-heading",add_text:!0},p]},{selector:'div.sc-buy-box-inner-box input[name^="proceedToALMCheckout"]',clickable:!0,name:"check_out",add_text:!0},{selector:"div.sc-buy-box-inner-box a",clickable:!0,name:"from_text",add_text:!0},{selector:"#sc-cart-above-actions button, #sc-cart-above-actions a",clickable:!0,name:"from_text",add_text:!0}]}]},{match:"/alm/byg",match_method:"url",selector:"html",children:[{selector:"head",children:[{selector:"title",add_text:!0}]},{selector:"body",children:[{selector:'a[name="proceedToCheckout"]',name:"check_out",add_text:!0,clickable:!0},{selector:'div[id^="CardInstance"]',text_selector:"h2.a-carousel-heading",name:"from_text",children:[{selector:"h2.a-carousel-heading",add_text:!0},p]}]}]},{match:"/alm/substitution",match_method:"url",selector:"html",children:[{selector:"head",children:[{selector:"title",add_text:!0}]},{selector:"body",children:[{selector:"#subsContinueButton input",name:"check_out",add_text:!0,clickable:!0,text_format:"Continue"},{selector:"div.subs-cart-item",name:"from_text",text_selector:"div.a-spacing-top-base span.a-size-base",children:[{selector:"div.a-spacing-top-base span.a-size-base",add_text:!0},{selector:"div.a-spacing-top-mini span.a-color-price",add_text:!0}],generate_metadata:e=>{const t=e.querySelector("div[data-cart-item-asin]"),a=null==t?void 0:t.getAttribute("data-cart-item-asin"),r=e.querySelector("div.a-spacing-top-base span.a-size-base"),i=null==r?void 0:r.innerText,l=e.querySelector("div.a-spacing-top-mini span.a-color-price");return{name:"active_items",data:{asin:a,title:i,price:null==l?void 0:l.innerText}}}}]}]},{match:"/cart/byc",match_method:"url",selector:"html",match_with_ref:!0,children:[{selector:"head",children:[{selector:"title",add_text:!0}]},{selector:"body",children:[{selector:'a[name="sc-byc-ptc-button"]',name:"check_out",add_text:!0,clickable:!0},{selector:'span[cel_widget_id^="byc-back-button"] a',name:"back_to_cart",add_text:!0,clickable:!0},{selector:'div[id^="CardInstance"]',text_selector:"h2.a-carousel-heading",name:"from_text",children:[{selector:"h2.a-carousel-heading",add_text:!0},u]}]}]},{match:"/fmc/ssd-storefront",match_method:"url",selector:"html",match_with_ref:!0,children:[{selector:"head",children:[{selector:"title",add_text:!0}]},{selector:"body",children:[a,{selector:'div[class*="store-subnav-desktop_style_subnav-content-container"]',name:"sub_stores",children:[{selector:'a[class*="store-subnav-desktop_style"]',add_text:!0,clickable:!0,name:"from_text",text_js:e=>e.innerText||"Same Day Store"}]},{selector:'div[id^="CardInstance"]',text_selector:"h2.seeMoreTitleHeader",name:"from_text",children:[{selector:"h2.a-carousel-heading",add_text:!0},u]}]}]},{match:"/fmc/ssd-category",match_method:"url",selector:"html",match_with_ref:!0,children:[{selector:"head",children:[{selector:"title",add_text:!0}]},{selector:"body",children:[a,{selector:'div[class*="store-subnav-desktop_style_subnav-content-container"]',name:"sub_stores",children:[{selector:'a[class*="store-subnav-desktop_style"]',add_text:!0,clickable:!0,name:"from_text",text_js:e=>e.innerText||"Same Day Store"}]},{selector:"div.dcl-container",name:"categories",children:[{selector:"h2.dcl-header-title",add_text:!0},{selector:"li.a-carousel-card.dcl-carousel-element a",text_selector:"div.dcl-card-footer",add_text:!0,clickable:!0,name:"from_text"}]},{selector:'div[id^="CardInstance"]',text_selector:"h2.seeMoreTitleHeader",name:"from_text",children:[{selector:"h2.a-carousel-heading",add_text:!0},u]}]}]},{match:"/gp/bestsellers",match_method:"url",selector:"html",match_with_ref:!0,children:_},{match:"/gp/new-releases/*",match_method:"url",selector:"html",match_with_ref:!0,match_with_wildcard:!0,children:_},{match:"/gp/movers-and-shakers/*",match_method:"url",selector:"html",match_with_ref:!0,match_with_wildcard:!0,children:_},{match:"/gp/most-wished-for/*",match_method:"url",selector:"html",match_with_ref:!0,match_with_wildcard:!0,children:_},{match:"/gp/most-gifted/*",match_method:"url",selector:"html",match_with_ref:!0,match_with_wildcard:!0,children:_},{match:"/Best-Sellers*/zgbs/*",match_method:"url",selector:"html",match_with_ref:!0,match_with_wildcard:!0,children:_},{match:"/*/b",match_method:"url",selector:"html",match_with_wildcard:!0,children:[{selector:"head",children:[{selector:"title",add_text:!0}]},{selector:"body",children:[a,{selector:"#nav-subnav",name:"sub_stores",children:[{selector:"a",direct_child:!0,clickable:!0,name:"from_text",add_text:!0},{selector:"li.generic-subnav-flyout-item",clickable:!0,use_root:!0,name:"from_text",add_text:!0}]},{selector:'div[class^="DesktopRefinements-module__root"]',name:"refinements",children:[{selector:"div",direct_child:!0,name:"from_text",text_selector:"span.a-size-base.a-color-base.a-text-bold",children:[{selector:"span.a-size-base.a-color-base.a-text-bold",add_text:!0},{selector:'ul[class^="Breadcrumbs-module"] li:has(a)',add_text:!0,clickable:!0,name:"from_text"},{selector:'ul[class^="Breadcrumbs-module"] li:not(:has(a))',add_text:!0},{selector:'div[role="radiogroup"] > span, div[role="group"] > span',clickable:!0,add_text:!0,name:"from_text",text_js:e=>{var t;return(null===(t=e.querySelector("div[aria-label]"))||void 0===t?void 0:t.getAttribute("aria-label"))||e.innerText},generate_metadata:e=>{var t,a,r,i;const l=null===(a=null===(t=e.parentElement)||void 0===t?void 0:t.parentElement)||void 0===a?void 0:a.firstElementChild,n=null===(r=null==l?void 0:l.innerText)||void 0===r?void 0:r.trim().replace(/[ ]/g,"_").toLowerCase().trim().replace(/^_+|_+$/g,""),o=(null===(i=e.querySelector("div[aria-label]"))||void 0===i?void 0:i.getAttribute("aria-label"))||e.innerText,c=e.querySelector('input[type="radio"], input[type="checkbox"]');return null==c||c.getAttribute("data-processed-input-checked"),{name:"refinements."+n,data:{title:(null==o?void 0:o.trim())||"",selected:!1}}}},{selector:'button[class*="SeeMoreButton-module"]',clickable:!0,add_text:!0,name:"from_text"}]}]},{selector:'div[class^="ProductCard-module__card"]',name:"from_text",text_selector:'p[id^="title"] span.a-truncate-full',children:[{selector:'div[class*="imageWrapper"] a',clickable:!0,text_format:"Product Image",add_text:!0,name:"from_text"},{selector:'a[class*="cardContainingLink"]',clickable:!0,add_text:!0,name:"product_detail"},{selector:'div[data-testid="color-swatch"] ul',name:"colors",children:[{selector:"li",clickable:!0,add_text:!0,name:"from_text",text_js:e=>{var t;return(null===(t=e.querySelector("a"))||void 0===t?void 0:t.getAttribute("aria-label"))||""}}]}],generate_metadata:e=>{var t;return{name:"promotion_items",data:{asin:e.getAttribute("data-asin"),title:null===(t=e.querySelector('p[id^="title"] span.a-truncate-full'))||void 0===t?void 0:t.innerText}}}}]}]},{match:"/ap/signin",match_method:"url",terminate:function(){return!!arguments[0]},terminate_callback:function(){return arguments[0]},selector:"html"},{match:"/gp/buy/spc/handlers/display.html",match_method:"url",terminate:function(){return!!arguments[0]},terminate_callback:function(){return arguments[0]},selector:"html"},{match:"/gp/buyagain",match_method:"url",match_with_ref:!0,selector:"html",children:[{selector:"head",children:[{selector:"title",add_text:!0}]},{selector:"body",children:[a,r,{selector:"div.a-section:has(div.filter-container)",name:"filters",children:[{selector:"div.filter-container",text_selector:"span#filter-container-header",name:"from_text",children:[{selector:"span#filter-container-header",add_text:!0},{selector:"label",add_text:!0,clickable:!0,name:"from_text",generate_metadata:e=>{var t,a;const r=e.innerText,i=null===(t=e.closest("div.filter-container"))||void 0===t?void 0:t.querySelector("#filter-container-header"),l=null===(a=null==i?void 0:i.innerText)||void 0===a?void 0:a.replace(/[ ]/g,"_").toLowerCase().trim(),n=e.querySelector("input");return n&&n.checked?{name:"filters."+l,data:{title:(null==r?void 0:r.trim())||"",selected:!0}}:{name:"filters."+l,data:{title:(null==r?void 0:r.trim())||"",selected:!1}}}}]}]},{selector:"div.alm-grid-desktop-grid-container",name:"product_list",children:[{selector:'div[id^="gridCell"]',name:"from_text",text_selector:"div[id^='closedCard'] a[id^='title'] span.a-truncate-full",children:[{selector:"div[id^='gridElement']",name:"product_card",children:[{selector:"div[id^='closedCard']",name:"closed_product_card",children:[{selector:"div[id^='info']",name:"open_product_card",clickable:!0,text_format:"Open Product Card"},{selector:"form span.a-button-inner",name:"add_to_cart",clickable:!0,add_text:!0},{selector:'div[id^="seeBuyingOptionsWrapper"] a',name:"see_buying_options",clickable:!0,add_text:!0}]},{selector:'div[name="ax-qs"]',children:[{selector:"button[aria-label='Decrease quantity by one']",add_text:!0,text_js:function(e){return e.hasAttribute("aria-label")?e.getAttribute("aria-label"):""},clickable:!0,name:"decrease_quantity_by_one"},{selector:"div[role='spinbutton']",add_text:!0,text_format:"Current Quantity: {}"},{selector:"button[aria-label='Increase quantity by one']",add_text:!0,text_js:function(e){return e.hasAttribute("aria-label")?e.getAttribute("aria-label"):""},clickable:!0,name:"increase_quantity_by_one"}]},{selector:"div[id^='expandedImage']",name:"close_product_card",clickable:!0,add_text:!0,text_format:"Close Product Card"}]}],generate_metadata:e=>{var t;const a=e.querySelector("div[id^='closedCard'] div[id^='info']"),r=null==a?void 0:a.getAttribute("data-asin"),i=e.querySelector('div[id^="closedCard"] div[id^="info"] span[class*="priceBlockWithMarginRight"] span.a-price > span:not(.a-offscreen)'),l=null===(t=null==i?void 0:i.innerText)||void 0===t?void 0:t.replace(/[\n]/g,""),n=e.querySelector("div[id^='closedCard'] a[id^='title'] span.a-truncate-full"),o=null==n?void 0:n.innerText,c=e.querySelector('div[id^="closedCard"] div[id^="info"] #udmDeliveryMessageComponent');return{name:"active_items_closed",data:{title:o,asin:r,price:l,delivery:null==c?void 0:c.innerText.replace(/[\n]/g," ")}}}},{selector:'div[id^="featured"]',name:"from_text",text_selector:"a[id^='title'] span.a-truncate-full",children:[{selector:'div[id^="detailContentWrapper"] div[id^="detailContent"]',name:"detailed_content",children:[{selector:"div:has(> img)",clickable:!0,name:"product_image",add_text:!0,text_format:"Product Image"},{selector:"a[id^='title']",clickable:!0,name:"product_title",add_text:!0,text_selector:"span.a-truncate-full"},{selector:"div[class*='multiOfferPillContainer'] a",clickable:!0,name:"from_text",add_text:!0},{selector:"div[data-buyingoptiontype='NEW'], div[class*='asinDetailInfoColumns']:has(input[name='submit.addToCart']",name:"one_time_purchase",children:[{selector:'span[class*="priceBlockWithMarginRight"] span.a-price > span:not(.a-offscreen)',add_text:!0,name:"price"},{selector:"#udmDeliveryMessageComponent",add_text:!0,name:"delivery"},{selector:'div[class*="actionButtonsRow"], div[class*="asinDetailActionsRow"]',name:"buttons",children:[{selector:'input[name="submit.addToCart"]',add_text:!0,name:"add_to_cart",clickable:!0},{selector:'input[id^="buy-now"]',add_text:!0,name:"buy_now",clickable:!0},{selector:'div[id^="feedbackButtonSection"] input',add_text:!0,name:"remove_item",clickable:!0},{selector:'div[name="ax-qs"]',children:[{selector:"button[aria-label='Decrease quantity by one']",add_text:!0,text_js:function(e){return e.hasAttribute("aria-label")?e.getAttribute("aria-label"):""},clickable:!0,name:"decrease_quantity_by_one"},{selector:"div[role='spinbutton']",add_text:!0,text_format:"Current Quantity: {}"},{selector:"button[aria-label='Increase quantity by one']",add_text:!0,text_js:function(e){return e.hasAttribute("aria-label")?e.getAttribute("aria-label"):""},clickable:!0,name:"increase_quantity_by_one"}]}]}],generate_metadata:e=>{var t,a,r,i,l;const n=e.closest("div[data-asin]"),o=null==n?void 0:n.getAttribute("data-asin"),c=e.querySelector('span[class*="priceBlockWithMarginRight"] span.a-price > span:not(.a-offscreen)'),d=null===(t=null==c?void 0:c.innerText)||void 0===t?void 0:t.replace(/[\n]/g,""),s=null===(r=null===(a=e.parentElement)||void 0===a?void 0:a.parentElement)||void 0===r?void 0:r.querySelector("a[id^='title'] span.a-truncate-full"),u=null==s?void 0:s.innerText,m=null===(l=null===(i=e.parentElement)||void 0===i?void 0:i.parentElement)||void 0===l?void 0:l.querySelector("a[id^='title']"),p=null==m?void 0:m.getAttribute("href"),_=e.querySelector("#udmDeliveryMessageComponent"),v=null==_?void 0:_.innerText.replace(/[\n]/g," "),b=e.querySelector('div[name="ax-qs"] div[role="spinbutton"]');return{name:"active_items_opened_purchase",data:{title:u,asin:o,price:d,url:p,delivery:v,quantity:(null==b?void 0:b.innerText)||"1"}}}},{selector:"div[data-buyingoptiontype='SNS'], div[class*='snsUpsellBlockContainer']",name:"subscribe_and_save",children:[{selector:'span[class*="priceBlockWithMarginRight"] span.a-price > span:not(.a-offscreen)',add_text:!0,name:"price"},{selector:"#udmDeliveryMessageComponent",add_text:!0,name:"delivery"},{selector:'div[class*="actionButtonsRow"]',name:"buttons",children:[{selector:'input[name="submit.addToCart"]',add_text:!0,name:"add_to_cart",clickable:!0},{selector:'span[class*="snsButton"] input',add_text:!0,name:"subscribe_and_save",clickable:!0},{selector:'div[id^="feedbackButtonSection"] input',add_text:!0,name:"remove_item",clickable:!0}]},{selector:'span[class*="subscriptionButton"] input',add_text:!0,name:"set_up_subscription",clickable:!0}],generate_metadata:e=>{var t,a,r,i,l;const n=e.closest("div[data-asin]"),o=null==n?void 0:n.getAttribute("data-asin"),c=e.querySelector('span[class*="priceBlockWithMarginRight"] span.a-price > span:not(.a-offscreen)'),d=null===(t=null==c?void 0:c.innerText)||void 0===t?void 0:t.replace(/[\n]/g,""),s=null===(r=null===(a=e.parentElement)||void 0===a?void 0:a.parentElement)||void 0===r?void 0:r.querySelector("a[id^='title'] span.a-truncate-full"),u=null==s?void 0:s.innerText,m=null===(l=null===(i=e.parentElement)||void 0===i?void 0:i.parentElement)||void 0===l?void 0:l.querySelector("a[id^='title']"),p=null==m?void 0:m.getAttribute("href"),_=e.querySelector("#udmDeliveryMessageComponent");return{name:"active_items_opened_sns",data:{title:u,asin:o,price:d,url:p,delivery:null==_?void 0:_.innerText.replace(/[\n]/g," ")}}}}]},{selector:"div[id^='detail-view-similar-items']",name:"similar_items",children:[{selector:"li.a-carousel-card",name:"from_text",text_selector:"a[id^='title'] span.a-truncate-full",children:[{selector:"div.a-image-container:has(> img)",clickable:!0,name:"product_image",add_text:!0,text_format:"Product Image"},{selector:"a[id^='title']",clickable:!0,name:"product_title",add_text:!0,text_selector:"span.a-truncate-full"},{selector:'span[class*="priceBlockWithMarginRight"] span.a-price > span:not(.a-offscreen)',add_text:!0,name:"price"},{selector:"#udmDeliveryMessageComponent",add_text:!0,name:"delivery"},{selector:'input[name="submit.addToCart"], input[name^="atfcShim"], button[aria-label="Add to Cart. Click to change quantity"]',add_text:!0,name:"add_to_cart",clickable:!0},{selector:'div[id^="seeBuyingOptionsWrapper"] a',name:"see_buying_options",clickable:!0,add_text:!0},{selector:'div[name="ax-qs"]',children:[{selector:"button[aria-label='Decrease quantity by one']",add_text:!0,text_js:function(e){return e.hasAttribute("aria-label")?e.getAttribute("aria-label"):""},clickable:!0,name:"decrease_quantity_by_one"},{selector:"div[role='spinbutton']",add_text:!0,text_format:"Current Quantity: {}"},{selector:"button[aria-label='Increase quantity by one']",add_text:!0,text_js:function(e){return e.hasAttribute("aria-label")?e.getAttribute("aria-label"):""},clickable:!0,name:"increase_quantity_by_one"}]},{selector:"div.qs-widget-container",children:[{selector:"input[aria-label='Remove']",add_text:!0,text_js:function(e){return e.hasAttribute("aria-label")?e.getAttribute("aria-label"):""},clickable:!0,name:"decrease_quantity_by_one"},{selector:"div.qs-widget-dropdown-flex-wrapper button",add_text:!0,clickable:!0,name:"drop_down_list",text_format:"Current Quantity: {}"},{selector:'div.qs-widget-dropdown-wrapper span[data-action="qs-widget-dropdown-decl"]',add_text:!0,clickable:!0,use_root:!0,name:"from_text",text_format:"Drop Down Option {}"},{selector:'div[id^="qs-widget-quantity-container-atfc"] span[data-action="qs-widget-quantity-changelink-decl"]',add_text:!0,clickable:!0,use_root:!0,name:"from_text"},{selector:'div[id^="qs-widget-summary-container-atfc"] span[id^="qs-widget-summary-atc-atfc"]',add_text:!0,clickable:!0,use_root:!0,name:"from_text"},{selector:"input[aria-label='Add']",add_text:!0,text_js:function(e){return e.hasAttribute("aria-label")?e.getAttribute("aria-label"):""},clickable:!0,name:"increase_quantity_by_one"}]}],generate_metadata:e=>{var t,a,r;const i=null===(t=e.closest('div[id^="featured"]'))||void 0===t?void 0:t.querySelector('div[id^="detailContentWrapper"] a[id^="title"] span.a-truncate-full'),l=null===(a=null==i?void 0:i.innerText)||void 0===a?void 0:a.toLowerCase().replace(/[^\w]+/g,"_"),n=e.querySelector('div[class*="delightFaceout"]'),o=null==n?void 0:n.getAttribute("data-asin"),c=e.querySelector('span[class*="priceBlockWithMarginRight"] span.a-price > span:not(.a-offscreen)'),d=null===(r=null==c?void 0:c.innerText)||void 0===r?void 0:r.replace(/[\n]/g,""),s=e.querySelector("a[id^='title'] span.a-truncate-full"),u=null==s?void 0:s.innerText,m=e.querySelector("a[id^='title']"),p=null==m?void 0:m.getAttribute("href"),_=e.querySelector("#udmDeliveryMessageComponent");return{name:l+".similar_items",data:{title:u,asin:o,price:d,url:p,delivery:null==_?void 0:_.innerText.replace(/[\n]/g," ")}}}}]}]}]},{selector:"#snsUpsellModal",name:"subscribe_and_save_popover",children:[{selector:'div[class*="modalHeader"]',children:[{selector:'span[class*="modalHeaderText"]',add_text:!0},{selector:'span[data-action="a-popover-close"]',add_text:!0,clickable:!0,text_format:"Close",name:"from_text"}]},{selector:'div[class*="modalContent"]',direct_child:!0,children:[{selector:'div:not([class*="buttonContainer"]):not(:has(select))',add_text:!0},{selector:"select",name:"drop_down_list"},{selector:'div[class*="buttonContainer"]',children:[{selector:'div[class*="cancelButtonContainer"] input',add_text:!0,text_format:"Cancel",clickable:!0,name:"from_text"},{selector:'div[class*="subscriptionButtonContainer"] input[name="submit.addToCart"]',add_text:!0,text_format:"Add Subscription to Cart",clickable:!0,name:"from_text"}]}]}],generate_metadata:e=>{var t,a;const r=e.querySelector('div[class*="modalContent"]');return{name:"popover_item",data:{asin:null===(a=null===(t=null==r?void 0:r.id)||void 0===t?void 0:t.split("-")[1])||void 0===a?void 0:a.trim()}}}}]}]}];var b=function(e,t,a,r){return new(a||(a=Promise))((function(i,l){function n(e){try{c(r.next(e))}catch(e){l(e)}}function o(e){try{c(r.throw(e))}catch(e){l(e)}}function c(e){var t;e.done?i(e.value):(t=e.value,t instanceof a?t:new a((function(e){e(t)}))).then(n,o)}c((r=r.apply(e,t||[])).next())}))};function h(e,t,a="",r=0,i=globalThis.document,l=globalThis.window){var n;let o=t.tag_name||e.tagName.toLowerCase();o.endsWith("_")&&(o=o.slice(0,-1));const c=i.createElement(o);let d="";if(t.text_selector){const a=e.querySelector(t.text_selector);a&&(d=a.innerText||a.textContent||"")}else t.text_js?d=t.text_js(e):t.add_text&&(d=e.innerText||e.textContent||"");null==d&&(console.log(e),console.log(d)),d=d.replace(/\s+/g," ").trim(),t.text_format?d=t.text_format.replace("{}",d):t.text_format&&(d=t.text_format),d&&t.add_text&&(c.textContent=d);let s="";if(t.name&&("from_text"===t.name?(s=a?a+".":"",d?s+=d.toLowerCase().replace(/[^\w]+/g,"_").replace(/^_+|_+$/g,""):s=""):"from_nth_child"===t.name?(s=a?a+".":"",s+=r.toString()):(s=a?a+".":"",s+=t.name),c.setAttribute("name",s),a=s),t.generate_metadata){const a=t.generate_metadata(e),r=JSON.stringify(a.data),i=a.name;e.setAttribute("data-element-meta-name",i),e.setAttribute("data-element-meta-data",r)}if(t.clickable){if(!t.name)throw new Error("clickable element must have a name");let a;a=t.click_selector?e.querySelector(t.click_selector):e,a&&a.setAttribute("data-clickable-id",s),l.clickable_recipes||(l.clickable_recipes={}),l.clickable_recipes[s]=t}if(t.fetch_url&&e.setAttribute("data-fetch-url",t.fetch_url),"input"===o){const a=e.getAttribute("type");["text","number"].includes(a)?(c.setAttribute("value",e.value),e.setAttribute("data-input-id",s)):"checkbox"===a?c.setAttribute("checked",e.checked.toString()):"radio"===a&&(c.setAttribute("checked",e.checked.toString()),e.setAttribute("data-clickable-id",s)),l.input_recipes||(l.input_recipes={}),l.input_recipes[s]=t}if("select"===o){e.setAttribute("data-select-id",s);const t=e.getAttribute("id"),a=(e.getAttribute("name"),null===(n=e.parentElement)||void 0===n?void 0:n.querySelector("span.a-button-dropdown span.a-button-text")),r=i.createElement("span");r.textContent=a.textContent;const l=s+".open_drop_down_list";r.setAttribute("name",l),a.setAttribute("data-clickable-id",l),c.appendChild(r),i.querySelectorAll('a[id^="'+t+'"]').forEach((e=>b(this,void 0,void 0,(function*(){const t=e.textContent.trim()||e.querySelector("input").value,a=s+"."+t,r=i.createElement("a");r.textContent=e.textContent,r.setAttribute("value",t),r.setAttribute("name",a),r.setAttribute("selected",e.getAttribute("aria-selected")),e.setAttribute("data-clickable-id",a),c.appendChild(r)}))))}if(["alt","title","type","value","role","aria-label","aria-hidden","aria-selected"].forEach((t=>{const a=e.getAttribute(t);a&&c.setAttribute(t,a)})),t.keep_attr)for(const a of t.keep_attr){const t=e.getAttribute(a);t&&c.setAttribute(a,t)}if(t.class&&c.setAttribute("class",t.class),t.id&&c.setAttribute("id",t.id),t.override_attr)for(const a in t.override_attr)c.setAttribute(a,t.override_attr[a](e));if(t.children&&t.children.length>0)for(const r of t.children){const t=r.direct_child?`:scope > ${r.selector}`:r.selector;let n;n=r.use_root?i.querySelectorAll(t):e.querySelectorAll(t),n.forEach(((e,t)=>{const n=h(e,r,a,t,i,l);if(c.appendChild(n),r.insert_split_marker&&t%(r.insert_split_marker_every||1)==0){const e=i.createElement("split-marker");c.appendChild(e)}if(r.insert_split_marker){const e=i.createElement("split-marker");c.appendChild(e)}}))}if(t.empty_message&&0===c.children.length){const e=i.createTextNode(t.empty_message);c.appendChild(e)}return c}function x(e=null,t=globalThis.document){let a;a=e?e.querySelectorAll("[data-element-meta-name]"):t.querySelectorAll("[data-element-meta-name]");const r={};return a.forEach((e=>{const t=e.getAttribute("data-element-meta-name"),a=e.getAttribute("data-element-meta-data");r[t]||(r[t]=[]),r[t].push(JSON.parse(a))})),r}function f(){document.querySelectorAll('input:not([type="hidden"]), select, textarea').forEach((e=>{const t=e;if(null!==t.value&&t.setAttribute("data-processed-input-value",t.value),t instanceof HTMLInputElement&&("checkbox"===t.type||"radio"===t.type)&&t.setAttribute("data-processed-input-checked",String(t.checked)),t instanceof HTMLSelectElement){const e=Array.from(t.selectedOptions).map((e=>{var t,a;return null!==(a=null===(t=e.textContent)||void 0===t?void 0:t.trim())&&void 0!==a?a:""})).join("||");t.setAttribute("data-processed-input-selected-text",e)}})),document.querySelectorAll('a, button, select, [onclick], input[type="button"], input[type="submit"]').forEach((e=>{const t=e.getBoundingClientRect(),a=t.top>=0&&t.left>=0&&t.bottom<=(window.innerHeight||document.documentElement.clientHeight)&&t.right<=(window.innerWidth||document.documentElement.clientWidth);e.setAttribute("data-processed-visible-clickable-marker",a?"true":"false")}))}function g(e=null,t=null,a=globalThis.document,r=globalThis.window){console.log("start process recipe");try{const i=function(e=null,t=globalThis.document,a=globalThis.window){var r,i;let l;l=e?new URL(e):new URL(a.location.href);let n=l.pathname;n="/"!==n?n.replace(/\/+/g,"/").replace(/\/$/,""):n;for(const e of v){const a=e.match_method||"text";if("text"===a)try{const a=t.querySelector(e.match);if(a&&(!e.match_text||null!==(i=null===(r=a.textContent)||void 0===r?void 0:r.toLowerCase().includes(e.match_text.toLowerCase()))&&void 0!==i&&i))return console.log("matched with recipe ",e.match),e}catch(e){console.error("Error checking text match:",e)}else if("url"===a){const t="/"==e.match?e.match:e.match.replace(/\*/g,"").replace(/\/+/g,"/").replace(/\/$/,""),a="^"+e.match.replace(/\*/g,"[^/]*")+"$",r="^"+e.match.replace(/\*/g,"[^/]+")+"(/ref=.+)$";if(t===n)return console.log("matched with recipe ",e.match),e;if(e.match_with_ref&&(n.startsWith(t+"/ref=")||n.startsWith(t+"ref=")))return console.log("matched with recipe ",e.match),e;if(e.match_with_wildcard){const t=new RegExp(a),i=new RegExp(r);if(t.test(n))return console.log("matched with recipe ",e.match),e;if(e.match_with_ref&&i.test(n))return console.log("matched with recipe ",e.match),e}}}throw new Error(`No matching recipe found for path: ${n}`)}(t,a,r);let l;if(l=e||a.querySelector(i.selector),l){return h(l,i,"",0,a,r).outerHTML}}catch(e){console.error("Error processing recipe:",e)}}const y={randomUUID:"undefined"!=typeof crypto&&crypto.randomUUID&&crypto.randomUUID.bind(crypto)};let k;const w=new Uint8Array(16);function q(){if(!k){if("undefined"==typeof crypto||!crypto.getRandomValues)throw new Error("crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported");k=crypto.getRandomValues.bind(crypto)}return k(w)}const S=[];for(let e=0;e<256;++e)S.push((e+256).toString(16).slice(1));const A=function(e,t,a){if(y.randomUUID&&!t&&!e)return y.randomUUID();const r=(e=e||{}).random||(e.rng||q)();if(r[6]=15&r[6]|64,r[8]=63&r[8]|128,t){a=a||0;for(let e=0;e<16;++e)t[a+e]=r[e];return t}return function(e,t=0){return(S[e[t+0]]+S[e[t+1]]+S[e[t+2]]+S[e[t+3]]+"-"+S[e[t+4]]+S[e[t+5]]+"-"+S[e[t+6]]+S[e[t+7]]+"-"+S[e[t+8]]+S[e[t+9]]+"-"+S[e[t+10]]+S[e[t+11]]+S[e[t+12]]+S[e[t+13]]+S[e[t+14]]+S[e[t+15]]).toLowerCase()}(r)};var T=function(e,t,a,r){return new(a||(a=Promise))((function(i,l){function n(e){try{c(r.next(e))}catch(e){l(e)}}function o(e){try{c(r.throw(e))}catch(e){l(e)}}function c(e){var t;e.done?i(e.value):(t=e.value,t instanceof a?t:new a((function(e){e(t)}))).then(n,o)}c((r=r.apply(e,t||[])).next())}))};function C(e,t){return T(this,void 0,void 0,(function*(){try{const a=yield chrome.runtime.sendMessage({action:"captureScreenshot",timestamp:e,uuid:t});if(!a.success)throw new Error(a.message||"Screenshot capture failed");window.postMessage({type:"SCREENSHOT_COMPLETE",timestamp:e,success:!0},"*")}catch(t){console.error("Error capturing screenshot in content script:",t),window.postMessage({type:"SCREENSHOT_COMPLETE",timestamp:e,success:!1,error:t.message},"*")}}))}window.addEventListener("message",(e=>T(void 0,void 0,void 0,(function*(){if(e.source===window){if(e.data.type&&"GET_USER_ID"===e.data.type){const e=(yield chrome.storage.local.get("userId")).userId;window.postMessage({type:"GET_USER_ID_RESPONSE",userId:e},"*")}if(e.data.type&&"CAPTURE_SCREENSHOT"===e.data.type&&(yield C(e.data.timestamp,e.data.uuid)),e.data.type&&"SAVE_INTERACTION_DATA"===e.data.type)try{const t=Object.assign({},e.data.data),a=yield chrome.runtime.sendMessage({action:"saveData",data:t});if(!a.success)throw new Error(a.message||"interaction capture failed");window.postMessage({type:"INTERACTION_COMPLETE",timestamp:e.data.data.timestamp,success:!0},"*")}catch(t){console.error("Error saving interaction data:",t),window.postMessage({type:"INTERACTION_COMPLETE",success:!1,error:t.message,timestamp:e.data.data.timestamp},"*")}}}))));const E=()=>{document.addEventListener("DOMContentLoaded",(()=>{console.log("DOMContentLoaded event triggered"),f(),g()}));let e,t=!1,a=window.scrollY||document.documentElement.scrollTop,r=0,i=window.scrollX||document.documentElement.scrollLeft,l=0;function n(e,n){return T(this,void 0,void 0,(function*(){try{console.log("scroll stop uuid",e);const o=window.scrollY||document.documentElement.scrollTop;r+=o-a;const c=window.scrollX||document.documentElement.scrollLeft;l+=c-i;const d={width:window.innerWidth,height:window.innerHeight};0===r&&0===l||(yield function(e,t,a,r,i,l,n,o,c){return T(this,void 0,void 0,(function*(){try{const d=function(e,t){return`html_${function(e){let t=0;for(let a=0;a<e.length;a++)t=(t<<5)-t+e.charCodeAt(a),t|=0;return console.log("Hash value before return:",t),t.toString()}(window.location.href)}_${e}_${t}`}(a,r),s=g();f();const u=x();let m={uuid:r,eventType:e,timestamp:a,htmlSnapshotId:d,pageMeta:u||"",htmlContent:document.documentElement.outerHTML,simplifiedHTML:s};m.windowSize=i,m.scrollDistance_Y=l,m.scrollCurrentTop=n,m.scrollCurrentLeft=o,m.scrollDistance_X=c,m.target=t,yield chrome.runtime.sendMessage({action:"saveData",data:m})}catch(t){console.error(`Error during ${e} event handling:`,t)}}))}("scroll",window.location.href,n,e,d,r,o,l,c),r=0,l=0,a=o,i=c),t=!1}catch(e){console.error("Error during scroll stop handling:",e)}}))}let o="",c="";document.addEventListener("scroll",(r=>T(void 0,void 0,void 0,(function*(){console.log("scroll event"),document.getElementById("reason-modal")||(r.target===window||r.target===document||r.target===document.documentElement?(t||(t=!0,a=window.scrollY||document.documentElement.scrollTop,o=A(),c=(new Date).toISOString(),yield function(e,t){return T(this,void 0,void 0,(function*(){try{console.log("First scroll event"),C(t,e),g()}catch(e){console.error("Error during first scroll handling:",e)}}))}(o,c)),window.clearTimeout(e),e=window.setTimeout((()=>n(o,c)),300)):console.log("Scroll event ignored from a nested scrollable container"))})))),chrome.runtime.onMessage.addListener(((e,t,a)=>{if(console.log("message",e),"getHTML"===e.action){const e=g();f();const t=document.documentElement.outerHTML,r=x(),i={width:window.innerWidth,height:window.innerHeight};a({html:t,pageMeta:r,simplifiedHTML:e,windowSize:i})}if("show_popup"===e.action){if(console.log("show_popup",e),document.getElementById("reason-modal"))return void a({success:!1,message:"popup already exists"});const t=new CustomEvent("show-modal",{detail:{question:e.question,placeholder:e.placeholder,callback:e=>{a(e)}}});return document.dispatchEvent(t),!0}if("showReminder"===e.action){console.log("showReminder");const t=e.data;alert(`Thank you for participating!\nYou have contributed ${t.on_date} rationales this week\nYou have contributed ${t.all_time} rationales in total. `)}}))};(function(a,r=!1){return i=this,l=void 0,o=function*(){if(!r)if(chrome.storage){if(!(yield chrome.storage.local.get("userId")).userId)return console.log("no user id"),!0}else if(!(yield new Promise((e=>{const t=a=>{"GET_USER_ID_RESPONSE"===a.data.type&&(window.removeEventListener("message",t),e(a.data.userId))};window.addEventListener("message",t),window.postMessage({type:"GET_USER_ID"},"*")}))))return!0;return!a||!e.some((e=>a.includes(e)))||t.some((e=>a.includes(e)))},new((n=void 0)||(n=Promise))((function(e,t){function a(e){try{c(o.next(e))}catch(e){t(e)}}function r(e){try{c(o.throw(e))}catch(e){t(e)}}function c(t){var i;t.done?e(t.value):(i=t.value,i instanceof n?i:new n((function(e){e(i)}))).then(a,r)}c((o=o.apply(i,l||[])).next())}));var i,l,n,o})(window.location.href).then((e=>{console.log("content script, shouldExclude",e),e||E()}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,