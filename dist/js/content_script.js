/*! For license information please see content_script.js.LICENSE.txt */
(()=>{"use strict";var e="http://userdatacollect.hailab.io",t=["www.amazon.com"],r=("".concat(e,"/interactions_record_status"),"".concat(e,"/check_user_id"),["https://www.amazon.com/checkout/","https://www.amazon.com/gp/buy/","https://www.amazon.com/a/addresses","https://www.amazon.com/cpe/yourpayments/","https://www.amazon.com/ap/signin","https://www.amazon.com/ap/cvf/","https://www.amazon.com/ap/profile/","https://www.amazon.com/ax/account/"]);function n(e,t){var r="undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(!r){if(Array.isArray(e)||(r=function(e,t){if(e){if("string"==typeof e)return a(e,t);var r={}.toString.call(e).slice(8,-1);return"Object"===r&&e.constructor&&(r=e.constructor.name),"Map"===r||"Set"===r?Array.from(e):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?a(e,t):void 0}}(e))||t&&e&&"number"==typeof e.length){r&&(e=r);var n=0,i=function(){};return{s:i,n:function(){return n>=e.length?{done:!0}:{done:!1,value:e[n++]}},e:function(e){throw e},f:i}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var o,c=!0,l=!1;return{s:function(){r=r.call(e)},n:function(){var e=r.next();return c=e.done,e},e:function(e){l=!0,o=e},f:function(){try{c||null==r.return||r.return()}finally{if(l)throw o}}}}function a(e,t){(null==t||t>e.length)&&(t=e.length);for(var r=0,n=Array(t);r<t;r++)n[r]=e[r];return n}var i={selector:"#navbar-main",name:"nav_bar",children:[{selector:"#nav-search-bar-form",children:[{selector:"input#twotabsearchtextbox",name:"search_input",clickable:!0,generate_metadata:function(e){return{name:"search_term",data:{term:null==e?void 0:e.value}}}},{selector:"#nav-search-submit-button",clickable:!0,name:"search_button"}]},{selector:"#nav-link-accountList",text_selector:"#nav-link-accountList span.nav-line-2",add_text:!0,clickable:!0,name:"account_and_list_button"},{selector:"#nav-orders",add_text:!0,clickable:!0,name:"order_button"},{selector:"#nav-cart",text_selector:"#nav-cart .nav-line-2",add_text:!0,clickable:!0,name:"cart_button"},{selector:"#nav-flyout-searchAjax",name:"suggested_terms",children:[{selector:"div.s-suggestion-ellipsis-direction",name:"from_text",add_text:!0,clickable:!0}]}]},o={selector:"#productFactsDesktopExpander",add_text:!0,class:"product-facts"},c={selector:"div.mir-layout-DELIVERY_BLOCK-slot-PRIMARY_DELIVERY_MESSAGE_LARGE",add_text:!0,class:"product-delivery"},l={selector:'#selectQuantity, div[id^="qs-widget-button-container-atfc"]',name:"quantity_selector",children:[{selector:"label",add_text:!0},{selector:"span.a-dropdown-prompt",add_text:!0},{selector:"select",name:"drop_down_list"},{selector:"button",name:"drop_down_list",clickable:!0,add_text:!0},{selector:'div.qs-widget-dropdown-wrapper span[data-action="qs-widget-dropdown-decl"]',add_text:!0,clickable:!0,use_root:!0,name:"from_text",text_format:"Drop Down Option {}"}]},s={selector:"input[name='submit.add-to-cart'], input[name='submit.add-to-cart-ubb'], #freshAddToCartButton input",add_text:!0,clickable:!0,name:"add_to_cart",class:"product-add-to-cart"},d={selector:"input[name='submit.buy-now']",add_text:!0,clickable:!0,name:"buy_now",class:"product-buy-now"},u={selector:"#buyBoxAccordion > div.a-box.celwidget",name:"from_text",text_selector:"div.accordion-caption > span",children:[{selector:"div[data-csa-c-content-id='offer_display_desktop_accordion_header'], div[data-csa-c-content-id='offer_display_mobile_accordion_header']",name:"accordion_selector",add_text:!0,clickable:!0,text_selector:"h5 span.a-text-bold"},{selector:"div.a-accordion-inner.accordion-row-content",name:"purchase_form",children:[o,c,l,{selector:"#replenishmentFrequency_feature_div",name:"delivery_frequency_selector",text_selector:"div.a-section.a-spacing-micro > span",add_text:!0,children:[{selector:"#rcxOrdFreqOnmlWrapper span.a-dropdown-prompt",add_text:!0},{selector:"#rcxOrdFreqOnmlWrapper select",name:"drop_down_list"}]},{selector:"#rcx-subscribe-submit-button-announce",add_text:!0,clickable:!0,name:"set_up_now",class:"product-set-up-now"},s,d]}]},p={selector:"#gsod_singleOfferDisplay_Desktop",children:[{selector:"#addToCart",name:"purchase_form",children:[o,c,l,s,d]}]},m=[i,{selector:"#sc-collapsed-carts-container",name:"amazon_fresh_cart",children:[{selector:"div.sc-localmarket-text-logo",add_text:!0},{selector:'div[data-name="collapsed_item_list"]',clickable:!0,name:"item_list"},{selector:'div.sc-buy-box-inner-box input[name^="proceedToALMCheckout"]',clickable:!0,name:"check_out",add_text:!0},{selector:"div.sc-buy-box-inner-box a",clickable:!0,name:"from_text",add_text:!0}]},{selector:"div[data-name='Active Items']",name:"active_item_list",children:[{selector:"div.sc-list-item-content",text_selector:"div.sc-item-content-group ul > li > span.a-list-item > a.sc-product-title span.a-truncate-full",name:"from_text",children:[{selector:"div.sc-item-check-checkbox-selector label",clickable:!0,name:"checkbox"},{selector:"div.sc-image-wrapper a",clickable:!0,name:"product_image",add_text:!0,text_format:"Product Image"},{selector:"div.sc-item-content-group ul > li > span.a-list-item > a.sc-product-title",clickable:!0,text_selector:"span.a-truncate-full",add_text:!0,name:"product_detail"},{selector:"li.sc-delivery-messaging",add_text:!0},{selector:"div.sc-badge-price-to-pay span.sc-product-price span:not(.a-offscreen)",add_text:!0},{selector:"div.sc-item-content-group span.sc-quantity-stepper",children:[{selector:"button[aria-label='Decrease quantity by one']",add_text:!0,text_js:function(e){return e.hasAttribute("aria-label")?e.getAttribute("aria-label"):""},clickable:!0,name:"decrease_quantity_by_one"},{selector:"div[role='spinbutton']",add_text:!0,text_format:"Current Quantity: {}"},{selector:"button[aria-label='Increase quantity by one']",add_text:!0,text_js:function(e){return e.hasAttribute("aria-label")?e.getAttribute("aria-label"):""},clickable:!0,name:"increase_quantity_by_one"}]},{selector:"div.sc-item-content-group input[data-action='delete']",add_text:!0,clickable:!0,name:"delete"},{selector:"div.sc-item-content-group input[data-action='save-for-later']",add_text:!0,clickable:!0,name:"save_for_later"}],generate_metadata:function(e){var t,r,n=null===(t=e.parentElement)||void 0===t?void 0:t.getAttribute("data-asin"),a=e.querySelector("div.sc-badge-price-to-pay span.sc-product-price span:not(.a-offscreen)"),i=null==a||null===(r=a.innerText)||void 0===r?void 0:r.replace(/[\n]/g,""),o=e.querySelector("div.sc-item-content-group ul > li > span.a-list-item > a.sc-product-title span.a-truncate-full"),c=null==o?void 0:o.innerText,l=e.querySelector("div.sc-item-content-group ul > li > span.a-list-item > a.sc-product-title"),s=null==l?void 0:l.getAttribute("href"),d=e.querySelector("li.sc-delivery-messaging"),u=null==d?void 0:d.innerText.replace(/[\n]/g," "),p=e.querySelector("div.sc-item-content-group span.sc-quantity-stepper div[role='spinbutton']"),m=null==p?void 0:p.innerText,f=e.querySelector("div.sc-item-check-checkbox-selector input");return{name:"active_items",data:{title:c,asin:n,price:i,url:s,delivery:u,quantity:m,selected:null!==(null==f?void 0:f.getAttribute("checked"))}}}}]},{selector:"#sc-buy-box-ptc-button input",add_text:!0,clickable:!0,name:"check_out"}],f=[{match:"/",match_method:"url",match_with_ref:!0,selector:"html",children:[{selector:"head",children:[{selector:"title",add_text:!0}]},{selector:"body",children:[i]}]},{match:"/s",match_method:"url",selector:"html",children:[{selector:"head",children:[{selector:"title",add_text:!0}]},{selector:"body",children:[i,{selector:"#s-refinements",name:"refinements",children:[{selector:"#topRefinements\\/0",name:"top_refinements",add_text:"true",text_format:"Recently used filters",children:[{selector:"li",add_text:!0,name:"from_text",clickable:!0,text_js:function(e){try{var t="";if(!e)return t;var r=e.querySelector("a.a-link-normal.s-navigation-item");if(e.innerText&&e.innerText.trim())t+=e.innerText.trim(),r&&r.hasAttribute("title")&&(t+=" ",t+=r.getAttribute("title"));else{var n=e.querySelector("a.a-link-normal.s-navigation-item");n&&n.hasAttribute("title")&&(t+=n.getAttribute("title"))}return t}catch(e){return console.log(e),""}},children:[{selector:"input[type='checkbox']"}]}]},{selector:"div.a-section.a-spacing-none:not(:has(#n-title)):has(span.a-size-base.a-color-base.puis-bold-weight-text):has(ul span.a-declarative > span > li):not(#reviewsRefinements):not(#departments):not(#priceRefinements):not(#filters)",name:"from_text",text_selector:"span.a-size-base.a-color-base.puis-bold-weight-text",children:[{selector:"span.a-size-base.a-color-base.puis-bold-weight-text",add_text:!0,class:"refinement-title"},{selector:"a.s-navigation-clear-link",add_text:!0,name:"clear_selection",clickable:!0},{selector:"ul > span.a-declarative > span > li:has(a.a-link-normal.s-navigation-item)",add_text:!0,name:"from_text",clickable:!0,direct_child:!0,text_js:function(e){try{var t="";if(!e)return t;var r=e.querySelector("a.a-link-normal.s-navigation-item");if(e.innerText&&e.innerText.trim())t+=e.innerText.trim(),r&&r.hasAttribute("title")&&(t+=" ",t+=r.getAttribute("title"));else{var n=e.querySelector("a.a-link-normal.s-navigation-item");n&&n.hasAttribute("title")&&(t+=n.getAttribute("title"))}return r&&r.getAttribute("aria-current"),t}catch(e){return console.log(e),""}},generate_metadata:function(e){var t,r,n,a="",i=e.querySelector("a.a-link-normal.s-navigation-item");if(e.innerText&&e.innerText.trim())a+=e.innerText.trim(),i&&i.hasAttribute("title")&&(a+="_",a+=i.getAttribute("title"));else{var o=e.querySelector("a.a-link-normal.s-navigation-item");o&&o.hasAttribute("title")&&(a+=o.getAttribute("title"))}var c,l=null===(t=e.closest("ul"))||void 0===t||null===(t=t.parentElement)||void 0===t?void 0:t.firstElementChild,s=null==l||null===(r=l.innerText)||void 0===r?void 0:r.replace(/[ ]/g,"_").toLowerCase().trim(),d="";return i&&i.hasAttribute("href")&&(d=i.getAttribute("href")),i&&"true"===i.getAttribute("aria-current")?{name:"refinements."+s,data:{title:(null===(c=a)||void 0===c?void 0:c.trim())||"",selected:!0,url:d}}:{name:"refinements."+s,data:{title:(null===(n=a)||void 0===n?void 0:n.trim())||"",selected:!1,url:d}}},children:[{selector:"input[type='checkbox']"}]},{selector:"ul > span.a-declarative > li > span > div[data-a-expander-name='filter-content-expander']",name:"more_options",children:[{selector:"a[data-csa-c-func-deps='aui-da-a-expander-toggle']",name:"toggle_expansion",add_text:!0},{selector:"li",add_text:!0,name:"from_text",clickable:!0,text_js:function(e){try{var t="";if(!e)return t;var r=e.querySelector("a.a-link-normal.s-navigation-item");if(e.innerText&&e.innerText.trim())t+=e.innerText.trim(),r&&r.hasAttribute("title")&&(t+=" ",t+=r.getAttribute("title"));else{var n=e.querySelector("a.a-link-normal.s-navigation-item");n&&n.hasAttribute("title")&&(t+=n.getAttribute("title"))}return r&&r.getAttribute("aria-current"),t}catch(e){return console.log(e),""}},generate_metadata:function(e){var t,r,n,a="",i=e.querySelector("a.a-link-normal.s-navigation-item");if(e.innerText&&e.innerText.trim())a+=e.innerText.trim(),i&&i.hasAttribute("title")&&(a+="_",a+=i.getAttribute("title"));else{var o=e.querySelector("a.a-link-normal.s-navigation-item");o&&o.hasAttribute("title")&&(a+=o.getAttribute("title"))}var c,l=null===(t=e.closest("ul"))||void 0===t||null===(t=t.parentElement)||void 0===t||null===(t=t.closest("ul"))||void 0===t||null===(t=t.parentElement)||void 0===t?void 0:t.firstElementChild,s=null==l||null===(r=l.innerText)||void 0===r?void 0:r.replace(/[ ]/g,"_").toLowerCase().trim(),d="";return i&&i.hasAttribute("href")&&(d=i.getAttribute("href")),i&&"true"===i.getAttribute("aria-current")?{name:"refinements."+s,data:{title:(null===(c=a)||void 0===c?void 0:c.trim())||"",selected:!0,url:d}}:{name:"refinements."+s,data:{title:(null===(n=a)||void 0===n?void 0:n.trim())||"",selected:!1,url:d}}},children:[{selector:"input[type='checkbox']"}]}]}]},{selector:"#departments",name:"departments",add_text:!0,text_format:"Department",children:[{selector:"li a",add_text:!0,name:"from_text",clickable:!0,generate_metadata:function(e){var t=null==e?void 0:e.getAttribute("aria-current"),r=null==e?void 0:e.innerText,n=null==e?void 0:e.getAttribute("href");return t&&"true"==t?{name:"refinements.departments",data:{title:r,selected:!0,url:n}}:{name:"refinements.departments",data:{title:r,selected:!1,url:n}}}}]},{selector:"#reviewsRefinements",name:"reviews_refinements",add_text:!0,text_format:"Customer Reviews",children:[{selector:"a.s-navigation-clear-link",add_text:!0,name:"clear_selection",clickable:!0},{selector:"li a[aria-current='true']",add_text:!0,name:"from_text",clickable:!0,generate_metadata:function(e){var t;return{name:"refinements.reviews",data:{title:null==e||null===(t=e.innerText)||void 0===t?void 0:t.replace(/\n/g," "),selected:!0,url:null==e?void 0:e.getAttribute("href")}}}},{selector:"li a[aria-current='false']",add_text:!0,name:"from_text",clickable:!0,generate_metadata:function(e){var t;return{name:"refinements.reviews",data:{title:null==e||null===(t=e.innerText)||void 0===t?void 0:t.replace(/\n/g," "),selected:!1,url:null==e?void 0:e.getAttribute("href")}}}}]},{selector:"#priceRefinements",name:"price_refinements",children:[{selector:"#p_36-title, div.sf-refinement-heading span",add_text:!0,name:"price_heading"},{selector:"div[aria-labelledby='p_36-title'] > a",add_text:!0,name:"clear_price_selection",clickable:!0},{selector:"ul[aria-labelledby='p_36-title'] a[aria-current='true']",add_text:!0,name:"from_text",clickable:!0,generate_metadata:function(e){return{name:"refinements.price",data:{title:null==e?void 0:e.innerText,selected:!0,url:null==e?void 0:e.getAttribute("href")}}}},{selector:"ul[aria-labelledby='p_36-title'] a[aria-current='false']",add_text:!0,name:"from_text",clickable:!0,generate_metadata:function(e){return{name:"refinements.price",data:{title:null==e?void 0:e.innerText,selected:!1,url:null==e?void 0:e.getAttribute("href")}}}},{selector:"div.sf-range-slider-row:nth-of-type(1)",add_text:!0,generate_metadata:function(e){var t;return{name:"refinements.price",data:{title:"price_range",range:null==e||null===(t=e.innerText)||void 0===t?void 0:t.replace(/\n/g,"")}}}},{selector:"div.sf-range-slider-row:nth-of-type(2) div.s-lower-bound input",name:"price_min_value",add_text:!0,clickable:!0,keep_attr:["min","max","step"],override_attr:{step_values:function(e){var t=e.closest("form");if(t){var r=t.getAttribute("data-slider-props");if(r)return JSON.parse(r).stepLabels}return""},current_value:function(e){var t=Number.parseInt(e.getAttribute("value"));if(null!==t){var r=e.closest("form");if(r){var n=r.getAttribute("data-slider-props");if(n)return JSON.parse(n).stepLabels[t]}}return""}}},{selector:"div.sf-range-slider-row:nth-of-type(2) div.s-upper-bound input",name:"price_max_value",add_text:!0,clickable:!0,keep_attr:["min","max","step"],override_attr:{step_values:function(e){var t=e.closest("form");if(t){var r=t.getAttribute("data-slider-props");if(r)return JSON.parse(r).stepLabels}return""},current_value:function(e){var t=Number.parseInt(e.getAttribute("value"));if(null!==t){var r=e.closest("form");if(r){var n=r.getAttribute("data-slider-props");if(n)return JSON.parse(n).stepLabels[t]}}return""}}},{selector:"div.sf-submit-range-button input",name:"submit_price_range",add_text:!0,text_format:"Go",clickable:!0},{selector:"div.sf-reset-range-link a",name:"reset_price_selection",add_text:!0,clickable:!0},{selector:"#p_n_deal_type-title",add_text:!0,name:"deals_discounts_heading"},{selector:"div[aria-labelledby='p_n_deal_type-title'] > a",add_text:!0,name:"clear_deals_discount_selection",clickable:!0},{selector:"ul[aria-labelledby='p_n_deal_type-title'] a[aria-current='true']",add_text:!0,name:"from_text",clickable:!0,generate_metadata:function(e){return{name:"refinements.price",data:{title:null==e?void 0:e.innerText,selected:!0,url:null==e?void 0:e.getAttribute("href")}}}},{selector:"ul[aria-labelledby='p_n_deal_type-title'] a[aria-current='false']",add_text:!0,name:"from_text",clickable:!0,generate_metadata:function(e){return{name:"refinements.price",data:{title:null==e?void 0:e.innerText,selected:!1,url:null==e?void 0:e.getAttribute("href")}}}}]}]},{selector:"div.s-main-slot.s-result-list.s-search-results",name:"search_results",children:[{selector:"div.AdHolder",name:"ads",children:[{selector:"div[data-asin]",name:"from_text",add_text:!0,clickable:!0,text_js:function(e){var t=e.querySelector("img");return(null==t?void 0:t.getAttribute("alt")).trim()||""},generate_metadata:function(e){var t=null==e?void 0:e.getAttribute("data-asin"),r=e.querySelector("img"),n=null==r?void 0:r.getAttribute("alt"),a=e.querySelector("a[data-type='productTitle']");return{name:"ads",data:{title:n,asin:t,url:null==a?void 0:a.getAttribute("href")}}}}]},{insert_split_marker:!0,insert_split_marker_every:4,selector:'div[data-component-type="s-search-result"]',text_selector:"span.a-color-base.a-text-normal, h2.a-color-base.a-text-normal span",name:"from_text",class:"search-result",children:[{selector:"div[data-cy='title-recipe'] a.a-link-normal.s-link-style.a-text-normal",add_text:!0,class:"product-name",clickable:!0,name:"product_name"},{selector:"div.s-product-image-container",add_text:!0,name:"product_image",clickable:!0,text_format:"Product Image"},{selector:"div.s-color-swatch-container",name:"available_colors",children:[{selector:"div.s-color-swatch-pad",name:"from_text",clickable:!0,add_text:!0,text_js:function(e){var t=e.querySelector("a");return t&&t.getAttribute("aria-label")||""}},{selector:"div[data-csa-c-type='link'] a",direct_child:!0,name:"from_text",clickable:!0,add_text:!0}]},{selector:"div.s-variations-options-elevated",name:"options",add_text:!0,clickable:!0,click_selector:"a"},{selector:"div[data-cy='reviews-block']",class:"product-review",children:[{selector:"span.a-icon-alt",add_text:!0,class:"product-rating"},{selector:"span.a-size-base.s-underline-text",add_text:!0,text_format:"{} reviews",class:"product-rating-count",name:"product_rating_count",clickable:!0}]},{selector:"div[data-cy='price-recipe']",class:"product-price",children:[{selector:"a.a-link-normal > span.a-price > span.a-offscreen",add_text:!0}]},{selector:"div[data-cy='delivery-recipe']",add_text:!0,class:"product-delivery"},{selector:"div[data-cy='add-to-cart'] button",add_text:!0,clickable:!0,name:"add_to_cart"},{selector:"div[data-csa-c-content-id='s-search-see-details-button'] a",add_text:!0,clickable:!0,name:"see_options"},{selector:'div[name="ax-qs"]',children:[{selector:"button[aria-label='Decrease quantity by one']",add_text:!0,text_js:function(e){return e.hasAttribute("aria-label")?e.getAttribute("aria-label"):""},clickable:!0,name:"decrease_quantity_by_one"},{selector:"div[role='spinbutton']",add_text:!0,text_format:"Current Quantity: {}"},{selector:"button[aria-label='Increase quantity by one']",add_text:!0,text_js:function(e){return e.hasAttribute("aria-label")?e.getAttribute("aria-label"):""},clickable:!0,name:"increase_quantity_by_one"}]}],generate_metadata:function(e){var t=e.getAttribute("data-asin"),r=e.querySelector("div[data-cy='price-recipe'] a.a-link-normal > span.a-price > span.a-offscreen"),n=null==r?void 0:r.innerText,a=e.querySelector("span.a-color-base.a-text-normal, h2.a-color-base.a-text-normal span"),i=null==a?void 0:a.innerText,o=e.querySelector("div[data-cy='title-recipe'] a.a-link-normal.s-link-style.a-text-normal"),c=null==o?void 0:o.getAttribute("href"),l=e.querySelector("div[data-cy='delivery-recipe']");return{name:"search_results",data:{title:i,asin:t,price:n,url:c,delivery:null==l?void 0:l.innerText.replace(/[\n]/g," ")}}}}]},{selector:"span.s-pagination-strip",name:"pagination",children:[{selector:".s-pagination-item",add_text:!0,name:"from_text",clickable:!0}]},{selector:"div.a-popover-wrapper",name:"popover",children:[{selector:"header.a-popover-header button",add_text:!0,clickable:!0,name:"close",text_format:"Close"},{selector:"div.a-popover-inner div.puis-atc-size-variation",children:[{selector:"div.a-row:nth-of-type(1)",direct_child:!0,children:[{selector:"span[data-component-type='s-product-image'] a",name:"product_image",add_text:!0,clickable:!0,text_format:"Product Image"},{selector:"div.puis-size-variation-title a",name:"product_title",add_text:!0,clickable:!0},{selector:"div.puis-size-variation-product-spec",name:"product_specification",add_text:!0,clickable:!0,click_selector:"a"}]},{selector:"div.a-row:nth-of-type(2)",direct_child:!0,children:[{selector:"div.puis-size-variation-product-options",name:"from_text",text_selector:"span.a-size-base.a-color-secondary",children:[{selector:"span.a-size-base.a-color-secondary",add_text:!0},{selector:"span.a-dropdown-prompt",add_text:!0},{selector:"select",name:"drop_down_list"}]},{selector:"div.puis-size-variation-price a.a-text-normal",name:"price",clickable:!0,add_text:!0,text_selector:"span[aria-hidden='true']"},{selector:"div.puis-size-variation-delivery",add_text:!0,name:"delivery"}]},{selector:"div.a-row:nth-of-type(3)",direct_child:!0,children:[{selector:"span.s-no-js-hide input",name:"cancel",clickable:!0,add_text:!0,text_format:"Cancel"},{selector:"div.puis-atcb-add-container button",name:"add_to_cart",clickable:!0,add_text:!0}]}]}]}]}]},{match:"#productTitle",match_text:"",selector:"html",children:[{selector:"head",children:[{selector:"title",add_text:!0}]},{selector:"body",children:[i,{selector:"#centerCol",class:"product-card",children:[{selector:"#title",add_text:!0,keep_attr:["id"],generate_metadata:function(e){return{name:"product_details",data:{title:(null==e?void 0:e.innerText)||""}}}},{selector:"#averageCustomerReviews",class:"review",children:[{selector:"span.a-icon-alt",add_text:!0},{selector:"#acrCustomerReviewText",add_text:!0}]},{selector:'#apex_desktop > div[data-csa-c-slot-id="apex_dp_center_column"] > div[class="offersConsistencyEnabled"] > div:not([style="display:none;"]):not([style="display: none;"]) #corePriceDisplay_desktop_feature_div:has(#sns-base-price) #sns-base-price span.a-price.aok-align-center.reinventPricePriceToPayMargin.priceToPay, #apex_desktop > div[data-csa-c-slot-id="apex_dp_center_column"] > div[class="offersConsistencyEnabled"] > div:not([style="display:none;"]):not([style="display: none;"]) #corePriceDisplay_desktop_feature_div:not(:has(#sns-base-price)) span.a-price.aok-align-center.reinventPricePriceToPayMargin.priceToPay, #apex_desktop > div[data-csa-c-slot-id="apex_dp_center_column"] > div[data-csa-c-content-id="apex_with_rio_cx"] #corePriceDisplay_desktop_feature_div span.a-price.aok-align-center.reinventPricePriceToPayMargin.priceToPay',add_text:!0,text_format:"Price: {}",class:"product-price",generate_metadata:function(e){var t;return{name:"product_details",data:{price:(null==e||null===(t=e.innerText)||void 0===t?void 0:t.replace(/\n/g,""))||""}}},text_js:function(e){var t;return(null==e||null===(t=e.innerText)||void 0===t?void 0:t.replace(/\n/g,""))||""}},{selector:"#twister",class:"product-options",name:"product_options",children:[{selector:"div.a-section",text_selector:"div.a-row:has(label.a-form-label) > label.a-form-label",name:"from_text",direct_child:!0,generate_metadata:function(e){var t,r,a=null===(t=e.querySelector("div.a-row:has(label.a-form-label) label.a-form-label"))||void 0===t?void 0:t.innerHTML.replace(/[:\n]/g,"").trim(),i=null===(r=e.querySelector("div.a-row:has(label.a-form-label) span.selection"))||void 0===r?void 0:r.innerHTML;if(void 0===i||""===i){var o,c=null===(o=e.querySelector("select"))||void 0===o?void 0:o.querySelectorAll("option");if(c){var l,s=n(c);try{for(s.s();!(l=s.n()).done;){var d=l.value;d&&null!==d.getAttribute("selected")&&(i=d.innerHTML.trim())}}catch(e){s.e(e)}finally{s.f()}}}return{name:"product_options",data:{label:a,value:i.trim()}}},children:[{selector:"div.a-row:has(label.a-form-label)",children:[{selector:"label.a-form-label",add_text:!0},{selector:"span.selection",add_text:!0}]},{selector:"select",add_text:!0,name:"drop_down_list"},{selector:"ul",name:"button_list",children:[{selector:"li button",add_text:!0,clickable:!0,name:"from_text",text_js:function(e){var t="";if(e.innerText.trim()){t+=e.innerText.trim();var r=e.querySelector("img");r&&r.alt&&(t+=" ",t+=r.alt)}else{var n=e.querySelector("img");n&&n.alt&&(t+=n.alt)}return t.trim()}}]}]}]},{selector:"#twister-plus-inline-twister",class:"product-options",name:"product_options",children:[{selector:"div.inline-twister-row",text_selector:"div.inline-twister-dim-title-value-truncate-expanded span.a-size-base.a-color-secondary",name:"from_text",direct_child:!0,generate_metadata:function(e){var t,r,a=null===(t=e.querySelector("div.inline-twister-dim-title-value-truncate-expanded span.a-size-base.a-color-secondary"))||void 0===t?void 0:t.innerHTML.replace(/[:\n]/g,"").trim(),i=null===(r=e.querySelector("div.inline-twister-dim-title-value-truncate-expanded span.inline-twister-dim-title-value"))||void 0===r?void 0:r.innerHTML;if(void 0===i||""===i){var o,c=null===(o=e.querySelector("select"))||void 0===o?void 0:o.querySelectorAll("option");if(c){var l,s=n(c);try{for(s.s();!(l=s.n()).done;){var d=l.value;d&&null!==d.getAttribute("selected")&&(i=d.innerHTML.trim())}}catch(e){s.e(e)}finally{s.f()}}}return{name:"product_options",data:{label:a,value:i.trim()}}},children:[{selector:"div.inline-twister-dim-title-value-truncate-expanded",children:[{selector:"span.a-size-base.a-color-secondary",add_text:!0},{selector:"span.inline-twister-dim-title-value",add_text:!0}]},{selector:"select",add_text:!0,name:"drop_down_list"},{selector:"ul",name:"button_list",children:[{selector:"li span:not(.aok-hidden) input",add_text:!0,clickable:!0,name:"from_text",text_js:function(e){var t=e.nextElementSibling,r="";if(t.innerText.trim()){r+=t.innerText.trim();var n=t.querySelector("img");n&&n.alt&&(r+=" ",r+=n.alt)}else{var a=t.querySelector("img");a&&a.alt&&(r+=a.alt)}return r.trim()}}]}]},{selector:"div.inline-twister-singleton-header",text_selector:"span.a-size-base.a-color-secondary",name:"from_text",children:[{selector:"span.a-size-base.a-color-secondary",add_text:!0},{selector:"span.inline-twister-dim-title-value-truncate",add_text:!0}],generate_metadata:function(e){var t,r;return{name:"product_options",data:{label:null===(t=e.querySelector("span.a-size-base.a-color-secondary"))||void 0===t?void 0:t.innerHTML.replace(/[:\n]/g,"").trim(),value:(null===(r=e.querySelector("span.inline-twister-dim-title-value-truncate"))||void 0===r?void 0:r.innerHTML).trim()}}}}]},{selector:"#productFactsDesktopExpander ul.a-unordered-list, #featurebullets_feature_div ul.a-unordered-list",add_text:!0,name:"about_this_item",text_format:"About this item: ",children:[{selector:"li",add_text:!0}],generate_metadata:function(e){var t;return{name:"product_details",data:{bullet_list:(null==e||null===(t=e.innerText)||void 0===t?void 0:t.replace(/\n/g," "))||""}}}}]},{selector:"#buybox:has(div.a-tab-container):not(:has(#partialState_buybox_desktop))",name:"buybox",children:[{selector:"#tab_heading_desktop_buybox_group_1 a",name:"deliver_tab",clickable:!0,add_text:!0},{selector:"#tab_heading_desktop_buybox_group_2 a",name:"pick_up_tab",clickable:!0,add_text:!0},{selector:"#tab_desktop_buybox_group_1",name:"delivery",add_text:!0,text_format:"Delivery",children:[u,p]},{selector:"#tab_desktop_buybox_group_2",name:"pick_up",add_text:!0,text_format:"Pick Up",children:[{selector:"#gsod_singleOfferDisplay_group_2_Desktop",children:[{selector:"#pickUpOfferDisplay",name:"purchase_form",children:[o,c,l,s,d]}]}]}],generate_metadata:function(e){var t=e.querySelector("input#ASIN");return{name:"product_details",data:{asin:(null==t?void 0:t.value)||""}}}},{selector:"#buybox:not(:has(div.a-tab-container)):not(:has(#partialState_buybox_desktop))",name:"buybox",children:[u,p],generate_metadata:function(e){var t=e.querySelector("input#ASIN");return{name:"product_details",data:{asin:(null==t?void 0:t.value)||""}}}},{selector:"#partialState_buybox_desktop",children:[{selector:"#partialStateBuybox div.a-section.a-text-center.a-spacing-small",add_text:!0}],generate_metadata:function(e){var t=e.querySelector("input#ASIN");return{name:"product_details",data:{asin:(null==t?void 0:t.value)||""}}}},{selector:"#attach-warranty-pane #attach-warranty-display",name:"warranty-box",children:[{selector:"div.attach-warranty-box",text_selector:"#attach-warranty-card-display-title",name:"from_text",children:[{selector:"i.a-icon-checkbox",name:"select",clickable:!0},{selector:"#attach-warranty-card-display-title",add_text:!0},{selector:"#attach-warranty-card-price",add_text:!0}]},{selector:"div.a-section.attach-warranty-button-row",children:[{selector:"input[aria-labelledby='attachSiAddCoverage-announce']",name:"add_protection",clickable:!0,add_text:!0,text_format:"Add Protection"},{selector:"input[aria-labelledby='attachSiNoCoverage-announce']",name:"no_protection",clickable:!0,add_text:!0,text_format:"No Thanks"}]}]}]}]},{match:"/cart/add-to-cart",match_method:"url",selector:"html",match_with_ref:!0,children:[{selector:"head",children:[{selector:"title",add_text:!0}]},{selector:"body",children:[i,{selector:"#sw-atc-buy-box",children:[{selector:"#sw-subtotal",children:[{selector:"#sw-subtotal-item-count",add_text:!0},{selector:"span[aria-hidden='true']",add_text:!0}]},{selector:"#sc-buy-box-ptc-button span.a-button-inner input",add_text:!0,text_selector:"div.sc-without-multicart",clickable:!0,name:"check_out"},{selector:"#sw-gtc a",add_text:!0,clickable:!0,name:"go_to_cart"}]}]}]},{match:"/cart/smart-wagon",match_method:"url",selector:"html",children:[{selector:"head",children:[{selector:"title",add_text:!0}]},{selector:"body",children:[i,{selector:"#sw-atc-buy-box",children:[{selector:"#sw-subtotal",children:[{selector:"#sw-subtotal-item-count",add_text:!0},{selector:"span[aria-hidden='true']",add_text:!0}]},{selector:"#sc-buy-box-ptc-button span.a-button-inner input",add_text:!0,text_selector:"div.sc-without-multicart",clickable:!0,name:"check_out"},{selector:"#sw-gtc a",add_text:!0,clickable:!0,name:"go_to_cart"}]}]}]},{match:"/gp/cart/view.html",match_method:"url",selector:"html",children:[{selector:"head",children:[{selector:"title",add_text:!0}]},{selector:"body",children:m}]},{match:"/cart",match_method:"url",match_with_ref:!0,selector:"html",children:[{selector:"head",children:[{selector:"title",add_text:!0}]},{selector:"body",children:m}]},{match:"/cart/localmarket",match_method:"url",match_with_ref:!0,selector:"html",children:[{selector:"head",children:[{selector:"title",add_text:!0}]},{selector:"body",children:[i,{selector:"div[data-name='Active Items']",name:"active_item_list",children:[{selector:"div.sc-list-item-content",text_selector:"ul > li > span.a-list-item > a.sc-product-title span.a-truncate-full",name:"from_text",children:[{selector:"div.sc-product-image-desktop a img",clickable:!0,name:"product_image",add_text:!0,text_format:"Product Image"},{selector:"ul > li > span.a-list-item > a.sc-product-title",clickable:!0,text_selector:"span.a-truncate-full",add_text:!0,name:"product_detail"},{selector:"div.sc-badge-price-to-pay span.sc-price",add_text:!0},{selector:"div.sc-action-links",children:[{selector:"div.qs-widget-container",children:[{selector:"input[aria-label='Remove']",add_text:!0,text_js:function(e){return e.hasAttribute("aria-label")?e.getAttribute("aria-label"):""},clickable:!0,name:"decrease_quantity_by_one"},{selector:"div.qs-widget-dropdown-flex-wrapper button",add_text:!0,clickable:!0,name:"quantity_drop_down_list",text_format:"Current Quantity: {}"},{selector:'div.qs-widget-dropdown-wrapper span[data-action="qs-widget-dropdown-decl"]',add_text:!0,clickable:!0,use_root:!0,name:"from_text",text_format:"Drop Down Option {}"},{selector:'div[id^="qs-widget-quantity-container-atfc"] span[data-action="qs-widget-quantity-changelink-decl"]',add_text:!0,clickable:!0,use_root:!0,name:"from_text"},{selector:'div[id^="qs-widget-summary-container-atfc"] span[id^="qs-widget-summary-atc-atfc"]',add_text:!0,clickable:!0,use_root:!0,name:"from_text"},{selector:"input[aria-label='Add']",add_text:!0,text_js:function(e){return e.hasAttribute("aria-label")?e.getAttribute("aria-label"):""},clickable:!0,name:"increase_quantity_by_one"}]}]},{selector:"input[data-action='delete']",add_text:!0,clickable:!0,name:"delete"}],generate_metadata:function(e){var t,r,n=null===(t=e.parentElement)||void 0===t?void 0:t.getAttribute("data-asin"),a=e.querySelector("div.sc-badge-price-to-pay span.sc-price"),i=null==a||null===(r=a.innerText)||void 0===r?void 0:r.replace(/[\n]/g,""),o=e.querySelector("ul > li > span.a-list-item > a.sc-product-title span.a-truncate-full"),c=null==o?void 0:o.innerText,l=e.querySelector("ul > li > span.a-list-item > a.sc-product-title"),s=null==l?void 0:l.getAttribute("href"),d=e.querySelector("div.sc-action-links div.qs-widget-dropdown-flex-wrapper button");return{name:"active_items",data:{title:c,asin:n,price:i,url:s,quantity:null==d?void 0:d.innerText}}}}]},{selector:'div.sc-buy-box-inner-box input[name^="proceedToALMCheckout"]',clickable:!0,name:"check_out",add_text:!0},{selector:"div.sc-buy-box-inner-box a",clickable:!0,name:"from_text",add_text:!0},{selector:"#sc-cart-above-actions button, #sc-cart-above-actions a",clickable:!0,name:"from_text",add_text:!0}]}]},{match:"/ap/signin",match_method:"url",terminate:function(){return!!arguments[0]},terminate_callback:function(){return arguments[0]},selector:"html"},{match:"/gp/buy/spc/handlers/display.html",match_method:"url",terminate:function(){return!!arguments[0]},terminate_callback:function(){return arguments[0]},selector:"html"},{match:"/gp/buyagain",match_method:"url",match_with_ref:!0,selector:"html",children:[{selector:"head",children:[{selector:"title",add_text:!0}]},{selector:"body",children:[i,{selector:"div.a-section:has(div.filter-container)",name:"filters",children:[{selector:"div.filter-container",text_selector:"span#filter-container-header",name:"from_text",children:[{selector:"span#filter-container-header",add_text:!0},{selector:"label",add_text:!0,clickable:!0,name:"from_text",generate_metadata:function(e){var t,r,n=e.innerText,a=null===(t=e.closest("div.filter-container"))||void 0===t?void 0:t.querySelector("#filter-container-header"),i=null==a||null===(r=a.innerText)||void 0===r?void 0:r.replace(/[ ]/g,"_").toLowerCase().trim(),o=e.querySelector("input");return o&&o.checked?{name:"filters."+i,data:{title:(null==n?void 0:n.trim())||"",selected:!0}}:{name:"filters."+i,data:{title:(null==n?void 0:n.trim())||"",selected:!1}}}}]}]},{selector:"div.alm-grid-desktop-grid-container",name:"product_list",children:[{selector:'div[id^="gridCell"]',name:"from_text",text_selector:"div[id^='closedCard'] a[id^='title'] span.a-truncate-full",children:[{selector:"div[id^='gridElement']",name:"product_card",children:[{selector:"div[id^='closedCard']",name:"closed_product_card",children:[{selector:"div[id^='info']",name:"open_product_card",clickable:!0,text_format:"Open Product Card"},{selector:"form span.a-button-inner",name:"add_to_cart",clickable:!0,add_text:!0},{selector:'div[id^="seeBuyingOptionsWrapper"] a',name:"see_buying_options",clickable:!0,add_text:!0}]},{selector:'div[name="ax-qs"]',children:[{selector:"button[aria-label='Decrease quantity by one']",add_text:!0,text_js:function(e){return e.hasAttribute("aria-label")?e.getAttribute("aria-label"):""},clickable:!0,name:"decrease_quantity_by_one"},{selector:"div[role='spinbutton']",add_text:!0,text_format:"Current Quantity: {}"},{selector:"button[aria-label='Increase quantity by one']",add_text:!0,text_js:function(e){return e.hasAttribute("aria-label")?e.getAttribute("aria-label"):""},clickable:!0,name:"increase_quantity_by_one"}]},{selector:"div[id^='expandedImage']",name:"close_product_card",clickable:!0,add_text:!0,text_format:"Close Product Card"}]}],generate_metadata:function(e){var t,r=e.querySelector("div[id^='closedCard'] div[id^='info']"),n=null==r?void 0:r.getAttribute("data-asin"),a=e.querySelector('div[id^="closedCard"] div[id^="info"] span[class*="priceBlockWithMarginRight"] span.a-price > span:not(.a-offscreen)'),i=null==a||null===(t=a.innerText)||void 0===t?void 0:t.replace(/[\n]/g,""),o=e.querySelector("div[id^='closedCard'] a[id^='title'] span.a-truncate-full"),c=null==o?void 0:o.innerText,l=e.querySelector('div[id^="closedCard"] div[id^="info"] #udmDeliveryMessageComponent');return{name:"active_items",data:{title:c,asin:n,price:i,delivery:null==l?void 0:l.innerText.replace(/[\n]/g," ")}}}},{selector:'div[id^="featured"]',name:"from_text",text_selector:"a[id^='title'] span.a-truncate-full",children:[{selector:'div[id^="detailContentWrapper"] div[id^="detailContent"]',name:"detailed_content",children:[{selector:"div:has(> img)",clickable:!0,name:"product_image",add_text:!0,text_format:"Product Image"},{selector:"a[id^='title']",clickable:!0,name:"product_title",add_text:!0,text_selector:"span.a-truncate-full"},{selector:"div[class*='multiOfferPillContainer'] a",clickable:!0,name:"from_text",add_text:!0},{selector:"div[data-buyingoptiontype='NEW'], div[class*='asinDetailInfoColumns']:has(input[name='submit.addToCart']",name:"one_time_purchase",children:[{selector:'span[class*="priceBlockWithMarginRight"] span.a-price > span:not(.a-offscreen)',add_text:!0,name:"price"},{selector:"#udmDeliveryMessageComponent",add_text:!0,name:"delivery"},{selector:'div[class*="actionButtonsRow"], div[class*="asinDetailActionsRow"]',name:"buttons",children:[{selector:'input[name="submit.addToCart"]',add_text:!0,name:"add_to_cart",clickable:!0},{selector:'input[id^="buy-now"]',add_text:!0,name:"buy_now",clickable:!0},{selector:'div[id^="feedbackButtonSection"] input',add_text:!0,name:"remove_item",clickable:!0},{selector:'div[name="ax-qs"]',children:[{selector:"button[aria-label='Decrease quantity by one']",add_text:!0,text_js:function(e){return e.hasAttribute("aria-label")?e.getAttribute("aria-label"):""},clickable:!0,name:"decrease_quantity_by_one"},{selector:"div[role='spinbutton']",add_text:!0,text_format:"Current Quantity: {}"},{selector:"button[aria-label='Increase quantity by one']",add_text:!0,text_js:function(e){return e.hasAttribute("aria-label")?e.getAttribute("aria-label"):""},clickable:!0,name:"increase_quantity_by_one"}]}]}],generate_metadata:function(e){var t,r,n,a,i=null===(t=e.parentElement)||void 0===t?void 0:t.parentElement,o=null==i?void 0:i.getAttribute("data-asin");if(null===o){var c=e.parentElement;null==c||c.getAttribute("data-asin")}var l=e.querySelector('span[class*="priceBlockWithMarginRight"] span.a-price > span:not(.a-offscreen)'),s=null==l||null===(r=l.innerText)||void 0===r?void 0:r.replace(/[\n]/g,""),d=null===(n=e.parentElement)||void 0===n||null===(n=n.parentElement)||void 0===n?void 0:n.querySelector("a[id^='title'] span.a-truncate-full"),u=null==d?void 0:d.innerText,p=null===(a=e.parentElement)||void 0===a||null===(a=a.parentElement)||void 0===a?void 0:a.querySelector("a[id^='title']"),m=null==p?void 0:p.getAttribute("href"),f=e.querySelector("#udmDeliveryMessageComponent");return{name:"active_items",data:{title:u,asin:o,price:s,url:m,delivery:null==f?void 0:f.innerText.replace(/[\n]/g," ")}}}},{selector:"div[data-buyingoptiontype='SNS'], div[class*='snsUpsellBlockContainer']",name:"subscribe_and_save",children:[{selector:'span[class*="priceBlockWithMarginRight"] span.a-price > span:not(.a-offscreen)',add_text:!0,name:"price"},{selector:"#udmDeliveryMessageComponent",add_text:!0,name:"delivery"},{selector:'div[class*="actionButtonsRow"]',name:"buttons",children:[{selector:'input[name="submit.addToCart"]',add_text:!0,name:"add_to_cart",clickable:!0},{selector:'span[class*="snsButton"] input',add_text:!0,name:"subscribe_and_save",clickable:!0},{selector:'div[id^="feedbackButtonSection"] input',add_text:!0,name:"remove_item",clickable:!0}]},{selector:'span[class*="subscriptionButton"]',add_text:!0,name:"set_up_subscription",clickable:!0}],generate_metadata:function(e){var t,r,n,a,i,o,c=null===(t=e.parentElement)||void 0===t?void 0:t.parentElement,l=null===(r=c)||void 0===r?void 0:r.getAttribute("data-asin");null===l&&(l=null===(o=c=e.querySelector('input[data-mix-operations="snsModalHandler"]'))||void 0===o?void 0:o.getAttribute("data-asin"));var s=e.querySelector('span[class*="priceBlockWithMarginRight"] span.a-price > span:not(.a-offscreen)'),d=null==s||null===(n=s.innerText)||void 0===n?void 0:n.replace(/[\n]/g,""),u=null===(a=e.parentElement)||void 0===a||null===(a=a.parentElement)||void 0===a?void 0:a.querySelector("a[id^='title'] span.a-truncate-full"),p=null==u?void 0:u.innerText,m=null===(i=e.parentElement)||void 0===i||null===(i=i.parentElement)||void 0===i?void 0:i.querySelector("a[id^='title']"),f=null==m?void 0:m.getAttribute("href"),h=e.querySelector("#udmDeliveryMessageComponent");return{name:"active_items",data:{title:p,asin:l,price:d,url:f,delivery:null==h?void 0:h.innerText.replace(/[\n]/g," ")}}}}]},{selector:"div[id^='detail-view-similar-items']",name:"similar_items",children:[{selector:"li.a-carousel-card",name:"from_text",text_selector:"a[id^='title'] span.a-truncate-full",children:[{selector:"div.a-image-container:has(> img)",clickable:!0,name:"product_image",add_text:!0,text_format:"Product Image"},{selector:"a[id^='title']",clickable:!0,name:"product_title",add_text:!0,text_selector:"span.a-truncate-full"},{selector:'span[class*="priceBlockWithMarginRight"] span.a-price > span:not(.a-offscreen)',add_text:!0,name:"price"},{selector:"#udmDeliveryMessageComponent",add_text:!0,name:"delivery"},{selector:'input[name="submit.addToCart"], input[name^="atfcShim"], button[aria-label="Add to Cart. Click to change quantity"]',add_text:!0,name:"add_to_cart",clickable:!0},{selector:'div[id^="seeBuyingOptionsWrapper"] a',name:"see_buying_options",clickable:!0,add_text:!0},{selector:'div[name="ax-qs"]',children:[{selector:"button[aria-label='Decrease quantity by one']",add_text:!0,text_js:function(e){return e.hasAttribute("aria-label")?e.getAttribute("aria-label"):""},clickable:!0,name:"decrease_quantity_by_one"},{selector:"div[role='spinbutton']",add_text:!0,text_format:"Current Quantity: {}"},{selector:"button[aria-label='Increase quantity by one']",add_text:!0,text_js:function(e){return e.hasAttribute("aria-label")?e.getAttribute("aria-label"):""},clickable:!0,name:"increase_quantity_by_one"}]},{selector:"div.qs-widget-container",children:[{selector:"input[aria-label='Remove']",add_text:!0,text_js:function(e){return e.hasAttribute("aria-label")?e.getAttribute("aria-label"):""},clickable:!0,name:"decrease_quantity_by_one"},{selector:"div.qs-widget-dropdown-flex-wrapper button",add_text:!0,clickable:!0,name:"drop_down_list",text_format:"Current Quantity: {}"},{selector:'div.qs-widget-dropdown-wrapper span[data-action="qs-widget-dropdown-decl"]',add_text:!0,clickable:!0,use_root:!0,name:"from_text",text_format:"Drop Down Option {}"},{selector:'div[id^="qs-widget-quantity-container-atfc"] span[data-action="qs-widget-quantity-changelink-decl"]',add_text:!0,clickable:!0,use_root:!0,name:"from_text"},{selector:'div[id^="qs-widget-summary-container-atfc"] span[id^="qs-widget-summary-atc-atfc"]',add_text:!0,clickable:!0,use_root:!0,name:"from_text"},{selector:"input[aria-label='Add']",add_text:!0,text_js:function(e){return e.hasAttribute("aria-label")?e.getAttribute("aria-label"):""},clickable:!0,name:"increase_quantity_by_one"}]}],generate_metadata:function(e){var t,r,n,a=null===(t=e.closest('div[id^="featured"]'))||void 0===t?void 0:t.querySelector('div[id^="detailContentWrapper"] a[id^="title"] span.a-truncate-full'),i=null==a||null===(r=a.innerText)||void 0===r?void 0:r.toLowerCase().replace(/[^\w]+/g,"_"),o=e.querySelector('div[class*="delightFaceout"]'),c=null==o?void 0:o.getAttribute("data-asin"),l=e.querySelector('span[class*="priceBlockWithMarginRight"] span.a-price > span:not(.a-offscreen)'),s=null==l||null===(n=l.innerText)||void 0===n?void 0:n.replace(/[\n]/g,""),d=e.querySelector("a[id^='title'] span.a-truncate-full"),u=null==d?void 0:d.innerText,p=e.querySelector("a[id^='title']"),m=null==p?void 0:p.getAttribute("href"),f=e.querySelector("#udmDeliveryMessageComponent");return{name:i+".similar_items",data:{title:u,asin:c,price:s,url:m,delivery:null==f?void 0:f.innerText.replace(/[\n]/g," ")}}}}]}]}]}]}]}];function h(e){return h="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},h(e)}function v(e,t){var r="undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(!r){if(Array.isArray(e)||(r=function(e,t){if(e){if("string"==typeof e)return b(e,t);var r={}.toString.call(e).slice(8,-1);return"Object"===r&&e.constructor&&(r=e.constructor.name),"Map"===r||"Set"===r?Array.from(e):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?b(e,t):void 0}}(e))||t&&e&&"number"==typeof e.length){r&&(e=r);var n=0,a=function(){};return{s:a,n:function(){return n>=e.length?{done:!0}:{done:!1,value:e[n++]}},e:function(e){throw e},f:a}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var i,o=!0,c=!1;return{s:function(){r=r.call(e)},n:function(){var e=r.next();return o=e.done,e},e:function(e){c=!0,i=e},f:function(){try{o||null==r.return||r.return()}finally{if(c)throw i}}}}function b(e,t){(null==t||t>e.length)&&(t=e.length);for(var r=0,n=Array(t);r<t;r++)n[r]=e[r];return n}function _(){_=function(){return t};var e,t={},r=Object.prototype,n=r.hasOwnProperty,a=Object.defineProperty||function(e,t,r){e[t]=r.value},i="function"==typeof Symbol?Symbol:{},o=i.iterator||"@@iterator",c=i.asyncIterator||"@@asyncIterator",l=i.toStringTag||"@@toStringTag";function s(e,t,r){return Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}),e[t]}try{s({},"")}catch(e){s=function(e,t,r){return e[t]=r}}function d(e,t,r,n){var i=t&&t.prototype instanceof y?t:y,o=Object.create(i.prototype),c=new j(n||[]);return a(o,"_invoke",{value:T(e,r,c)}),o}function u(e,t,r){try{return{type:"normal",arg:e.call(t,r)}}catch(e){return{type:"throw",arg:e}}}t.wrap=d;var p="suspendedStart",m="suspendedYield",f="executing",v="completed",b={};function y(){}function g(){}function x(){}var w={};s(w,o,(function(){return this}));var k=Object.getPrototypeOf,S=k&&k(k(P([])));S&&S!==r&&n.call(S,o)&&(w=S);var A=x.prototype=y.prototype=Object.create(w);function E(e){["next","throw","return"].forEach((function(t){s(e,t,(function(e){return this._invoke(t,e)}))}))}function q(e,t){function r(a,i,o,c){var l=u(e[a],e,i);if("throw"!==l.type){var s=l.arg,d=s.value;return d&&"object"==h(d)&&n.call(d,"__await")?t.resolve(d.__await).then((function(e){r("next",e,o,c)}),(function(e){r("throw",e,o,c)})):t.resolve(d).then((function(e){s.value=e,o(s)}),(function(e){return r("throw",e,o,c)}))}c(l.arg)}var i;a(this,"_invoke",{value:function(e,n){function a(){return new t((function(t,a){r(e,n,t,a)}))}return i=i?i.then(a,a):a()}})}function T(t,r,n){var a=p;return function(i,o){if(a===f)throw Error("Generator is already running");if(a===v){if("throw"===i)throw o;return{value:e,done:!0}}for(n.method=i,n.arg=o;;){var c=n.delegate;if(c){var l=L(c,n);if(l){if(l===b)continue;return l}}if("next"===n.method)n.sent=n._sent=n.arg;else if("throw"===n.method){if(a===p)throw a=v,n.arg;n.dispatchException(n.arg)}else"return"===n.method&&n.abrupt("return",n.arg);a=f;var s=u(t,r,n);if("normal"===s.type){if(a=n.done?v:m,s.arg===b)continue;return{value:s.arg,done:n.done}}"throw"===s.type&&(a=v,n.method="throw",n.arg=s.arg)}}}function L(t,r){var n=r.method,a=t.iterator[n];if(a===e)return r.delegate=null,"throw"===n&&t.iterator.return&&(r.method="return",r.arg=e,L(t,r),"throw"===r.method)||"return"!==n&&(r.method="throw",r.arg=new TypeError("The iterator does not provide a '"+n+"' method")),b;var i=u(a,t.iterator,r.arg);if("throw"===i.type)return r.method="throw",r.arg=i.arg,r.delegate=null,b;var o=i.arg;return o?o.done?(r[t.resultName]=o.value,r.next=t.nextLoc,"return"!==r.method&&(r.method="next",r.arg=e),r.delegate=null,b):o:(r.method="throw",r.arg=new TypeError("iterator result is not an object"),r.delegate=null,b)}function C(e){var t={tryLoc:e[0]};1 in e&&(t.catchLoc=e[1]),2 in e&&(t.finallyLoc=e[2],t.afterLoc=e[3]),this.tryEntries.push(t)}function O(e){var t=e.completion||{};t.type="normal",delete t.arg,e.completion=t}function j(e){this.tryEntries=[{tryLoc:"root"}],e.forEach(C,this),this.reset(!0)}function P(t){if(t||""===t){var r=t[o];if(r)return r.call(t);if("function"==typeof t.next)return t;if(!isNaN(t.length)){var a=-1,i=function r(){for(;++a<t.length;)if(n.call(t,a))return r.value=t[a],r.done=!1,r;return r.value=e,r.done=!0,r};return i.next=i}}throw new TypeError(h(t)+" is not iterable")}return g.prototype=x,a(A,"constructor",{value:x,configurable:!0}),a(x,"constructor",{value:g,configurable:!0}),g.displayName=s(x,l,"GeneratorFunction"),t.isGeneratorFunction=function(e){var t="function"==typeof e&&e.constructor;return!!t&&(t===g||"GeneratorFunction"===(t.displayName||t.name))},t.mark=function(e){return Object.setPrototypeOf?Object.setPrototypeOf(e,x):(e.__proto__=x,s(e,l,"GeneratorFunction")),e.prototype=Object.create(A),e},t.awrap=function(e){return{__await:e}},E(q.prototype),s(q.prototype,c,(function(){return this})),t.AsyncIterator=q,t.async=function(e,r,n,a,i){void 0===i&&(i=Promise);var o=new q(d(e,r,n,a),i);return t.isGeneratorFunction(r)?o:o.next().then((function(e){return e.done?e.value:o.next()}))},E(A),s(A,l,"Generator"),s(A,o,(function(){return this})),s(A,"toString",(function(){return"[object Generator]"})),t.keys=function(e){var t=Object(e),r=[];for(var n in t)r.push(n);return r.reverse(),function e(){for(;r.length;){var n=r.pop();if(n in t)return e.value=n,e.done=!1,e}return e.done=!0,e}},t.values=P,j.prototype={constructor:j,reset:function(t){if(this.prev=0,this.next=0,this.sent=this._sent=e,this.done=!1,this.delegate=null,this.method="next",this.arg=e,this.tryEntries.forEach(O),!t)for(var r in this)"t"===r.charAt(0)&&n.call(this,r)&&!isNaN(+r.slice(1))&&(this[r]=e)},stop:function(){this.done=!0;var e=this.tryEntries[0].completion;if("throw"===e.type)throw e.arg;return this.rval},dispatchException:function(t){if(this.done)throw t;var r=this;function a(n,a){return c.type="throw",c.arg=t,r.next=n,a&&(r.method="next",r.arg=e),!!a}for(var i=this.tryEntries.length-1;i>=0;--i){var o=this.tryEntries[i],c=o.completion;if("root"===o.tryLoc)return a("end");if(o.tryLoc<=this.prev){var l=n.call(o,"catchLoc"),s=n.call(o,"finallyLoc");if(l&&s){if(this.prev<o.catchLoc)return a(o.catchLoc,!0);if(this.prev<o.finallyLoc)return a(o.finallyLoc)}else if(l){if(this.prev<o.catchLoc)return a(o.catchLoc,!0)}else{if(!s)throw Error("try statement without catch or finally");if(this.prev<o.finallyLoc)return a(o.finallyLoc)}}}},abrupt:function(e,t){for(var r=this.tryEntries.length-1;r>=0;--r){var a=this.tryEntries[r];if(a.tryLoc<=this.prev&&n.call(a,"finallyLoc")&&this.prev<a.finallyLoc){var i=a;break}}i&&("break"===e||"continue"===e)&&i.tryLoc<=t&&t<=i.finallyLoc&&(i=null);var o=i?i.completion:{};return o.type=e,o.arg=t,i?(this.method="next",this.next=i.finallyLoc,b):this.complete(o)},complete:function(e,t){if("throw"===e.type)throw e.arg;return"break"===e.type||"continue"===e.type?this.next=e.arg:"return"===e.type?(this.rval=this.arg=e.arg,this.method="return",this.next="end"):"normal"===e.type&&t&&(this.next=t),b},finish:function(e){for(var t=this.tryEntries.length-1;t>=0;--t){var r=this.tryEntries[t];if(r.finallyLoc===e)return this.complete(r.completion,r.afterLoc),O(r),b}},catch:function(e){for(var t=this.tryEntries.length-1;t>=0;--t){var r=this.tryEntries[t];if(r.tryLoc===e){var n=r.completion;if("throw"===n.type){var a=n.arg;O(r)}return a}}throw Error("illegal catch attempt")},delegateYield:function(t,r,n){return this.delegate={iterator:P(t),resultName:r,nextLoc:n},"next"===this.method&&(this.arg=e),b}},t}function y(e,t,r,n,a,i,o){try{var c=e[i](o),l=c.value}catch(e){return void r(e)}c.done?t(l):Promise.resolve(l).then(n,a)}function g(e,t){var r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"",n=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0,a=t.tag_name||e.tagName.toLowerCase();a.endsWith("_")&&(a=a.slice(0,-1));var i=document.createElement(a),o="";if(t.text_selector){var c=e.querySelector(t.text_selector);c&&(o=c.innerText||c.textContent||"")}else t.text_js?o=t.text_js(e):t.add_text&&(o=e.innerText||e.textContent||"");o=o.replace(/\s+/g," ").trim(),t.text_format?o=t.text_format.replace("{}",o):t.text_format&&(o=t.text_format),o&&t.add_text&&(i.textContent=o);var l="";if(t.name&&("from_text"===t.name?(l=r?r+".":"",o?l+=o.toLowerCase().replace(/[^\w]+/g,"_"):l=""):"from_nth_child"===t.name?(l=r?r+".":"",l+=n.toString()):(l=r?r+".":"",l+=t.name),i.setAttribute("name",l),r=l),t.generate_metadata){var s=t.generate_metadata(e),d=JSON.stringify(s.data),u=s.name;e.setAttribute("data-element-meta-name",u),e.setAttribute("data-element-meta-data",d)}if(t.clickable){if(!t.name)throw new Error("clickable element must have a name");var p;(p=t.click_selector?e.querySelector(t.click_selector):e)&&p.setAttribute("data-clickable-id",l),window.clickable_recipes||(window.clickable_recipes={}),window.clickable_recipes[l]=t}if("input"===a){var m=e.getAttribute("type");["text","number"].includes(m)?(i.setAttribute("value",e.value),e.setAttribute("data-input-id",l)):"checkbox"===m?i.setAttribute("checked",e.checked.toString()):"radio"===m&&(i.setAttribute("checked",e.checked.toString()),e.setAttribute("data-clickable-id",l)),window.input_recipes||(window.input_recipes={}),window.input_recipes[l]=t}if("select"===a){var f;e.setAttribute("data-select-id",l);var h=e.getAttribute("id"),b=(e.getAttribute("name"),null===(f=e.parentElement)||void 0===f?void 0:f.querySelector("span.a-button-dropdown span.a-button-text")),x=document.createElement("span");x.textContent=b.textContent;var w=l+".open_drop_down_list";x.setAttribute("name",w),b.setAttribute("data-clickable-id",w),i.appendChild(x),document.querySelectorAll('a[id^="'+h+'"]').forEach(function(){var e,t=(e=_().mark((function e(t){var r,n,a;return _().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:r=t.textContent.trim(),n=l+"."+r,(a=document.createElement("a")).textContent=t.textContent,a.setAttribute("value",r),a.setAttribute("name",n),a.setAttribute("selected",t.getAttribute("aria-selected")),t.setAttribute("data-clickable-id",n),i.appendChild(a);case 9:case"end":return e.stop()}}),e)})),function(){var t=this,r=arguments;return new Promise((function(n,a){var i=e.apply(t,r);function o(e){y(i,n,a,o,c,"next",e)}function c(e){y(i,n,a,o,c,"throw",e)}o(void 0)}))});return function(e){return t.apply(this,arguments)}}())}if(["alt","title","type","value","role","aria-label","aria-hidden","aria-selected"].forEach((function(t){var r=e.getAttribute(t);r&&i.setAttribute(t,r)})),t.keep_attr){var k,S=v(t.keep_attr);try{for(S.s();!(k=S.n()).done;){var A=k.value,E=e.getAttribute(A);E&&i.setAttribute(A,E)}}catch(e){S.e(e)}finally{S.f()}}if(t.class&&i.setAttribute("class",t.class),t.id&&i.setAttribute("id",t.id),t.override_attr)for(var q in t.override_attr)i.setAttribute(q,t.override_attr[q](e));if(t.children&&t.children.length>0){var T,L=v(t.children);try{var C=function(){var t,n=T.value,a=n.direct_child?":scope > ".concat(n.selector):n.selector;n.use_root?(t=document.querySelectorAll(a),console.log("use root for ",t)):t=e.querySelectorAll(a),t.forEach((function(e,t){var a=g(e,n,r,t);if(i.appendChild(a),n.insert_split_marker&&t%(n.insert_split_marker_every||1)==0){var o=document.createElement("split-marker");i.appendChild(o)}if(n.insert_split_marker){var c=document.createElement("split-marker");i.appendChild(c)}}))};for(L.s();!(T=L.n()).done;)C()}catch(e){L.e(e)}finally{L.f()}}if(t.empty_message&&0===i.children.length){var O=document.createTextNode(t.empty_message);i.appendChild(O)}return i}function x(e){return x="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},x(e)}function w(){w=function(){return t};var e,t={},r=Object.prototype,n=r.hasOwnProperty,a=Object.defineProperty||function(e,t,r){e[t]=r.value},i="function"==typeof Symbol?Symbol:{},o=i.iterator||"@@iterator",c=i.asyncIterator||"@@asyncIterator",l=i.toStringTag||"@@toStringTag";function s(e,t,r){return Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}),e[t]}try{s({},"")}catch(e){s=function(e,t,r){return e[t]=r}}function d(e,t,r,n){var i=t&&t.prototype instanceof b?t:b,o=Object.create(i.prototype),c=new j(n||[]);return a(o,"_invoke",{value:T(e,r,c)}),o}function u(e,t,r){try{return{type:"normal",arg:e.call(t,r)}}catch(e){return{type:"throw",arg:e}}}t.wrap=d;var p="suspendedStart",m="suspendedYield",f="executing",h="completed",v={};function b(){}function _(){}function y(){}var g={};s(g,o,(function(){return this}));var k=Object.getPrototypeOf,S=k&&k(k(P([])));S&&S!==r&&n.call(S,o)&&(g=S);var A=y.prototype=b.prototype=Object.create(g);function E(e){["next","throw","return"].forEach((function(t){s(e,t,(function(e){return this._invoke(t,e)}))}))}function q(e,t){function r(a,i,o,c){var l=u(e[a],e,i);if("throw"!==l.type){var s=l.arg,d=s.value;return d&&"object"==x(d)&&n.call(d,"__await")?t.resolve(d.__await).then((function(e){r("next",e,o,c)}),(function(e){r("throw",e,o,c)})):t.resolve(d).then((function(e){s.value=e,o(s)}),(function(e){return r("throw",e,o,c)}))}c(l.arg)}var i;a(this,"_invoke",{value:function(e,n){function a(){return new t((function(t,a){r(e,n,t,a)}))}return i=i?i.then(a,a):a()}})}function T(t,r,n){var a=p;return function(i,o){if(a===f)throw Error("Generator is already running");if(a===h){if("throw"===i)throw o;return{value:e,done:!0}}for(n.method=i,n.arg=o;;){var c=n.delegate;if(c){var l=L(c,n);if(l){if(l===v)continue;return l}}if("next"===n.method)n.sent=n._sent=n.arg;else if("throw"===n.method){if(a===p)throw a=h,n.arg;n.dispatchException(n.arg)}else"return"===n.method&&n.abrupt("return",n.arg);a=f;var s=u(t,r,n);if("normal"===s.type){if(a=n.done?h:m,s.arg===v)continue;return{value:s.arg,done:n.done}}"throw"===s.type&&(a=h,n.method="throw",n.arg=s.arg)}}}function L(t,r){var n=r.method,a=t.iterator[n];if(a===e)return r.delegate=null,"throw"===n&&t.iterator.return&&(r.method="return",r.arg=e,L(t,r),"throw"===r.method)||"return"!==n&&(r.method="throw",r.arg=new TypeError("The iterator does not provide a '"+n+"' method")),v;var i=u(a,t.iterator,r.arg);if("throw"===i.type)return r.method="throw",r.arg=i.arg,r.delegate=null,v;var o=i.arg;return o?o.done?(r[t.resultName]=o.value,r.next=t.nextLoc,"return"!==r.method&&(r.method="next",r.arg=e),r.delegate=null,v):o:(r.method="throw",r.arg=new TypeError("iterator result is not an object"),r.delegate=null,v)}function C(e){var t={tryLoc:e[0]};1 in e&&(t.catchLoc=e[1]),2 in e&&(t.finallyLoc=e[2],t.afterLoc=e[3]),this.tryEntries.push(t)}function O(e){var t=e.completion||{};t.type="normal",delete t.arg,e.completion=t}function j(e){this.tryEntries=[{tryLoc:"root"}],e.forEach(C,this),this.reset(!0)}function P(t){if(t||""===t){var r=t[o];if(r)return r.call(t);if("function"==typeof t.next)return t;if(!isNaN(t.length)){var a=-1,i=function r(){for(;++a<t.length;)if(n.call(t,a))return r.value=t[a],r.done=!1,r;return r.value=e,r.done=!0,r};return i.next=i}}throw new TypeError(x(t)+" is not iterable")}return _.prototype=y,a(A,"constructor",{value:y,configurable:!0}),a(y,"constructor",{value:_,configurable:!0}),_.displayName=s(y,l,"GeneratorFunction"),t.isGeneratorFunction=function(e){var t="function"==typeof e&&e.constructor;return!!t&&(t===_||"GeneratorFunction"===(t.displayName||t.name))},t.mark=function(e){return Object.setPrototypeOf?Object.setPrototypeOf(e,y):(e.__proto__=y,s(e,l,"GeneratorFunction")),e.prototype=Object.create(A),e},t.awrap=function(e){return{__await:e}},E(q.prototype),s(q.prototype,c,(function(){return this})),t.AsyncIterator=q,t.async=function(e,r,n,a,i){void 0===i&&(i=Promise);var o=new q(d(e,r,n,a),i);return t.isGeneratorFunction(r)?o:o.next().then((function(e){return e.done?e.value:o.next()}))},E(A),s(A,l,"Generator"),s(A,o,(function(){return this})),s(A,"toString",(function(){return"[object Generator]"})),t.keys=function(e){var t=Object(e),r=[];for(var n in t)r.push(n);return r.reverse(),function e(){for(;r.length;){var n=r.pop();if(n in t)return e.value=n,e.done=!1,e}return e.done=!0,e}},t.values=P,j.prototype={constructor:j,reset:function(t){if(this.prev=0,this.next=0,this.sent=this._sent=e,this.done=!1,this.delegate=null,this.method="next",this.arg=e,this.tryEntries.forEach(O),!t)for(var r in this)"t"===r.charAt(0)&&n.call(this,r)&&!isNaN(+r.slice(1))&&(this[r]=e)},stop:function(){this.done=!0;var e=this.tryEntries[0].completion;if("throw"===e.type)throw e.arg;return this.rval},dispatchException:function(t){if(this.done)throw t;var r=this;function a(n,a){return c.type="throw",c.arg=t,r.next=n,a&&(r.method="next",r.arg=e),!!a}for(var i=this.tryEntries.length-1;i>=0;--i){var o=this.tryEntries[i],c=o.completion;if("root"===o.tryLoc)return a("end");if(o.tryLoc<=this.prev){var l=n.call(o,"catchLoc"),s=n.call(o,"finallyLoc");if(l&&s){if(this.prev<o.catchLoc)return a(o.catchLoc,!0);if(this.prev<o.finallyLoc)return a(o.finallyLoc)}else if(l){if(this.prev<o.catchLoc)return a(o.catchLoc,!0)}else{if(!s)throw Error("try statement without catch or finally");if(this.prev<o.finallyLoc)return a(o.finallyLoc)}}}},abrupt:function(e,t){for(var r=this.tryEntries.length-1;r>=0;--r){var a=this.tryEntries[r];if(a.tryLoc<=this.prev&&n.call(a,"finallyLoc")&&this.prev<a.finallyLoc){var i=a;break}}i&&("break"===e||"continue"===e)&&i.tryLoc<=t&&t<=i.finallyLoc&&(i=null);var o=i?i.completion:{};return o.type=e,o.arg=t,i?(this.method="next",this.next=i.finallyLoc,v):this.complete(o)},complete:function(e,t){if("throw"===e.type)throw e.arg;return"break"===e.type||"continue"===e.type?this.next=e.arg:"return"===e.type?(this.rval=this.arg=e.arg,this.method="return",this.next="end"):"normal"===e.type&&t&&(this.next=t),v},finish:function(e){for(var t=this.tryEntries.length-1;t>=0;--t){var r=this.tryEntries[t];if(r.finallyLoc===e)return this.complete(r.completion,r.afterLoc),O(r),v}},catch:function(e){for(var t=this.tryEntries.length-1;t>=0;--t){var r=this.tryEntries[t];if(r.tryLoc===e){var n=r.completion;if("throw"===n.type){var a=n.arg;O(r)}return a}}throw Error("illegal catch attempt")},delegateYield:function(t,r,n){return this.delegate={iterator:P(t),resultName:r,nextLoc:n},"next"===this.method&&(this.arg=e),v}},t}function k(e,t){(null==t||t>e.length)&&(t=e.length);for(var r=0,n=Array(t);r<t;r++)n[r]=e[r];return n}function S(e,t,r,n,a,i,o){try{var c=e[i](o),l=c.value}catch(e){return void r(e)}c.done?t(l):Promise.resolve(l).then(n,a)}function A(){var e=document.querySelectorAll("[data-element-meta-name]"),t={};return e.forEach((function(e){var r=e.getAttribute("data-element-meta-name"),n=e.getAttribute("data-element-meta-data");t[r]||(t[r]=[]),t[r].push(JSON.parse(n))})),t}function E(){var e=document.cloneNode(!0);return e.querySelectorAll('a, button, [onclick], input[type="button"], input[type="submit"]').forEach((function(e){var t=e.getBoundingClientRect();t.top>=0&&t.left>=0&&t.bottom<=(window.innerHeight||document.documentElement.clientHeight)&&t.right<=(window.innerWidth||document.documentElement.clientWidth)&&e.setAttribute("visible-clickable-element-marker","true")})),e}function q(){return e=w().mark((function e(n){var a=arguments;return w().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(a.length>1&&void 0!==a[1]&&a[1]){e.next=16;break}if(!chrome.storage){e.next=11;break}return e.next=5,chrome.storage.local.get("userId");case 5:if(e.sent.userId){e.next=9;break}return console.log("no user id"),e.abrupt("return",!0);case 9:e.next=16;break;case 11:return e.next=13,new Promise((function(e){var t=function(r){"GET_USER_ID_RESPONSE"===r.data.type&&(window.removeEventListener("message",t),e(r.data.userId))};window.addEventListener("message",t),window.postMessage({type:"GET_USER_ID"},"*")}));case 13:if(e.sent){e.next=16;break}return e.abrupt("return",!0);case 16:if(n){e.next=18;break}return e.abrupt("return",!0);case 18:return e.abrupt("return",!t.some((function(e){return n.includes(e)}))||r.some((function(e){return n.includes(e)})));case 19:case"end":return e.stop()}}),e)})),q=function(){var t=this,r=arguments;return new Promise((function(n,a){var i=e.apply(t,r);function o(e){S(i,n,a,o,c,"next",e)}function c(e){S(i,n,a,o,c,"throw",e)}o(void 0)}))},q.apply(this,arguments);var e}function T(e,t){var r=window.location.href;return"html_".concat(function(e){for(var t=0,r=0;r<e.length;r++)t=(t<<5)-t+e.charCodeAt(r),t|=0;return console.log("Hash value before return:",t),t.toString()}(r),"_").concat(e,"_").concat(t)}function L(){console.log("start process recipe");try{var e=function(){var e=new URL(window.location.href).pathname;e="/"!==e?e.replace(/\/+$/,""):e;var t,r=function(e,t){var r="undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(!r){if(Array.isArray(e)||(r=function(e,t){if(e){if("string"==typeof e)return k(e,t);var r={}.toString.call(e).slice(8,-1);return"Object"===r&&e.constructor&&(r=e.constructor.name),"Map"===r||"Set"===r?Array.from(e):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?k(e,t):void 0}}(e))||t&&e&&"number"==typeof e.length){r&&(e=r);var n=0,a=function(){};return{s:a,n:function(){return n>=e.length?{done:!0}:{done:!1,value:e[n++]}},e:function(e){throw e},f:a}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var i,o=!0,c=!1;return{s:function(){r=r.call(e)},n:function(){var e=r.next();return o=e.done,e},e:function(e){c=!0,i=e},f:function(){try{o||null==r.return||r.return()}finally{if(c)throw i}}}}(f);try{for(r.s();!(t=r.n()).done;){var n=t.value,a=n.match_method||"text";if("text"===a)try{var i,o,c=document.querySelector(n.match);if(c&&(!n.match_text||null!==(i=null===(o=c.textContent)||void 0===o?void 0:o.toLowerCase().includes(n.match_text.toLowerCase()))&&void 0!==i&&i))return console.log("matched with recipe ",n.match),n}catch(e){console.error("Error checking text match:",e)}else if("url"===a){if(n.match===e)return console.log("matched with recipe ",n.match),n;if(n.match_with_ref&&(e.startsWith(n.match+"/ref=")||e.startsWith(n.match+"ref=")))return console.log("matched with recipe ",n.match),n}}}catch(e){r.e(e)}finally{r.f()}throw new Error("No matching recipe found for path: ".concat(e))}(),t=document.querySelector(e.selector);if(t)return g(t,e).outerHTML}catch(e){console.error("Error processing recipe:",e)}}const C={randomUUID:"undefined"!=typeof crypto&&crypto.randomUUID&&crypto.randomUUID.bind(crypto)};let O;const j=new Uint8Array(16);function P(){if(!O){if("undefined"==typeof crypto||!crypto.getRandomValues)throw new Error("crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported");O=crypto.getRandomValues.bind(crypto)}return O(j)}const I=[];for(let e=0;e<256;++e)I.push((e+256).toString(16).slice(1));const M=function(e,t,r){if(C.randomUUID&&!t&&!e)return C.randomUUID();const n=(e=e||{}).random||(e.rng||P)();if(n[6]=15&n[6]|64,n[8]=63&n[8]|128,t){r=r||0;for(let e=0;e<16;++e)t[r+e]=n[e];return t}return function(e,t=0){return(I[e[t+0]]+I[e[t+1]]+I[e[t+2]]+I[e[t+3]]+"-"+I[e[t+4]]+I[e[t+5]]+"-"+I[e[t+6]]+I[e[t+7]]+"-"+I[e[t+8]]+I[e[t+9]]+"-"+I[e[t+10]]+I[e[t+11]]+I[e[t+12]]+I[e[t+13]]+I[e[t+14]]+I[e[t+15]]).toLowerCase()}(n)};function D(e){return D="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},D(e)}function N(e,t){var r="undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(!r){if(Array.isArray(e)||(r=function(e,t){if(e){if("string"==typeof e)return R(e,t);var r={}.toString.call(e).slice(8,-1);return"Object"===r&&e.constructor&&(r=e.constructor.name),"Map"===r||"Set"===r?Array.from(e):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?R(e,t):void 0}}(e))||t&&e&&"number"==typeof e.length){r&&(e=r);var n=0,a=function(){};return{s:a,n:function(){return n>=e.length?{done:!0}:{done:!1,value:e[n++]}},e:function(e){throw e},f:a}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var i,o=!0,c=!1;return{s:function(){r=r.call(e)},n:function(){var e=r.next();return o=e.done,e},e:function(e){c=!0,i=e},f:function(){try{o||null==r.return||r.return()}finally{if(c)throw i}}}}function R(e,t){(null==t||t>e.length)&&(t=e.length);for(var r=0,n=Array(t);r<t;r++)n[r]=e[r];return n}function z(){z=function(){return t};var e,t={},r=Object.prototype,n=r.hasOwnProperty,a=Object.defineProperty||function(e,t,r){e[t]=r.value},i="function"==typeof Symbol?Symbol:{},o=i.iterator||"@@iterator",c=i.asyncIterator||"@@asyncIterator",l=i.toStringTag||"@@toStringTag";function s(e,t,r){return Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}),e[t]}try{s({},"")}catch(e){s=function(e,t,r){return e[t]=r}}function d(e,t,r,n){var i=t&&t.prototype instanceof b?t:b,o=Object.create(i.prototype),c=new C(n||[]);return a(o,"_invoke",{value:E(e,r,c)}),o}function u(e,t,r){try{return{type:"normal",arg:e.call(t,r)}}catch(e){return{type:"throw",arg:e}}}t.wrap=d;var p="suspendedStart",m="suspendedYield",f="executing",h="completed",v={};function b(){}function _(){}function y(){}var g={};s(g,o,(function(){return this}));var x=Object.getPrototypeOf,w=x&&x(x(O([])));w&&w!==r&&n.call(w,o)&&(g=w);var k=y.prototype=b.prototype=Object.create(g);function S(e){["next","throw","return"].forEach((function(t){s(e,t,(function(e){return this._invoke(t,e)}))}))}function A(e,t){function r(a,i,o,c){var l=u(e[a],e,i);if("throw"!==l.type){var s=l.arg,d=s.value;return d&&"object"==D(d)&&n.call(d,"__await")?t.resolve(d.__await).then((function(e){r("next",e,o,c)}),(function(e){r("throw",e,o,c)})):t.resolve(d).then((function(e){s.value=e,o(s)}),(function(e){return r("throw",e,o,c)}))}c(l.arg)}var i;a(this,"_invoke",{value:function(e,n){function a(){return new t((function(t,a){r(e,n,t,a)}))}return i=i?i.then(a,a):a()}})}function E(t,r,n){var a=p;return function(i,o){if(a===f)throw Error("Generator is already running");if(a===h){if("throw"===i)throw o;return{value:e,done:!0}}for(n.method=i,n.arg=o;;){var c=n.delegate;if(c){var l=q(c,n);if(l){if(l===v)continue;return l}}if("next"===n.method)n.sent=n._sent=n.arg;else if("throw"===n.method){if(a===p)throw a=h,n.arg;n.dispatchException(n.arg)}else"return"===n.method&&n.abrupt("return",n.arg);a=f;var s=u(t,r,n);if("normal"===s.type){if(a=n.done?h:m,s.arg===v)continue;return{value:s.arg,done:n.done}}"throw"===s.type&&(a=h,n.method="throw",n.arg=s.arg)}}}function q(t,r){var n=r.method,a=t.iterator[n];if(a===e)return r.delegate=null,"throw"===n&&t.iterator.return&&(r.method="return",r.arg=e,q(t,r),"throw"===r.method)||"return"!==n&&(r.method="throw",r.arg=new TypeError("The iterator does not provide a '"+n+"' method")),v;var i=u(a,t.iterator,r.arg);if("throw"===i.type)return r.method="throw",r.arg=i.arg,r.delegate=null,v;var o=i.arg;return o?o.done?(r[t.resultName]=o.value,r.next=t.nextLoc,"return"!==r.method&&(r.method="next",r.arg=e),r.delegate=null,v):o:(r.method="throw",r.arg=new TypeError("iterator result is not an object"),r.delegate=null,v)}function T(e){var t={tryLoc:e[0]};1 in e&&(t.catchLoc=e[1]),2 in e&&(t.finallyLoc=e[2],t.afterLoc=e[3]),this.tryEntries.push(t)}function L(e){var t=e.completion||{};t.type="normal",delete t.arg,e.completion=t}function C(e){this.tryEntries=[{tryLoc:"root"}],e.forEach(T,this),this.reset(!0)}function O(t){if(t||""===t){var r=t[o];if(r)return r.call(t);if("function"==typeof t.next)return t;if(!isNaN(t.length)){var a=-1,i=function r(){for(;++a<t.length;)if(n.call(t,a))return r.value=t[a],r.done=!1,r;return r.value=e,r.done=!0,r};return i.next=i}}throw new TypeError(D(t)+" is not iterable")}return _.prototype=y,a(k,"constructor",{value:y,configurable:!0}),a(y,"constructor",{value:_,configurable:!0}),_.displayName=s(y,l,"GeneratorFunction"),t.isGeneratorFunction=function(e){var t="function"==typeof e&&e.constructor;return!!t&&(t===_||"GeneratorFunction"===(t.displayName||t.name))},t.mark=function(e){return Object.setPrototypeOf?Object.setPrototypeOf(e,y):(e.__proto__=y,s(e,l,"GeneratorFunction")),e.prototype=Object.create(k),e},t.awrap=function(e){return{__await:e}},S(A.prototype),s(A.prototype,c,(function(){return this})),t.AsyncIterator=A,t.async=function(e,r,n,a,i){void 0===i&&(i=Promise);var o=new A(d(e,r,n,a),i);return t.isGeneratorFunction(r)?o:o.next().then((function(e){return e.done?e.value:o.next()}))},S(k),s(k,l,"Generator"),s(k,o,(function(){return this})),s(k,"toString",(function(){return"[object Generator]"})),t.keys=function(e){var t=Object(e),r=[];for(var n in t)r.push(n);return r.reverse(),function e(){for(;r.length;){var n=r.pop();if(n in t)return e.value=n,e.done=!1,e}return e.done=!0,e}},t.values=O,C.prototype={constructor:C,reset:function(t){if(this.prev=0,this.next=0,this.sent=this._sent=e,this.done=!1,this.delegate=null,this.method="next",this.arg=e,this.tryEntries.forEach(L),!t)for(var r in this)"t"===r.charAt(0)&&n.call(this,r)&&!isNaN(+r.slice(1))&&(this[r]=e)},stop:function(){this.done=!0;var e=this.tryEntries[0].completion;if("throw"===e.type)throw e.arg;return this.rval},dispatchException:function(t){if(this.done)throw t;var r=this;function a(n,a){return c.type="throw",c.arg=t,r.next=n,a&&(r.method="next",r.arg=e),!!a}for(var i=this.tryEntries.length-1;i>=0;--i){var o=this.tryEntries[i],c=o.completion;if("root"===o.tryLoc)return a("end");if(o.tryLoc<=this.prev){var l=n.call(o,"catchLoc"),s=n.call(o,"finallyLoc");if(l&&s){if(this.prev<o.catchLoc)return a(o.catchLoc,!0);if(this.prev<o.finallyLoc)return a(o.finallyLoc)}else if(l){if(this.prev<o.catchLoc)return a(o.catchLoc,!0)}else{if(!s)throw Error("try statement without catch or finally");if(this.prev<o.finallyLoc)return a(o.finallyLoc)}}}},abrupt:function(e,t){for(var r=this.tryEntries.length-1;r>=0;--r){var a=this.tryEntries[r];if(a.tryLoc<=this.prev&&n.call(a,"finallyLoc")&&this.prev<a.finallyLoc){var i=a;break}}i&&("break"===e||"continue"===e)&&i.tryLoc<=t&&t<=i.finallyLoc&&(i=null);var o=i?i.completion:{};return o.type=e,o.arg=t,i?(this.method="next",this.next=i.finallyLoc,v):this.complete(o)},complete:function(e,t){if("throw"===e.type)throw e.arg;return"break"===e.type||"continue"===e.type?this.next=e.arg:"return"===e.type?(this.rval=this.arg=e.arg,this.method="return",this.next="end"):"normal"===e.type&&t&&(this.next=t),v},finish:function(e){for(var t=this.tryEntries.length-1;t>=0;--t){var r=this.tryEntries[t];if(r.finallyLoc===e)return this.complete(r.completion,r.afterLoc),L(r),v}},catch:function(e){for(var t=this.tryEntries.length-1;t>=0;--t){var r=this.tryEntries[t];if(r.tryLoc===e){var n=r.completion;if("throw"===n.type){var a=n.arg;L(r)}return a}}throw Error("illegal catch attempt")},delegateYield:function(t,r,n){return this.delegate={iterator:O(t),resultName:r,nextLoc:n},"next"===this.method&&(this.arg=e),v}},t}function G(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function B(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?G(Object(r),!0).forEach((function(t){F(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):G(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function F(e,t,r){return(t=function(e){var t=function(e){if("object"!=D(e)||!e)return e;var t=e[Symbol.toPrimitive];if(void 0!==t){var r=t.call(e,"string");if("object"!=D(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==D(t)?t:t+""}(t))in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function U(e,t,r,n,a,i,o){try{var c=e[i](o),l=c.value}catch(e){return void r(e)}c.done?t(l):Promise.resolve(l).then(n,a)}function H(e){return function(){var t=this,r=arguments;return new Promise((function(n,a){var i=e.apply(t,r);function o(e){U(i,n,a,o,c,"next",e)}function c(e){U(i,n,a,o,c,"throw",e)}o(void 0)}))}}function W(e,t){return Y.apply(this,arguments)}function Y(){return(Y=H(z().mark((function e(t,r){var n;return z().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.prev=0,e.next=3,chrome.runtime.sendMessage({action:"captureScreenshot",timestamp:t,uuid:r});case 3:if((n=e.sent).success){e.next=6;break}throw new Error(n.message||"Screenshot capture failed");case 6:window.postMessage({type:"SCREENSHOT_COMPLETE",timestamp:t,success:!0},"*"),e.next=13;break;case 9:e.prev=9,e.t0=e.catch(0),console.error("Error capturing screenshot in content script:",e.t0),window.postMessage({type:"SCREENSHOT_COMPLETE",timestamp:t,success:!1,error:e.t0.message},"*");case 13:case"end":return e.stop()}}),e,null,[[0,9]])})))).apply(this,arguments)}window.addEventListener("message",function(){var e=H(z().mark((function e(t){var r,n,a,i;return z().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(t.source===window){e.next=2;break}return e.abrupt("return");case 2:if(!t.data.type||"GET_USER_ID"!==t.data.type){e.next=8;break}return e.next=5,chrome.storage.local.get("userId");case 5:r=e.sent,n=r.userId,window.postMessage({type:"GET_USER_ID_RESPONSE",userId:n},"*");case 8:if(!t.data.type||"CAPTURE_SCREENSHOT"!==t.data.type){e.next=11;break}return e.next=11,W(t.data.timestamp,t.data.uuid);case 11:if(!t.data.type||"SAVE_INTERACTION_DATA"!==t.data.type){e.next=26;break}return e.prev=12,a=B({},t.data.data),e.next=16,chrome.runtime.sendMessage({action:"saveData",data:a});case 16:if((i=e.sent).success){e.next=19;break}throw new Error(i.message||"interaction capture failed");case 19:window.postMessage({type:"INTERACTION_COMPLETE",timestamp:t.data.data.timestamp,success:!0},"*"),e.next=26;break;case 22:e.prev=22,e.t0=e.catch(12),console.error("Error saving interaction data:",e.t0),window.postMessage({type:"INTERACTION_COMPLETE",success:!1,error:e.t0.message,timestamp:t.data.data.timestamp},"*");case 26:case"end":return e.stop()}}),e,null,[[12,22]])})));return function(t){return e.apply(this,arguments)}}());(function(){return q.apply(this,arguments)})(window.location.href).then((function(e){console.log("content script, shouldExclude",e),e||function(){function e(e,r,n,a,i){return t.apply(this,arguments)}function t(){return(t=H(z().mark((function e(t,r,n,a,i){var o,c,l,s,d;return z().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.prev=0,o=T(n,a),c=L(),l=E(),s=A(),d={uuid:a,eventType:t,timestamp:n,htmlSnapshotId:o,pageMeta:s||"",htmlContent:l.documentElement.outerHTML,simplifiedHTML:c},"scroll"===t&&(d.scrollDistance=i,d.target=r),"input"===t&&(d["input-values"]=(null==r?void 0:r.value)||"",d["input-id"]=(null==r?void 0:r.id)||"",d["data-element-meta-name"]=r.getAttribute("data-element-meta-name")||"",d["data-element-meta-data"]=r.getAttribute("data-element-meta-data")||""),e.next=10,chrome.runtime.sendMessage({action:"saveData",data:d});case 10:e.next=15;break;case 12:e.prev=12,e.t0=e.catch(0),console.error("Error during ".concat(t," event handling:"),e.t0);case 15:case"end":return e.stop()}}),e,null,[[0,12]])})))).apply(this,arguments)}document.addEventListener("DOMContentLoaded",(function(){console.log("DOMContentLoaded event triggered"),L()}));var r,n=!1,a=window.scrollY||document.documentElement.scrollTop,i=0;function o(e,t){return c.apply(this,arguments)}function c(){return c=H(z().mark((function e(t,r){return z().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:try{console.log("First scroll event"),W(r,t),L()}catch(e){console.error("Error during first scroll handling:",e)}case 1:case"end":return e.stop()}}),e)}))),c.apply(this,arguments)}function l(e,t){return s.apply(this,arguments)}function s(){return s=H(z().mark((function t(r,o){var c;return z().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:if(t.prev=0,console.log("scroll stop uuid",r),c=window.scrollY||document.documentElement.scrollTop,0===(i+=c-a)){t.next=9;break}return t.next=7,e("scroll",window.location.href,o,r,i);case 7:i=0,a=c;case 9:n=!1,t.next=15;break;case 12:t.prev=12,t.t0=t.catch(0),console.error("Error during scroll stop handling:",t.t0);case 15:case"end":return t.stop()}}),t,null,[[0,12]])}))),s.apply(this,arguments)}var d="",u="";document.addEventListener("scroll",function(){var e=H(z().mark((function e(t){return z().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(console.log("scroll event"),!document.getElementById("reason-modal")){e.next=3;break}return e.abrupt("return");case 3:if(t.target===window||t.target===document||t.target===document.documentElement){e.next=6;break}return console.log("Scroll event ignored from a nested scrollable container"),e.abrupt("return");case 6:if(n){e.next=13;break}return n=!0,a=window.scrollY||document.documentElement.scrollTop,d=M(),u=(new Date).toISOString(),e.next=13,o(d,u);case 13:window.clearTimeout(r),r=window.setTimeout((function(){return l(d,u)}),300);case 15:case"end":return e.stop()}}),e)})));return function(t){return e.apply(this,arguments)}}()),document.addEventListener("DOMContentLoaded",(function(){document.querySelectorAll('input[id="placeOrder"], input[id="turbo-checkout-pyo-button"]');var e=document.querySelector('input[id="buy-now-button"]'),t=document.querySelector('button[id="rcx-subscribe-submit-button-announce"]'),r=document.querySelector('input[name="proceedToRetailCheckout"]');[e,t].forEach((function(e){e&&e.addEventListener("click",H(z().mark((function t(){var r,n,a,i;return z().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return t.prev=0,i={title:(null===(r=document.querySelector("#title"))||void 0===r||null===(r=r.innerText)||void 0===r?void 0:r.trim())||"",price:(null===(n=document.querySelector("span.a-price.aok-align-center.reinventPricePriceToPayMargin.priceToPay"))||void 0===n||null===(n=n.innerText)||void 0===n?void 0:n.trim())||"",asin:(null===(a=document.querySelector("input#ASIN"))||void 0===a?void 0:a.value)||"",options:{}},Array.from(document.querySelectorAll("#twister div.a-row:has(label.a-form-label):has(span.selection)")).forEach((function(e){var t,r,n=(null===(t=e.querySelector("label.a-form-label"))||void 0===t||null===(t=t.innerText)||void 0===t?void 0:t.replace(": ",""))||"",a=(null===(r=e.querySelector("span.selection"))||void 0===r?void 0:r.innerText)||"";n&&a&&(i.options[n]=a)})),console.log("".concat(e.id," clicked - Product Info:"),i),t.next=7,chrome.runtime.sendMessage({action:"saveOrder",data:{timestamp:(new Date).toISOString(),name:i.title,price:parseFloat(i.price.replace(/[^0-9.]/g,"")),asin:i.asin,options:i.options}});case 7:t.next=12;break;case 9:t.prev=9,t.t0=t.catch(0),console.error("Error capturing ".concat(e.id," product info:"),t.t0);case 12:case"end":return t.stop()}}),t,null,[[0,9]])}))))})),r&&r.addEventListener("click",function(){var e=H(z().mark((function e(t){var r,n,a,i,o;return z().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:e.prev=0,r=[],n=Array.from(document.querySelectorAll('[id^="sc-active-"]')).filter((function(e){return"sc-active-cart"!==e.id})),a=N(n),e.prev=4,o=z().mark((function e(){var t,n,a,o,c,l,s,d,u,p,m,f,h;return z().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:t=i.value,(n=t.querySelector('input[type="checkbox"]'))&&n.checked&&(a=t.querySelector(".sc-item-product-title-cont .sc-product-link"))&&(s=a.querySelector(".a-truncate-full"),d=(null==s||null===(o=s.textContent)||void 0===o?void 0:o.trim())||"",u=a.getAttribute("href")||"",p=(null===(c=u.match(/product\/([A-Z0-9]{10})/))||void 0===c?void 0:c[1])||"",m=t.querySelector(".sc-item-price-block .a-offscreen"),f=m?parseFloat((null===(l=m.textContent)||void 0===l?void 0:l.replace(/[^0-9.]/g,""))||"0"):0,h={},t.querySelectorAll(".sc-product-variation").forEach((function(e){var t,r,n=(null===(t=e.querySelector(".a-text-bold"))||void 0===t||null===(t=t.textContent)||void 0===t?void 0:t.trim().replace(":",""))||"",a=(null===(r=e.querySelector(".a-size-small:not(.a-text-bold)"))||void 0===r||null===(r=r.textContent)||void 0===r?void 0:r.trim())||"";n&&a&&(h[n]=a)})),r.push({timestamp:(new Date).toISOString(),name:d,asin:p,price:f,options:h}));case 3:case"end":return e.stop()}}),e)})),a.s();case 7:if((i=a.n()).done){e.next=11;break}return e.delegateYield(o(),"t0",9);case 9:e.next=7;break;case 11:e.next=16;break;case 13:e.prev=13,e.t1=e.catch(4),a.e(e.t1);case 16:return e.prev=16,a.f(),e.finish(16);case 19:if(!(r.length>0)){e.next=22;break}return e.next=22,chrome.runtime.sendMessage({action:"saveOrder",data:r});case 22:e.next=27;break;case 24:e.prev=24,e.t2=e.catch(0),console.error("Error capturing selected cart items:",e.t2);case 27:case"end":return e.stop()}}),e,null,[[0,24],[4,13,16,19]])})));return function(t){return e.apply(this,arguments)}}())})),chrome.runtime.onMessage.addListener((function(e,t,r){if(console.log("message",e),"getHTML"===e.action){var n=L();r({html:E().documentElement.outerHTML,pageMeta:A(),simplifiedHTML:n})}if("show_popup"===e.action)return console.log("show_popup",e),document.getElementById("reason-modal")?void r({success:!1,message:"popup already exists"}):(function(e,t){var r='\n        <div id="reason-modal" style="\n            position: fixed;\n            top: 0;\n            left: 0;\n            width: 100%;\n            height: 100%;\n            background: rgba(0, 0, 0, 0.5);\n            display: flex;\n            justify-content: center;\n            align-items: center;\n            z-index: 10000;\n        ">\n            <div style="\n                background: white;\n                padding: 20px;\n                border-radius: 8px;\n                width: 400px;\n            ">\n                <h3>'.concat(e,'</h3>\n                <textarea id="reason-input" style="\n                    width: 100%;\n                    height: 100px;\n                    margin: 10px 0;\n                "></textarea>\n                <div id="error-message" style="\n                    color: red;\n                    display: none;\n                    font-size: 12px;\n                    margin-top: 5px;\n                ">\n                    Please enter a valid reason.\n                </div>\n                <div style="\n                    text-align: right;\n                    display: flex;\n                    justify-content: flex-end;\n                    gap: 10px;\n                ">\n                    <button id="reason-skip">Skip</button>\n                    <button id="reason-submit">Submit</button>\n                </div>\n            </div>\n        </div>\n    '),n=document.createElement("div");n.innerHTML=r,document.querySelector(".attach-desktop-sideSheet:not(.aok-hidden)")?document.querySelector(".attach-desktop-sideSheet:not(.aok-hidden)").appendChild(n):document.body.appendChild(n),document.getElementById("reason-submit").addEventListener("click",(function(){var e=document.getElementById("reason-input"),r=document.getElementById("error-message"),a=e.value;!function(e){if(!e||0===e.trim().length)return!1;if(e.trim().length<2||e.length<5)return!1;for(var t=0,r=[/^(.)\1{3,}$/,/^[^a-zA-Z0-9]+$/];t<r.length;t++)if(r[t].test(e.toLowerCase().replace(/\s+/g,"")))return!1;return!0}(a)?r.style.display="block":(r.style.display="none",n.remove(),t({input:a}))})),document.getElementById("reason-skip").addEventListener("click",(function(){document.getElementById("reason-input"),n.remove(),t({input:null})}))}(e.question,r),!0)}))}()}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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SUFDQWlQLFNBQVNvTSxlQUFlLGVBQWV0SCxpQkFBaUIsU0FBUyxXQUNqRDlFLFNBQVNvTSxlQUFlLGdCQUN0Q2dELEVBQWVTLFNBQ2ZiLEVBQWEsQ0FBRTFXLE1BQU8sTUFDeEIsR0FDRixDQXJGTXdYLENBQVkzRyxFQUFRK0YsU0FBVUYsSUFDdkIsRUFFWCxHQW1GSixDQUlJZSxFQUVKIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vY2hyb21lLWV4dGVuc2lvbi10eXBlc2NyaXB0LXN0YXJ0ZXIvLi9zcmMvY29uZmlnLnRzIiwid2VicGFjazovL2Nocm9tZS1leHRlbnNpb24tdHlwZXNjcmlwdC1zdGFydGVyLy4vc3JjL3JlY2lwZV9uZXcudHMiLCJ3ZWJwYWNrOi8vY2hyb21lLWV4dGVuc2lvbi10eXBlc2NyaXB0LXN0YXJ0ZXIvLi9zcmMvdXRpbHMvZWxlbWVudC1wcm9jZXNzb3IudHMiLCJ3ZWJwYWNrOi8vY2hyb21lLWV4dGVuc2lvbi10eXBlc2NyaXB0LXN0YXJ0ZXIvLi9zcmMvdXRpbHMvdXRpbC50cyIsIndlYnBhY2s6Ly9jaHJvbWUtZXh0ZW5zaW9uLXR5cGVzY3JpcHQtc3RhcnRlci8uL25vZGVfbW9kdWxlcy91dWlkL2Rpc3QvZXNtLWJyb3dzZXIvbmF0aXZlLmpzIiwid2VicGFjazovL2Nocm9tZS1leHRlbnNpb24tdHlwZXNjcmlwdC1zdGFydGVyLy4vbm9kZV9tb2R1bGVzL3V1aWQvZGlzdC9lc20tYnJvd3Nlci9ybmcuanMiLCJ3ZWJwYWNrOi8vY2hyb21lLWV4dGVuc2lvbi10eXBlc2NyaXB0LXN0YXJ0ZXIvLi9ub2RlX21vZHVsZXMvdXVpZC9kaXN0L2VzbS1icm93c2VyL3N0cmluZ2lmeS5qcyIsIndlYnBhY2s6Ly9jaHJvbWUtZXh0ZW5zaW9uLXR5cGVzY3JpcHQtc3RhcnRlci8uL25vZGVfbW9kdWxlcy91dWlkL2Rpc3QvZXNtLWJyb3dzZXIvdjQuanMiLCJ3ZWJwYWNrOi8vY2hyb21lLWV4dGVuc2lvbi10eXBlc2NyaXB0LXN0YXJ0ZXIvLi9zcmMvY29udGVudF9zY3JpcHQudHMiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGNvbnN0IHBvcHVwX3Byb2JhYmlsaXR5ID0gMC4xNVxuZXhwb3J0IGNvbnN0IHBvcHVwX3Njcm9sbF9wcm9iYWJpbGl0eSA9IDAuMVxuZXhwb3J0IGNvbnN0IHBvcHVwX2NsaWNrX3Byb2JhYmlsaXR5ID0gMC4yXG5leHBvcnQgY29uc3QgcG9wdXBfbmF2aWdhdGlvbl9wcm9iYWJpbGl0eSA9IDAuMTVcbmV4cG9ydCBjb25zdCBwb3B1cF90YWJBY3RpdmF0ZV9wcm9iYWJpbGl0eSA9IDAuMTVcbmV4cG9ydCBjb25zdCBmb2xkZXJfbmFtZSA9IGB1c2VyX2ludGVyYWN0aW9uX2RhdGFgXG5leHBvcnQgY29uc3QgemlwID0gdHJ1ZVxuZXhwb3J0IGNvbnN0IHVwbG9hZF91cmwgPSAnaHR0cDovL3VzZXJkYXRhY29sbGVjdC5oYWlsYWIuaW8vdXBsb2FkJ1xuZXhwb3J0IGNvbnN0IGJhc2VfdXJsID0gJ2h0dHA6Ly91c2VyZGF0YWNvbGxlY3QuaGFpbGFiLmlvJ1xuZXhwb3J0IGNvbnN0IGRhdGFfY29sbGVjdG9yX3NlY3JldF9pZCA9ICdoYWlsYWInXG5leHBvcnQgY29uc3QgdXJsX2luY2x1ZGVzID0gWyd3d3cuYW1hem9uLmNvbSddXG5leHBvcnQgY29uc3QgaW50ZXJhY3Rpb25fc3RhdHVzX3VybCA9IGAke2Jhc2VfdXJsfS9pbnRlcmFjdGlvbnNfcmVjb3JkX3N0YXR1c2BcbmV4cG9ydCBjb25zdCBjaGVja191c2VyX2lkX3VybCA9IGAke2Jhc2VfdXJsfS9jaGVja191c2VyX2lkYFxuZXhwb3J0IGNvbnN0IGZpbHRlcl91cmwgPSBbXG4gICdodHRwczovL3d3dy5hbWF6b24uY29tL2NoZWNrb3V0LycsXG4gICdodHRwczovL3d3dy5hbWF6b24uY29tL2dwL2J1eS8nLFxuICAnaHR0cHM6Ly93d3cuYW1hem9uLmNvbS9hL2FkZHJlc3NlcycsXG4gICdodHRwczovL3d3dy5hbWF6b24uY29tL2NwZS95b3VycGF5bWVudHMvJyxcbiAgJ2h0dHBzOi8vd3d3LmFtYXpvbi5jb20vYXAvc2lnbmluJyxcbiAgJ2h0dHBzOi8vd3d3LmFtYXpvbi5jb20vYXAvY3ZmLycsXG4gICdodHRwczovL3d3dy5hbWF6b24uY29tL2FwL3Byb2ZpbGUvJyxcbiAgJ2h0dHBzOi8vd3d3LmFtYXpvbi5jb20vYXgvYWNjb3VudC8nXG4gIC8vICAgJ2h0dHBzOi8vd3d3LmFtYXpvbi5jb20vZ3AvcHJvZHVjdC9oYW5kbGUtYnV5LWJveC8nLFxuICAvLyAgICdodHRwczovL3d3dy5hbWF6b24uY29tL2dwL2NoZWNrb3V0cG9ydGFsLycsXG4gIC8vICAgJ2h0dHBzOi8vd3d3LmFtYXpvbi5jb20vZ3AvY2FydC9kZXNrdG9wLydcbl1cbmV4cG9ydCBjb25zdCBzY3JvbGxfdGhyZXNob2xkID0gMzAwXG4iLCJleHBvcnQgY29uc3QgbmF2ID0ge1xuICBzZWxlY3RvcjogJyNuYXZiYXItbWFpbicsXG4gIG5hbWU6ICduYXZfYmFyJyxcbiAgY2hpbGRyZW46IFtcbiAgICB7XG4gICAgICBzZWxlY3RvcjogJyNuYXYtc2VhcmNoLWJhci1mb3JtJyxcbiAgICAgIGNoaWxkcmVuOiBbXG4gICAgICAgIHtcbiAgICAgICAgICBzZWxlY3RvcjogJ2lucHV0I3R3b3RhYnNlYXJjaHRleHRib3gnLFxuICAgICAgICAgIG5hbWU6ICdzZWFyY2hfaW5wdXQnLFxuICAgICAgICAgIGNsaWNrYWJsZTogdHJ1ZSxcbiAgICAgICAgICBnZW5lcmF0ZV9tZXRhZGF0YTogKGVtKSA9PiB7XG4gICAgICAgICAgICBjb25zdCB0ZXJtID0gZW0/LnZhbHVlXG4gICAgICAgICAgICByZXR1cm4geyBuYW1lOiAnc2VhcmNoX3Rlcm0nLCBkYXRhOiB7IHRlcm0gfSB9XG4gICAgICAgICAgfVxuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgc2VsZWN0b3I6ICcjbmF2LXNlYXJjaC1zdWJtaXQtYnV0dG9uJyxcbiAgICAgICAgICBjbGlja2FibGU6IHRydWUsXG4gICAgICAgICAgbmFtZTogJ3NlYXJjaF9idXR0b24nXG4gICAgICAgIH1cbiAgICAgIF1cbiAgICB9LFxuICAgIHtcbiAgICAgIHNlbGVjdG9yOiAnI25hdi1saW5rLWFjY291bnRMaXN0JyxcbiAgICAgIHRleHRfc2VsZWN0b3I6ICcjbmF2LWxpbmstYWNjb3VudExpc3Qgc3Bhbi5uYXYtbGluZS0yJyxcbiAgICAgIGFkZF90ZXh0OiB0cnVlLFxuICAgICAgY2xpY2thYmxlOiB0cnVlLFxuICAgICAgbmFtZTogJ2FjY291bnRfYW5kX2xpc3RfYnV0dG9uJ1xuICAgIH0sXG4gICAge1xuICAgICAgc2VsZWN0b3I6ICcjbmF2LW9yZGVycycsXG4gICAgICBhZGRfdGV4dDogdHJ1ZSxcbiAgICAgIGNsaWNrYWJsZTogdHJ1ZSxcbiAgICAgIG5hbWU6ICdvcmRlcl9idXR0b24nXG4gICAgfSxcbiAgICB7XG4gICAgICBzZWxlY3RvcjogJyNuYXYtY2FydCcsXG4gICAgICB0ZXh0X3NlbGVjdG9yOiAnI25hdi1jYXJ0IC5uYXYtbGluZS0yJyxcbiAgICAgIGFkZF90ZXh0OiB0cnVlLFxuICAgICAgY2xpY2thYmxlOiB0cnVlLFxuICAgICAgbmFtZTogJ2NhcnRfYnV0dG9uJ1xuICAgIH0sXG4gICAge1xuICAgICAgc2VsZWN0b3I6ICcjbmF2LWZseW91dC1zZWFyY2hBamF4JyxcbiAgICAgIG5hbWU6ICdzdWdnZXN0ZWRfdGVybXMnLFxuICAgICAgY2hpbGRyZW46IFtcbiAgICAgICAge1xuICAgICAgICAgIHNlbGVjdG9yOiAnZGl2LnMtc3VnZ2VzdGlvbi1lbGxpcHNpcy1kaXJlY3Rpb24nLFxuICAgICAgICAgIG5hbWU6ICdmcm9tX3RleHQnLFxuICAgICAgICAgIGFkZF90ZXh0OiB0cnVlLFxuICAgICAgICAgIGNsaWNrYWJsZTogdHJ1ZVxuICAgICAgICB9XG4gICAgICBdXG4gICAgfVxuICBdXG59XG5cbmV4cG9ydCBjb25zdCByZWZpbmVtZW50X29wdGlvbiA9IFtcbiAge1xuICAgIHNlbGVjdG9yOiAnc3Bhbi5hLXNpemUtYmFzZS5hLWNvbG9yLWJhc2UucHVpcy1ib2xkLXdlaWdodC10ZXh0JyxcbiAgICBhZGRfdGV4dDogdHJ1ZSxcbiAgICBjbGFzczogJ3JlZmluZW1lbnQtdGl0bGUnXG4gIH0sXG4gIHtcbiAgICBzZWxlY3RvcjogJ2Eucy1uYXZpZ2F0aW9uLWNsZWFyLWxpbmsnLFxuICAgIGFkZF90ZXh0OiB0cnVlLFxuICAgIG5hbWU6ICdjbGVhcl9zZWxlY3Rpb24nLFxuICAgIGNsaWNrYWJsZTogdHJ1ZVxuICB9LFxuICB7XG4gICAgc2VsZWN0b3I6ICd1bCA+IHNwYW4uYS1kZWNsYXJhdGl2ZSA+IHNwYW4gPiBsaTpoYXMoYS5hLWxpbmstbm9ybWFsLnMtbmF2aWdhdGlvbi1pdGVtKScsXG4gICAgYWRkX3RleHQ6IHRydWUsXG4gICAgbmFtZTogJ2Zyb21fdGV4dCcsXG4gICAgY2xpY2thYmxlOiB0cnVlLFxuICAgIC8vIGNsaWNrX3NlbGVjdG9yOiBcImFcIixcbiAgICBkaXJlY3RfY2hpbGQ6IHRydWUsXG4gICAgdGV4dF9qczogZnVuY3Rpb24gKGVsZW1lbnQpIHtcbiAgICAgIHRyeSB7XG4gICAgICAgIGxldCB0ZXh0ID0gJydcbiAgICAgICAgaWYgKCFlbGVtZW50KSB7XG4gICAgICAgICAgcmV0dXJuIHRleHRcbiAgICAgICAgfVxuICAgICAgICBjb25zdCBhQ2hpbGQgPSBlbGVtZW50LnF1ZXJ5U2VsZWN0b3IoJ2EuYS1saW5rLW5vcm1hbC5zLW5hdmlnYXRpb24taXRlbScpXG4gICAgICAgIGlmIChlbGVtZW50LmlubmVyVGV4dCAmJiBlbGVtZW50LmlubmVyVGV4dC50cmltKCkpIHtcbiAgICAgICAgICB0ZXh0ICs9IGVsZW1lbnQuaW5uZXJUZXh0LnRyaW0oKVxuICAgICAgICAgIGlmIChhQ2hpbGQgJiYgYUNoaWxkLmhhc0F0dHJpYnV0ZSgndGl0bGUnKSkge1xuICAgICAgICAgICAgdGV4dCArPSAnICdcbiAgICAgICAgICAgIHRleHQgKz0gYUNoaWxkLmdldEF0dHJpYnV0ZSgndGl0bGUnKVxuICAgICAgICAgIH1cbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBjb25zdCBhQ2hpbGQgPSBlbGVtZW50LnF1ZXJ5U2VsZWN0b3IoJ2EuYS1saW5rLW5vcm1hbC5zLW5hdmlnYXRpb24taXRlbScpXG4gICAgICAgICAgaWYgKGFDaGlsZCAmJiBhQ2hpbGQuaGFzQXR0cmlidXRlKCd0aXRsZScpKSB7XG4gICAgICAgICAgICB0ZXh0ICs9IGFDaGlsZC5nZXRBdHRyaWJ1dGUoJ3RpdGxlJylcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgaWYgKGFDaGlsZCAmJiBhQ2hpbGQuZ2V0QXR0cmlidXRlKCdhcmlhLWN1cnJlbnQnKSA9PT0gJ3RydWUnKSB7XG4gICAgICAgICAgLy8gdGV4dCA9ICdDbGVhciBPcHRpb24gJyArIHRleHRcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gdGV4dFxuICAgICAgfSBjYXRjaCAoZSkge1xuICAgICAgICBjb25zb2xlLmxvZyhlKVxuICAgICAgICByZXR1cm4gJydcbiAgICAgIH1cbiAgICB9LFxuICAgIGdlbmVyYXRlX21ldGFkYXRhOiAoZWxlbWVudCkgPT4ge1xuICAgICAgbGV0IHRleHQgPSAnJ1xuICAgICAgY29uc3QgYUNoaWxkID0gZWxlbWVudC5xdWVyeVNlbGVjdG9yKCdhLmEtbGluay1ub3JtYWwucy1uYXZpZ2F0aW9uLWl0ZW0nKVxuICAgICAgaWYgKGVsZW1lbnQuaW5uZXJUZXh0ICYmIGVsZW1lbnQuaW5uZXJUZXh0LnRyaW0oKSkge1xuICAgICAgICB0ZXh0ICs9IGVsZW1lbnQuaW5uZXJUZXh0LnRyaW0oKVxuICAgICAgICBpZiAoYUNoaWxkICYmIGFDaGlsZC5oYXNBdHRyaWJ1dGUoJ3RpdGxlJykpIHtcbiAgICAgICAgICB0ZXh0ICs9ICdfJ1xuICAgICAgICAgIHRleHQgKz0gYUNoaWxkLmdldEF0dHJpYnV0ZSgndGl0bGUnKVxuICAgICAgICB9XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBjb25zdCBhQ2hpbGQgPSBlbGVtZW50LnF1ZXJ5U2VsZWN0b3IoJ2EuYS1saW5rLW5vcm1hbC5zLW5hdmlnYXRpb24taXRlbScpXG4gICAgICAgIGlmIChhQ2hpbGQgJiYgYUNoaWxkLmhhc0F0dHJpYnV0ZSgndGl0bGUnKSkge1xuICAgICAgICAgIHRleHQgKz0gYUNoaWxkLmdldEF0dHJpYnV0ZSgndGl0bGUnKVxuICAgICAgICB9XG4gICAgICB9XG4gICAgICBjb25zdCBuYW1lRW0gPSBlbGVtZW50LmNsb3Nlc3QoJ3VsJyk/LnBhcmVudEVsZW1lbnQ/LmZpcnN0RWxlbWVudENoaWxkXG4gICAgICBjb25zdCBuYW1lID0gbmFtZUVtPy5pbm5lclRleHQ/LnJlcGxhY2UoL1sgXS9nLCAnXycpLnRvTG93ZXJDYXNlKCkudHJpbSgpXG5cbiAgICAgIGxldCB1cmwgPSAnJ1xuXG4gICAgICBpZiAoYUNoaWxkICYmIGFDaGlsZC5oYXNBdHRyaWJ1dGUoJ2hyZWYnKSkge1xuICAgICAgICB1cmwgPSBhQ2hpbGQuZ2V0QXR0cmlidXRlKCdocmVmJylcbiAgICAgIH1cblxuICAgICAgaWYgKGFDaGlsZCAmJiBhQ2hpbGQuZ2V0QXR0cmlidXRlKCdhcmlhLWN1cnJlbnQnKSA9PT0gJ3RydWUnKSB7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgbmFtZTogJ3JlZmluZW1lbnRzLicgKyBuYW1lLFxuICAgICAgICAgIGRhdGE6IHsgdGl0bGU6IHRleHQ/LnRyaW0oKSB8fCAnJywgc2VsZWN0ZWQ6IHRydWUsIHVybCB9XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIHJldHVybiB7XG4gICAgICAgIG5hbWU6ICdyZWZpbmVtZW50cy4nICsgbmFtZSxcbiAgICAgICAgZGF0YTogeyB0aXRsZTogdGV4dD8udHJpbSgpIHx8ICcnLCBzZWxlY3RlZDogZmFsc2UsIHVybCB9XG4gICAgICB9XG4gICAgfSxcbiAgICBjaGlsZHJlbjogW1xuICAgICAge1xuICAgICAgICBzZWxlY3RvcjogXCJpbnB1dFt0eXBlPSdjaGVja2JveCddXCJcbiAgICAgIH1cbiAgICBdXG4gIH0sXG4gIHtcbiAgICBzZWxlY3RvcjpcbiAgICAgIFwidWwgPiBzcGFuLmEtZGVjbGFyYXRpdmUgPiBsaSA+IHNwYW4gPiBkaXZbZGF0YS1hLWV4cGFuZGVyLW5hbWU9J2ZpbHRlci1jb250ZW50LWV4cGFuZGVyJ11cIixcbiAgICBuYW1lOiAnbW9yZV9vcHRpb25zJyxcbiAgICBjaGlsZHJlbjogW1xuICAgICAge1xuICAgICAgICBzZWxlY3RvcjogXCJhW2RhdGEtY3NhLWMtZnVuYy1kZXBzPSdhdWktZGEtYS1leHBhbmRlci10b2dnbGUnXVwiLFxuICAgICAgICBuYW1lOiAndG9nZ2xlX2V4cGFuc2lvbicsXG4gICAgICAgIGFkZF90ZXh0OiB0cnVlXG4gICAgICB9LFxuICAgICAge1xuICAgICAgICBzZWxlY3RvcjogJ2xpJyxcbiAgICAgICAgYWRkX3RleHQ6IHRydWUsXG4gICAgICAgIG5hbWU6ICdmcm9tX3RleHQnLFxuICAgICAgICBjbGlja2FibGU6IHRydWUsXG4gICAgICAgIC8vIGNsaWNrX3NlbGVjdG9yOiBcImFcIixcbiAgICAgICAgdGV4dF9qczogZnVuY3Rpb24gKGVsZW1lbnQpIHtcbiAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgbGV0IHRleHQgPSAnJ1xuICAgICAgICAgICAgaWYgKCFlbGVtZW50KSB7XG4gICAgICAgICAgICAgIHJldHVybiB0ZXh0XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBjb25zdCBhQ2hpbGQgPSBlbGVtZW50LnF1ZXJ5U2VsZWN0b3IoJ2EuYS1saW5rLW5vcm1hbC5zLW5hdmlnYXRpb24taXRlbScpXG4gICAgICAgICAgICBpZiAoZWxlbWVudC5pbm5lclRleHQgJiYgZWxlbWVudC5pbm5lclRleHQudHJpbSgpKSB7XG4gICAgICAgICAgICAgIHRleHQgKz0gZWxlbWVudC5pbm5lclRleHQudHJpbSgpXG4gICAgICAgICAgICAgIGlmIChhQ2hpbGQgJiYgYUNoaWxkLmhhc0F0dHJpYnV0ZSgndGl0bGUnKSkge1xuICAgICAgICAgICAgICAgIHRleHQgKz0gJyAnXG4gICAgICAgICAgICAgICAgdGV4dCArPSBhQ2hpbGQuZ2V0QXR0cmlidXRlKCd0aXRsZScpXG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgIGNvbnN0IGFDaGlsZCA9IGVsZW1lbnQucXVlcnlTZWxlY3RvcignYS5hLWxpbmstbm9ybWFsLnMtbmF2aWdhdGlvbi1pdGVtJylcbiAgICAgICAgICAgICAgaWYgKGFDaGlsZCAmJiBhQ2hpbGQuaGFzQXR0cmlidXRlKCd0aXRsZScpKSB7XG4gICAgICAgICAgICAgICAgdGV4dCArPSBhQ2hpbGQuZ2V0QXR0cmlidXRlKCd0aXRsZScpXG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmIChhQ2hpbGQgJiYgYUNoaWxkLmdldEF0dHJpYnV0ZSgnYXJpYS1jdXJyZW50JykgPT09ICd0cnVlJykge1xuICAgICAgICAgICAgICAvLyB0ZXh0ID0gJ0NsZWFyIE9wdGlvbiAnICsgdGV4dFxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuIHRleHRcbiAgICAgICAgICB9IGNhdGNoIChlKSB7XG4gICAgICAgICAgICBjb25zb2xlLmxvZyhlKVxuICAgICAgICAgICAgcmV0dXJuICcnXG4gICAgICAgICAgfVxuICAgICAgICB9LFxuICAgICAgICBnZW5lcmF0ZV9tZXRhZGF0YTogKGVsZW1lbnQpID0+IHtcbiAgICAgICAgICBsZXQgdGV4dCA9ICcnXG4gICAgICAgICAgY29uc3QgYUNoaWxkID0gZWxlbWVudC5xdWVyeVNlbGVjdG9yKCdhLmEtbGluay1ub3JtYWwucy1uYXZpZ2F0aW9uLWl0ZW0nKVxuICAgICAgICAgIGlmIChlbGVtZW50LmlubmVyVGV4dCAmJiBlbGVtZW50LmlubmVyVGV4dC50cmltKCkpIHtcbiAgICAgICAgICAgIHRleHQgKz0gZWxlbWVudC5pbm5lclRleHQudHJpbSgpXG4gICAgICAgICAgICBpZiAoYUNoaWxkICYmIGFDaGlsZC5oYXNBdHRyaWJ1dGUoJ3RpdGxlJykpIHtcbiAgICAgICAgICAgICAgdGV4dCArPSAnXydcbiAgICAgICAgICAgICAgdGV4dCArPSBhQ2hpbGQuZ2V0QXR0cmlidXRlKCd0aXRsZScpXG4gICAgICAgICAgICB9XG4gICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIGNvbnN0IGFDaGlsZCA9IGVsZW1lbnQucXVlcnlTZWxlY3RvcignYS5hLWxpbmstbm9ybWFsLnMtbmF2aWdhdGlvbi1pdGVtJylcbiAgICAgICAgICAgIGlmIChhQ2hpbGQgJiYgYUNoaWxkLmhhc0F0dHJpYnV0ZSgndGl0bGUnKSkge1xuICAgICAgICAgICAgICB0ZXh0ICs9IGFDaGlsZC5nZXRBdHRyaWJ1dGUoJ3RpdGxlJylcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9XG4gICAgICAgICAgY29uc3QgbmFtZUVtID0gZWxlbWVudC5jbG9zZXN0KCd1bCcpPy5wYXJlbnRFbGVtZW50Py5jbG9zZXN0KCd1bCcpXG4gICAgICAgICAgICA/LnBhcmVudEVsZW1lbnQ/LmZpcnN0RWxlbWVudENoaWxkXG4gICAgICAgICAgY29uc3QgbmFtZSA9IG5hbWVFbT8uaW5uZXJUZXh0Py5yZXBsYWNlKC9bIF0vZywgJ18nKS50b0xvd2VyQ2FzZSgpLnRyaW0oKVxuXG4gICAgICAgICAgbGV0IHVybCA9ICcnXG5cbiAgICAgICAgICBpZiAoYUNoaWxkICYmIGFDaGlsZC5oYXNBdHRyaWJ1dGUoJ2hyZWYnKSkge1xuICAgICAgICAgICAgdXJsID0gYUNoaWxkLmdldEF0dHJpYnV0ZSgnaHJlZicpXG4gICAgICAgICAgfVxuXG4gICAgICAgICAgaWYgKGFDaGlsZCAmJiBhQ2hpbGQuZ2V0QXR0cmlidXRlKCdhcmlhLWN1cnJlbnQnKSA9PT0gJ3RydWUnKSB7XG4gICAgICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgICBuYW1lOiAncmVmaW5lbWVudHMuJyArIG5hbWUsXG4gICAgICAgICAgICAgIGRhdGE6IHsgdGl0bGU6IHRleHQ/LnRyaW0oKSB8fCAnJywgc2VsZWN0ZWQ6IHRydWUsIHVybCB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfVxuICAgICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICBuYW1lOiAncmVmaW5lbWVudHMuJyArIG5hbWUsXG4gICAgICAgICAgICBkYXRhOiB7IHRpdGxlOiB0ZXh0Py50cmltKCkgfHwgJycsIHNlbGVjdGVkOiBmYWxzZSwgdXJsIH1cbiAgICAgICAgICB9XG4gICAgICAgIH0sXG4gICAgICAgIGNoaWxkcmVuOiBbXG4gICAgICAgICAge1xuICAgICAgICAgICAgc2VsZWN0b3I6IFwiaW5wdXRbdHlwZT0nY2hlY2tib3gnXVwiXG4gICAgICAgICAgfVxuICAgICAgICBdXG4gICAgICB9XG4gICAgXVxuICB9XG5dXG5cbmV4cG9ydCBjb25zdCBwcm9kdWN0X2ZhY3RzID0ge1xuICBzZWxlY3RvcjogJyNwcm9kdWN0RmFjdHNEZXNrdG9wRXhwYW5kZXInLFxuICBhZGRfdGV4dDogdHJ1ZSxcbiAgY2xhc3M6ICdwcm9kdWN0LWZhY3RzJ1xufVxuXG5leHBvcnQgY29uc3QgcHJvZHVjdF9kZWxpdmVyeSA9IHtcbiAgc2VsZWN0b3I6ICdkaXYubWlyLWxheW91dC1ERUxJVkVSWV9CTE9DSy1zbG90LVBSSU1BUllfREVMSVZFUllfTUVTU0FHRV9MQVJHRScsXG4gIGFkZF90ZXh0OiB0cnVlLFxuICBjbGFzczogJ3Byb2R1Y3QtZGVsaXZlcnknXG59XG5cbmV4cG9ydCBjb25zdCBxdWFudGl0eV9zZWxlY3RvciA9IHtcbiAgc2VsZWN0b3I6ICcjc2VsZWN0UXVhbnRpdHksIGRpdltpZF49XCJxcy13aWRnZXQtYnV0dG9uLWNvbnRhaW5lci1hdGZjXCJdJyxcbiAgbmFtZTogJ3F1YW50aXR5X3NlbGVjdG9yJyxcbiAgY2hpbGRyZW46IFtcbiAgICB7XG4gICAgICBzZWxlY3RvcjogJ2xhYmVsJyxcbiAgICAgIGFkZF90ZXh0OiB0cnVlXG4gICAgfSxcbiAgICB7XG4gICAgICBzZWxlY3RvcjogJ3NwYW4uYS1kcm9wZG93bi1wcm9tcHQnLFxuICAgICAgYWRkX3RleHQ6IHRydWVcbiAgICB9LFxuICAgIHtcbiAgICAgIHNlbGVjdG9yOiAnc2VsZWN0JyxcbiAgICAgIC8vIGNsaWNrYWJsZTogdHJ1ZSxcbiAgICAgIG5hbWU6ICdkcm9wX2Rvd25fbGlzdCdcbiAgICB9LFxuICAgIHtcbiAgICAgIHNlbGVjdG9yOiAnYnV0dG9uJyxcbiAgICAgIG5hbWU6ICdkcm9wX2Rvd25fbGlzdCcsXG4gICAgICBjbGlja2FibGU6IHRydWUsXG4gICAgICBhZGRfdGV4dDogdHJ1ZVxuICAgIH0sXG4gICAge1xuICAgICAgc2VsZWN0b3I6ICdkaXYucXMtd2lkZ2V0LWRyb3Bkb3duLXdyYXBwZXIgc3BhbltkYXRhLWFjdGlvbj1cInFzLXdpZGdldC1kcm9wZG93bi1kZWNsXCJdJyxcbiAgICAgIGFkZF90ZXh0OiB0cnVlLFxuICAgICAgY2xpY2thYmxlOiB0cnVlLFxuICAgICAgdXNlX3Jvb3Q6IHRydWUsXG4gICAgICBuYW1lOiAnZnJvbV90ZXh0JyxcbiAgICAgIHRleHRfZm9ybWF0OiAnRHJvcCBEb3duIE9wdGlvbiB7fSdcbiAgICB9XG4gIF1cbn1cblxuZXhwb3J0IGNvbnN0IGRlbGl2ZXJ5X2ZyZXF1ZW5jeV9zZWxlY3RvciA9IHtcbiAgc2VsZWN0b3I6ICcjcmVwbGVuaXNobWVudEZyZXF1ZW5jeV9mZWF0dXJlX2RpdicsXG4gIG5hbWU6ICdkZWxpdmVyeV9mcmVxdWVuY3lfc2VsZWN0b3InLFxuICB0ZXh0X3NlbGVjdG9yOiAnZGl2LmEtc2VjdGlvbi5hLXNwYWNpbmctbWljcm8gPiBzcGFuJyxcbiAgYWRkX3RleHQ6IHRydWUsXG4gIGNoaWxkcmVuOiBbXG4gICAge1xuICAgICAgc2VsZWN0b3I6ICcjcmN4T3JkRnJlcU9ubWxXcmFwcGVyIHNwYW4uYS1kcm9wZG93bi1wcm9tcHQnLFxuICAgICAgYWRkX3RleHQ6IHRydWVcbiAgICB9LFxuICAgIHtcbiAgICAgIHNlbGVjdG9yOiAnI3JjeE9yZEZyZXFPbm1sV3JhcHBlciBzZWxlY3QnLFxuICAgICAgLy8gY2xpY2thYmxlOiB0cnVlLFxuICAgICAgbmFtZTogJ2Ryb3BfZG93bl9saXN0J1xuICAgIH1cbiAgXVxufVxuXG5leHBvcnQgY29uc3Qgc2V0X3VwX25vd19idXR0b24gPSB7XG4gIHNlbGVjdG9yOiAnI3JjeC1zdWJzY3JpYmUtc3VibWl0LWJ1dHRvbi1hbm5vdW5jZScsXG4gIGFkZF90ZXh0OiB0cnVlLFxuICBjbGlja2FibGU6IHRydWUsXG4gIG5hbWU6ICdzZXRfdXBfbm93JyxcbiAgY2xhc3M6ICdwcm9kdWN0LXNldC11cC1ub3cnXG59XG5cbmV4cG9ydCBjb25zdCBhZGRfdG9fY2FydF9idXR0b24gPSB7XG4gIHNlbGVjdG9yOlxuICAgIFwiaW5wdXRbbmFtZT0nc3VibWl0LmFkZC10by1jYXJ0J10sIGlucHV0W25hbWU9J3N1Ym1pdC5hZGQtdG8tY2FydC11YmInXSwgI2ZyZXNoQWRkVG9DYXJ0QnV0dG9uIGlucHV0XCIsXG4gIGFkZF90ZXh0OiB0cnVlLFxuICBjbGlja2FibGU6IHRydWUsXG4gIG5hbWU6ICdhZGRfdG9fY2FydCcsXG4gIGNsYXNzOiAncHJvZHVjdC1hZGQtdG8tY2FydCdcbn1cblxuZXhwb3J0IGNvbnN0IGJ1eV9ub3dfYnV0dG9uID0ge1xuICBzZWxlY3RvcjogXCJpbnB1dFtuYW1lPSdzdWJtaXQuYnV5LW5vdyddXCIsXG4gIGFkZF90ZXh0OiB0cnVlLFxuICBjbGlja2FibGU6IHRydWUsXG4gIG5hbWU6ICdidXlfbm93JyxcbiAgY2xhc3M6ICdwcm9kdWN0LWJ1eS1ub3cnXG59XG5cbmV4cG9ydCBjb25zdCBidXlfYm94X3dpdGhfYWNjb3JkaW9uID0ge1xuICBzZWxlY3RvcjogJyNidXlCb3hBY2NvcmRpb24gPiBkaXYuYS1ib3guY2Vsd2lkZ2V0JyxcbiAgbmFtZTogJ2Zyb21fdGV4dCcsXG4gIHRleHRfc2VsZWN0b3I6ICdkaXYuYWNjb3JkaW9uLWNhcHRpb24gPiBzcGFuJyxcbiAgY2hpbGRyZW46IFtcbiAgICB7XG4gICAgICBzZWxlY3RvcjpcbiAgICAgICAgXCJkaXZbZGF0YS1jc2EtYy1jb250ZW50LWlkPSdvZmZlcl9kaXNwbGF5X2Rlc2t0b3BfYWNjb3JkaW9uX2hlYWRlciddLCBkaXZbZGF0YS1jc2EtYy1jb250ZW50LWlkPSdvZmZlcl9kaXNwbGF5X21vYmlsZV9hY2NvcmRpb25faGVhZGVyJ11cIixcbiAgICAgIG5hbWU6ICdhY2NvcmRpb25fc2VsZWN0b3InLFxuICAgICAgYWRkX3RleHQ6IHRydWUsXG4gICAgICBjbGlja2FibGU6IHRydWUsXG4gICAgICB0ZXh0X3NlbGVjdG9yOiAnaDUgc3Bhbi5hLXRleHQtYm9sZCdcbiAgICB9LFxuICAgIHtcbiAgICAgIHNlbGVjdG9yOiAnZGl2LmEtYWNjb3JkaW9uLWlubmVyLmFjY29yZGlvbi1yb3ctY29udGVudCcsXG4gICAgICBuYW1lOiAncHVyY2hhc2VfZm9ybScsXG4gICAgICBjaGlsZHJlbjogW1xuICAgICAgICBwcm9kdWN0X2ZhY3RzLFxuICAgICAgICBwcm9kdWN0X2RlbGl2ZXJ5LFxuICAgICAgICBxdWFudGl0eV9zZWxlY3RvcixcbiAgICAgICAgZGVsaXZlcnlfZnJlcXVlbmN5X3NlbGVjdG9yLFxuICAgICAgICBzZXRfdXBfbm93X2J1dHRvbixcbiAgICAgICAgYWRkX3RvX2NhcnRfYnV0dG9uLFxuICAgICAgICBidXlfbm93X2J1dHRvblxuICAgICAgXVxuICAgIH1cbiAgXVxufVxuXG5leHBvcnQgY29uc3QgYnV5X2JveF93aXRob3V0X2FjY29yZGlvbl9kZWxpdmVyeSA9IHtcbiAgc2VsZWN0b3I6ICcjZ3NvZF9zaW5nbGVPZmZlckRpc3BsYXlfRGVza3RvcCcsXG4gIGNoaWxkcmVuOiBbXG4gICAge1xuICAgICAgc2VsZWN0b3I6ICcjYWRkVG9DYXJ0JyxcbiAgICAgIG5hbWU6ICdwdXJjaGFzZV9mb3JtJyxcbiAgICAgIGNoaWxkcmVuOiBbXG4gICAgICAgIHByb2R1Y3RfZmFjdHMsXG4gICAgICAgIHByb2R1Y3RfZGVsaXZlcnksXG4gICAgICAgIHF1YW50aXR5X3NlbGVjdG9yLFxuICAgICAgICBhZGRfdG9fY2FydF9idXR0b24sXG4gICAgICAgIGJ1eV9ub3dfYnV0dG9uXG4gICAgICBdXG4gICAgfVxuICBdXG59XG5cbmV4cG9ydCBjb25zdCBidXlfYm94X3dpdGhvdXRfYWNjb3JkaW9uX3BpY2tfdXAgPSB7XG4gIHNlbGVjdG9yOiAnI2dzb2Rfc2luZ2xlT2ZmZXJEaXNwbGF5X2dyb3VwXzJfRGVza3RvcCcsXG4gIGNoaWxkcmVuOiBbXG4gICAge1xuICAgICAgc2VsZWN0b3I6ICcjcGlja1VwT2ZmZXJEaXNwbGF5JyxcbiAgICAgIG5hbWU6ICdwdXJjaGFzZV9mb3JtJyxcbiAgICAgIGNoaWxkcmVuOiBbXG4gICAgICAgIHByb2R1Y3RfZmFjdHMsXG4gICAgICAgIHByb2R1Y3RfZGVsaXZlcnksXG4gICAgICAgIHF1YW50aXR5X3NlbGVjdG9yLFxuICAgICAgICBhZGRfdG9fY2FydF9idXR0b24sXG4gICAgICAgIGJ1eV9ub3dfYnV0dG9uXG4gICAgICBdXG4gICAgfVxuICBdXG59XG5cbmV4cG9ydCBjb25zdCBjYXJ0ID0gW1xuICBuYXYsXG4gIHtcbiAgICBzZWxlY3RvcjogJyNzYy1jb2xsYXBzZWQtY2FydHMtY29udGFpbmVyJyxcbiAgICBuYW1lOiAnYW1hem9uX2ZyZXNoX2NhcnQnLFxuICAgIGNoaWxkcmVuOiBbXG4gICAgICB7XG4gICAgICAgIHNlbGVjdG9yOiAnZGl2LnNjLWxvY2FsbWFya2V0LXRleHQtbG9nbycsXG4gICAgICAgIGFkZF90ZXh0OiB0cnVlXG4gICAgICB9LFxuICAgICAge1xuICAgICAgICBzZWxlY3RvcjogJ2RpdltkYXRhLW5hbWU9XCJjb2xsYXBzZWRfaXRlbV9saXN0XCJdJyxcbiAgICAgICAgY2xpY2thYmxlOiB0cnVlLFxuICAgICAgICBuYW1lOiAnaXRlbV9saXN0J1xuICAgICAgfSxcbiAgICAgIHtcbiAgICAgICAgc2VsZWN0b3I6ICdkaXYuc2MtYnV5LWJveC1pbm5lci1ib3ggaW5wdXRbbmFtZV49XCJwcm9jZWVkVG9BTE1DaGVja291dFwiXScsXG4gICAgICAgIGNsaWNrYWJsZTogdHJ1ZSxcbiAgICAgICAgbmFtZTogJ2NoZWNrX291dCcsXG4gICAgICAgIGFkZF90ZXh0OiB0cnVlXG4gICAgICB9LFxuICAgICAge1xuICAgICAgICBzZWxlY3RvcjogJ2Rpdi5zYy1idXktYm94LWlubmVyLWJveCBhJyxcbiAgICAgICAgY2xpY2thYmxlOiB0cnVlLFxuICAgICAgICBuYW1lOiAnZnJvbV90ZXh0JyxcbiAgICAgICAgYWRkX3RleHQ6IHRydWVcbiAgICAgIH1cbiAgICBdXG4gIH0sXG4gIHtcbiAgICBzZWxlY3RvcjogXCJkaXZbZGF0YS1uYW1lPSdBY3RpdmUgSXRlbXMnXVwiLFxuICAgIG5hbWU6ICdhY3RpdmVfaXRlbV9saXN0JyxcbiAgICBjaGlsZHJlbjogW1xuICAgICAge1xuICAgICAgICBzZWxlY3RvcjogJ2Rpdi5zYy1saXN0LWl0ZW0tY29udGVudCcsXG4gICAgICAgIHRleHRfc2VsZWN0b3I6XG4gICAgICAgICAgJ2Rpdi5zYy1pdGVtLWNvbnRlbnQtZ3JvdXAgdWwgPiBsaSA+IHNwYW4uYS1saXN0LWl0ZW0gPiBhLnNjLXByb2R1Y3QtdGl0bGUgc3Bhbi5hLXRydW5jYXRlLWZ1bGwnLFxuICAgICAgICBuYW1lOiAnZnJvbV90ZXh0JyxcbiAgICAgICAgY2hpbGRyZW46IFtcbiAgICAgICAgICB7XG4gICAgICAgICAgICBzZWxlY3RvcjogJ2Rpdi5zYy1pdGVtLWNoZWNrLWNoZWNrYm94LXNlbGVjdG9yIGxhYmVsJyxcbiAgICAgICAgICAgIGNsaWNrYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIG5hbWU6ICdjaGVja2JveCdcbiAgICAgICAgICB9LFxuICAgICAgICAgIHtcbiAgICAgICAgICAgIHNlbGVjdG9yOiAnZGl2LnNjLWltYWdlLXdyYXBwZXIgYScsXG4gICAgICAgICAgICBjbGlja2FibGU6IHRydWUsXG4gICAgICAgICAgICBuYW1lOiAncHJvZHVjdF9pbWFnZScsXG4gICAgICAgICAgICBhZGRfdGV4dDogdHJ1ZSxcbiAgICAgICAgICAgIHRleHRfZm9ybWF0OiAnUHJvZHVjdCBJbWFnZSdcbiAgICAgICAgICB9LFxuICAgICAgICAgIHtcbiAgICAgICAgICAgIHNlbGVjdG9yOiAnZGl2LnNjLWl0ZW0tY29udGVudC1ncm91cCB1bCA+IGxpID4gc3Bhbi5hLWxpc3QtaXRlbSA+IGEuc2MtcHJvZHVjdC10aXRsZScsXG4gICAgICAgICAgICBjbGlja2FibGU6IHRydWUsXG4gICAgICAgICAgICB0ZXh0X3NlbGVjdG9yOiAnc3Bhbi5hLXRydW5jYXRlLWZ1bGwnLFxuICAgICAgICAgICAgYWRkX3RleHQ6IHRydWUsXG4gICAgICAgICAgICBuYW1lOiAncHJvZHVjdF9kZXRhaWwnXG4gICAgICAgICAgfSxcbiAgICAgICAgICB7XG4gICAgICAgICAgICBzZWxlY3RvcjogJ2xpLnNjLWRlbGl2ZXJ5LW1lc3NhZ2luZycsXG4gICAgICAgICAgICBhZGRfdGV4dDogdHJ1ZVxuICAgICAgICAgIH0sXG4gICAgICAgICAge1xuICAgICAgICAgICAgc2VsZWN0b3I6ICdkaXYuc2MtYmFkZ2UtcHJpY2UtdG8tcGF5IHNwYW4uc2MtcHJvZHVjdC1wcmljZSBzcGFuOm5vdCguYS1vZmZzY3JlZW4pJyxcbiAgICAgICAgICAgIGFkZF90ZXh0OiB0cnVlXG4gICAgICAgICAgfSxcbiAgICAgICAgICB7XG4gICAgICAgICAgICBzZWxlY3RvcjogJ2Rpdi5zYy1pdGVtLWNvbnRlbnQtZ3JvdXAgc3Bhbi5zYy1xdWFudGl0eS1zdGVwcGVyJyxcbiAgICAgICAgICAgIGNoaWxkcmVuOiBbXG4gICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICBzZWxlY3RvcjogXCJidXR0b25bYXJpYS1sYWJlbD0nRGVjcmVhc2UgcXVhbnRpdHkgYnkgb25lJ11cIixcbiAgICAgICAgICAgICAgICBhZGRfdGV4dDogdHJ1ZSxcbiAgICAgICAgICAgICAgICB0ZXh0X2pzOiBmdW5jdGlvbiAoZWxlbWVudCkge1xuICAgICAgICAgICAgICAgICAgaWYgKGVsZW1lbnQuaGFzQXR0cmlidXRlKCdhcmlhLWxhYmVsJykpIHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGVsZW1lbnQuZ2V0QXR0cmlidXRlKCdhcmlhLWxhYmVsJylcbiAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgIHJldHVybiAnJ1xuICAgICAgICAgICAgICAgIH0sXG5cbiAgICAgICAgICAgICAgICBjbGlja2FibGU6IHRydWUsXG4gICAgICAgICAgICAgICAgbmFtZTogJ2RlY3JlYXNlX3F1YW50aXR5X2J5X29uZSdcbiAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIHNlbGVjdG9yOiBcImRpdltyb2xlPSdzcGluYnV0dG9uJ11cIixcbiAgICAgICAgICAgICAgICBhZGRfdGV4dDogdHJ1ZSxcbiAgICAgICAgICAgICAgICB0ZXh0X2Zvcm1hdDogJ0N1cnJlbnQgUXVhbnRpdHk6IHt9J1xuICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgc2VsZWN0b3I6IFwiYnV0dG9uW2FyaWEtbGFiZWw9J0luY3JlYXNlIHF1YW50aXR5IGJ5IG9uZSddXCIsXG4gICAgICAgICAgICAgICAgYWRkX3RleHQ6IHRydWUsXG4gICAgICAgICAgICAgICAgdGV4dF9qczogZnVuY3Rpb24gKGVsZW1lbnQpIHtcbiAgICAgICAgICAgICAgICAgIGlmIChlbGVtZW50Lmhhc0F0dHJpYnV0ZSgnYXJpYS1sYWJlbCcpKSB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBlbGVtZW50LmdldEF0dHJpYnV0ZSgnYXJpYS1sYWJlbCcpXG4gICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICByZXR1cm4gJydcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIGNsaWNrYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgICAgICBuYW1lOiAnaW5jcmVhc2VfcXVhbnRpdHlfYnlfb25lJ1xuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICBdXG4gICAgICAgICAgfSxcbiAgICAgICAgICB7XG4gICAgICAgICAgICBzZWxlY3RvcjogXCJkaXYuc2MtaXRlbS1jb250ZW50LWdyb3VwIGlucHV0W2RhdGEtYWN0aW9uPSdkZWxldGUnXVwiLFxuICAgICAgICAgICAgYWRkX3RleHQ6IHRydWUsXG4gICAgICAgICAgICBjbGlja2FibGU6IHRydWUsXG4gICAgICAgICAgICBuYW1lOiAnZGVsZXRlJ1xuICAgICAgICAgIH0sXG4gICAgICAgICAge1xuICAgICAgICAgICAgc2VsZWN0b3I6IFwiZGl2LnNjLWl0ZW0tY29udGVudC1ncm91cCBpbnB1dFtkYXRhLWFjdGlvbj0nc2F2ZS1mb3ItbGF0ZXInXVwiLFxuICAgICAgICAgICAgYWRkX3RleHQ6IHRydWUsXG4gICAgICAgICAgICBjbGlja2FibGU6IHRydWUsXG4gICAgICAgICAgICBuYW1lOiAnc2F2ZV9mb3JfbGF0ZXInXG4gICAgICAgICAgfVxuICAgICAgICBdLFxuICAgICAgICBnZW5lcmF0ZV9tZXRhZGF0YTogKGVtKSA9PiB7XG4gICAgICAgICAgY29uc3QgYXNpbiA9IGVtLnBhcmVudEVsZW1lbnQ/LmdldEF0dHJpYnV0ZSgnZGF0YS1hc2luJylcbiAgICAgICAgICBjb25zdCBwcmljZUVtID0gZW0ucXVlcnlTZWxlY3RvcihcbiAgICAgICAgICAgICdkaXYuc2MtYmFkZ2UtcHJpY2UtdG8tcGF5IHNwYW4uc2MtcHJvZHVjdC1wcmljZSBzcGFuOm5vdCguYS1vZmZzY3JlZW4pJ1xuICAgICAgICAgIClcbiAgICAgICAgICBjb25zdCBwcmljZSA9IHByaWNlRW0/LmlubmVyVGV4dD8ucmVwbGFjZSgvW1xcbl0vZywgJycpXG4gICAgICAgICAgY29uc3QgdGl0bGVFbSA9IGVtLnF1ZXJ5U2VsZWN0b3IoXG4gICAgICAgICAgICAnZGl2LnNjLWl0ZW0tY29udGVudC1ncm91cCB1bCA+IGxpID4gc3Bhbi5hLWxpc3QtaXRlbSA+IGEuc2MtcHJvZHVjdC10aXRsZSBzcGFuLmEtdHJ1bmNhdGUtZnVsbCdcbiAgICAgICAgICApXG4gICAgICAgICAgY29uc3QgdGl0bGUgPSB0aXRsZUVtPy5pbm5lclRleHRcbiAgICAgICAgICBjb25zdCB1cmxFbSA9IGVtLnF1ZXJ5U2VsZWN0b3IoXG4gICAgICAgICAgICAnZGl2LnNjLWl0ZW0tY29udGVudC1ncm91cCB1bCA+IGxpID4gc3Bhbi5hLWxpc3QtaXRlbSA+IGEuc2MtcHJvZHVjdC10aXRsZSdcbiAgICAgICAgICApXG4gICAgICAgICAgY29uc3QgdXJsID0gdXJsRW0/LmdldEF0dHJpYnV0ZSgnaHJlZicpXG4gICAgICAgICAgY29uc3QgZGVsaXZlcnlFbSA9IGVtLnF1ZXJ5U2VsZWN0b3IoJ2xpLnNjLWRlbGl2ZXJ5LW1lc3NhZ2luZycpXG4gICAgICAgICAgY29uc3QgZGVsaXZlcnkgPSBkZWxpdmVyeUVtPy5pbm5lclRleHQucmVwbGFjZSgvW1xcbl0vZywgJyAnKVxuICAgICAgICAgIGNvbnN0IHF1YW50aXR5RW0gPSBlbS5xdWVyeVNlbGVjdG9yKFxuICAgICAgICAgICAgXCJkaXYuc2MtaXRlbS1jb250ZW50LWdyb3VwIHNwYW4uc2MtcXVhbnRpdHktc3RlcHBlciBkaXZbcm9sZT0nc3BpbmJ1dHRvbiddXCJcbiAgICAgICAgICApXG4gICAgICAgICAgY29uc3QgcXVhbnRpdHkgPSBxdWFudGl0eUVtPy5pbm5lclRleHRcbiAgICAgICAgICBjb25zdCBzZWxlY3RlZEVtID0gZW0ucXVlcnlTZWxlY3RvcignZGl2LnNjLWl0ZW0tY2hlY2stY2hlY2tib3gtc2VsZWN0b3IgaW5wdXQnKVxuICAgICAgICAgIGNvbnN0IHNlbGVjdGVkID0gc2VsZWN0ZWRFbT8uZ2V0QXR0cmlidXRlKCdjaGVja2VkJykgIT09IG51bGxcblxuICAgICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICBuYW1lOiAnYWN0aXZlX2l0ZW1zJyxcbiAgICAgICAgICAgIGRhdGE6IHsgdGl0bGUsIGFzaW4sIHByaWNlLCB1cmwsIGRlbGl2ZXJ5LCBxdWFudGl0eSwgc2VsZWN0ZWQgfVxuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfVxuICAgIF1cbiAgfSxcbiAge1xuICAgIHNlbGVjdG9yOiAnI3NjLWJ1eS1ib3gtcHRjLWJ1dHRvbiBpbnB1dCcsXG4gICAgYWRkX3RleHQ6IHRydWUsXG4gICAgY2xpY2thYmxlOiB0cnVlLFxuICAgIG5hbWU6ICdjaGVja19vdXQnXG4gIH1cbl1cblxuZXhwb3J0IGNvbnN0IGZyZXNoX2NhcnQgPSBbXG4gIG5hdixcbiAge1xuICAgIHNlbGVjdG9yOiBcImRpdltkYXRhLW5hbWU9J0FjdGl2ZSBJdGVtcyddXCIsXG4gICAgbmFtZTogJ2FjdGl2ZV9pdGVtX2xpc3QnLFxuICAgIGNoaWxkcmVuOiBbXG4gICAgICB7XG4gICAgICAgIHNlbGVjdG9yOiAnZGl2LnNjLWxpc3QtaXRlbS1jb250ZW50JyxcbiAgICAgICAgdGV4dF9zZWxlY3RvcjogJ3VsID4gbGkgPiBzcGFuLmEtbGlzdC1pdGVtID4gYS5zYy1wcm9kdWN0LXRpdGxlIHNwYW4uYS10cnVuY2F0ZS1mdWxsJyxcbiAgICAgICAgbmFtZTogJ2Zyb21fdGV4dCcsXG4gICAgICAgIGNoaWxkcmVuOiBbXG4gICAgICAgICAge1xuICAgICAgICAgICAgc2VsZWN0b3I6ICdkaXYuc2MtcHJvZHVjdC1pbWFnZS1kZXNrdG9wIGEgaW1nJyxcbiAgICAgICAgICAgIGNsaWNrYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIG5hbWU6ICdwcm9kdWN0X2ltYWdlJyxcbiAgICAgICAgICAgIGFkZF90ZXh0OiB0cnVlLFxuICAgICAgICAgICAgdGV4dF9mb3JtYXQ6ICdQcm9kdWN0IEltYWdlJ1xuICAgICAgICAgIH0sXG4gICAgICAgICAge1xuICAgICAgICAgICAgc2VsZWN0b3I6ICd1bCA+IGxpID4gc3Bhbi5hLWxpc3QtaXRlbSA+IGEuc2MtcHJvZHVjdC10aXRsZScsXG4gICAgICAgICAgICBjbGlja2FibGU6IHRydWUsXG4gICAgICAgICAgICB0ZXh0X3NlbGVjdG9yOiAnc3Bhbi5hLXRydW5jYXRlLWZ1bGwnLFxuICAgICAgICAgICAgYWRkX3RleHQ6IHRydWUsXG4gICAgICAgICAgICBuYW1lOiAncHJvZHVjdF9kZXRhaWwnXG4gICAgICAgICAgfSxcbiAgICAgICAgICB7XG4gICAgICAgICAgICBzZWxlY3RvcjogJ2Rpdi5zYy1iYWRnZS1wcmljZS10by1wYXkgc3Bhbi5zYy1wcmljZScsXG4gICAgICAgICAgICBhZGRfdGV4dDogdHJ1ZVxuICAgICAgICAgIH0sXG4gICAgICAgICAge1xuICAgICAgICAgICAgc2VsZWN0b3I6ICdkaXYuc2MtYWN0aW9uLWxpbmtzJyxcbiAgICAgICAgICAgIGNoaWxkcmVuOiBbXG4gICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICBzZWxlY3RvcjogJ2Rpdi5xcy13aWRnZXQtY29udGFpbmVyJyxcbiAgICAgICAgICAgICAgICBjaGlsZHJlbjogW1xuICAgICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICBzZWxlY3RvcjogXCJpbnB1dFthcmlhLWxhYmVsPSdSZW1vdmUnXVwiLFxuICAgICAgICAgICAgICAgICAgICBhZGRfdGV4dDogdHJ1ZSxcbiAgICAgICAgICAgICAgICAgICAgdGV4dF9qczogZnVuY3Rpb24gKGVsZW1lbnQpIHtcbiAgICAgICAgICAgICAgICAgICAgICBpZiAoZWxlbWVudC5oYXNBdHRyaWJ1dGUoJ2FyaWEtbGFiZWwnKSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGVsZW1lbnQuZ2V0QXR0cmlidXRlKCdhcmlhLWxhYmVsJylcbiAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgcmV0dXJuICcnXG4gICAgICAgICAgICAgICAgICAgIH0sXG5cbiAgICAgICAgICAgICAgICAgICAgY2xpY2thYmxlOiB0cnVlLFxuICAgICAgICAgICAgICAgICAgICBuYW1lOiAnZGVjcmVhc2VfcXVhbnRpdHlfYnlfb25lJ1xuICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgc2VsZWN0b3I6ICdkaXYucXMtd2lkZ2V0LWRyb3Bkb3duLWZsZXgtd3JhcHBlciBidXR0b24nLFxuICAgICAgICAgICAgICAgICAgICBhZGRfdGV4dDogdHJ1ZSxcbiAgICAgICAgICAgICAgICAgICAgY2xpY2thYmxlOiB0cnVlLFxuICAgICAgICAgICAgICAgICAgICBuYW1lOiAncXVhbnRpdHlfZHJvcF9kb3duX2xpc3QnLFxuICAgICAgICAgICAgICAgICAgICB0ZXh0X2Zvcm1hdDogJ0N1cnJlbnQgUXVhbnRpdHk6IHt9J1xuICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgc2VsZWN0b3I6XG4gICAgICAgICAgICAgICAgICAgICAgJ2Rpdi5xcy13aWRnZXQtZHJvcGRvd24td3JhcHBlciBzcGFuW2RhdGEtYWN0aW9uPVwicXMtd2lkZ2V0LWRyb3Bkb3duLWRlY2xcIl0nLFxuICAgICAgICAgICAgICAgICAgICBhZGRfdGV4dDogdHJ1ZSxcbiAgICAgICAgICAgICAgICAgICAgY2xpY2thYmxlOiB0cnVlLFxuICAgICAgICAgICAgICAgICAgICB1c2Vfcm9vdDogdHJ1ZSxcbiAgICAgICAgICAgICAgICAgICAgbmFtZTogJ2Zyb21fdGV4dCcsXG4gICAgICAgICAgICAgICAgICAgIHRleHRfZm9ybWF0OiAnRHJvcCBEb3duIE9wdGlvbiB7fSdcbiAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgIHNlbGVjdG9yOlxuICAgICAgICAgICAgICAgICAgICAgICdkaXZbaWRePVwicXMtd2lkZ2V0LXF1YW50aXR5LWNvbnRhaW5lci1hdGZjXCJdIHNwYW5bZGF0YS1hY3Rpb249XCJxcy13aWRnZXQtcXVhbnRpdHktY2hhbmdlbGluay1kZWNsXCJdJyxcbiAgICAgICAgICAgICAgICAgICAgYWRkX3RleHQ6IHRydWUsXG4gICAgICAgICAgICAgICAgICAgIGNsaWNrYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgICAgICAgICAgdXNlX3Jvb3Q6IHRydWUsXG4gICAgICAgICAgICAgICAgICAgIG5hbWU6ICdmcm9tX3RleHQnXG4gICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICBzZWxlY3RvcjpcbiAgICAgICAgICAgICAgICAgICAgICAnZGl2W2lkXj1cInFzLXdpZGdldC1zdW1tYXJ5LWNvbnRhaW5lci1hdGZjXCJdIHNwYW5baWRePVwicXMtd2lkZ2V0LXN1bW1hcnktYXRjLWF0ZmNcIl0nLFxuICAgICAgICAgICAgICAgICAgICBhZGRfdGV4dDogdHJ1ZSxcbiAgICAgICAgICAgICAgICAgICAgY2xpY2thYmxlOiB0cnVlLFxuICAgICAgICAgICAgICAgICAgICB1c2Vfcm9vdDogdHJ1ZSxcbiAgICAgICAgICAgICAgICAgICAgbmFtZTogJ2Zyb21fdGV4dCdcbiAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgIHNlbGVjdG9yOiBcImlucHV0W2FyaWEtbGFiZWw9J0FkZCddXCIsXG4gICAgICAgICAgICAgICAgICAgIGFkZF90ZXh0OiB0cnVlLFxuICAgICAgICAgICAgICAgICAgICB0ZXh0X2pzOiBmdW5jdGlvbiAoZWxlbWVudCkge1xuICAgICAgICAgICAgICAgICAgICAgIGlmIChlbGVtZW50Lmhhc0F0dHJpYnV0ZSgnYXJpYS1sYWJlbCcpKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gZWxlbWVudC5nZXRBdHRyaWJ1dGUoJ2FyaWEtbGFiZWwnKVxuICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gJydcbiAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgY2xpY2thYmxlOiB0cnVlLFxuICAgICAgICAgICAgICAgICAgICBuYW1lOiAnaW5jcmVhc2VfcXVhbnRpdHlfYnlfb25lJ1xuICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIF1cbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgXVxuICAgICAgICAgIH0sXG4gICAgICAgICAge1xuICAgICAgICAgICAgc2VsZWN0b3I6IFwiaW5wdXRbZGF0YS1hY3Rpb249J2RlbGV0ZSddXCIsXG4gICAgICAgICAgICBhZGRfdGV4dDogdHJ1ZSxcbiAgICAgICAgICAgIGNsaWNrYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIG5hbWU6ICdkZWxldGUnXG4gICAgICAgICAgfVxuICAgICAgICBdLFxuICAgICAgICBnZW5lcmF0ZV9tZXRhZGF0YTogKGVtKSA9PiB7XG4gICAgICAgICAgY29uc3QgYXNpbiA9IGVtLnBhcmVudEVsZW1lbnQ/LmdldEF0dHJpYnV0ZSgnZGF0YS1hc2luJylcbiAgICAgICAgICBjb25zdCBwcmljZUVtID0gZW0ucXVlcnlTZWxlY3RvcignZGl2LnNjLWJhZGdlLXByaWNlLXRvLXBheSBzcGFuLnNjLXByaWNlJylcbiAgICAgICAgICBjb25zdCBwcmljZSA9IHByaWNlRW0/LmlubmVyVGV4dD8ucmVwbGFjZSgvW1xcbl0vZywgJycpXG4gICAgICAgICAgY29uc3QgdGl0bGVFbSA9IGVtLnF1ZXJ5U2VsZWN0b3IoXG4gICAgICAgICAgICAndWwgPiBsaSA+IHNwYW4uYS1saXN0LWl0ZW0gPiBhLnNjLXByb2R1Y3QtdGl0bGUgc3Bhbi5hLXRydW5jYXRlLWZ1bGwnXG4gICAgICAgICAgKVxuICAgICAgICAgIGNvbnN0IHRpdGxlID0gdGl0bGVFbT8uaW5uZXJUZXh0XG4gICAgICAgICAgY29uc3QgdXJsRW0gPSBlbS5xdWVyeVNlbGVjdG9yKCd1bCA+IGxpID4gc3Bhbi5hLWxpc3QtaXRlbSA+IGEuc2MtcHJvZHVjdC10aXRsZScpXG4gICAgICAgICAgY29uc3QgdXJsID0gdXJsRW0/LmdldEF0dHJpYnV0ZSgnaHJlZicpXG4gICAgICAgICAgY29uc3QgcXVhbnRpdHlFbSA9IGVtLnF1ZXJ5U2VsZWN0b3IoXG4gICAgICAgICAgICAnZGl2LnNjLWFjdGlvbi1saW5rcyBkaXYucXMtd2lkZ2V0LWRyb3Bkb3duLWZsZXgtd3JhcHBlciBidXR0b24nXG4gICAgICAgICAgKVxuICAgICAgICAgIGNvbnN0IHF1YW50aXR5ID0gcXVhbnRpdHlFbT8uaW5uZXJUZXh0XG4gICAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIG5hbWU6ICdhY3RpdmVfaXRlbXMnLFxuICAgICAgICAgICAgZGF0YTogeyB0aXRsZSwgYXNpbiwgcHJpY2UsIHVybCwgcXVhbnRpdHkgfVxuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfVxuICAgIF1cbiAgfSxcbiAge1xuICAgIHNlbGVjdG9yOiAnZGl2LnNjLWJ1eS1ib3gtaW5uZXItYm94IGlucHV0W25hbWVePVwicHJvY2VlZFRvQUxNQ2hlY2tvdXRcIl0nLFxuICAgIGNsaWNrYWJsZTogdHJ1ZSxcbiAgICBuYW1lOiAnY2hlY2tfb3V0JyxcbiAgICBhZGRfdGV4dDogdHJ1ZVxuICB9LFxuICB7XG4gICAgc2VsZWN0b3I6ICdkaXYuc2MtYnV5LWJveC1pbm5lci1ib3ggYScsXG4gICAgY2xpY2thYmxlOiB0cnVlLFxuICAgIG5hbWU6ICdmcm9tX3RleHQnLFxuICAgIGFkZF90ZXh0OiB0cnVlXG4gIH0sXG4gIHtcbiAgICBzZWxlY3RvcjogJyNzYy1jYXJ0LWFib3ZlLWFjdGlvbnMgYnV0dG9uLCAjc2MtY2FydC1hYm92ZS1hY3Rpb25zIGEnLFxuICAgIGNsaWNrYWJsZTogdHJ1ZSxcbiAgICBuYW1lOiAnZnJvbV90ZXh0JyxcbiAgICBhZGRfdGV4dDogdHJ1ZVxuICB9XG5dXG5cbmV4cG9ydCBjb25zdCBidXlfYWdhaW4gPSBbXG4gIG5hdixcbiAge1xuICAgIHNlbGVjdG9yOiAnZGl2LmEtc2VjdGlvbjpoYXMoZGl2LmZpbHRlci1jb250YWluZXIpJyxcbiAgICBuYW1lOiAnZmlsdGVycycsXG4gICAgY2hpbGRyZW46IFtcbiAgICAgIHtcbiAgICAgICAgc2VsZWN0b3I6ICdkaXYuZmlsdGVyLWNvbnRhaW5lcicsXG4gICAgICAgIHRleHRfc2VsZWN0b3I6ICdzcGFuI2ZpbHRlci1jb250YWluZXItaGVhZGVyJyxcbiAgICAgICAgbmFtZTogJ2Zyb21fdGV4dCcsXG4gICAgICAgIGNoaWxkcmVuOiBbXG4gICAgICAgICAge1xuICAgICAgICAgICAgc2VsZWN0b3I6ICdzcGFuI2ZpbHRlci1jb250YWluZXItaGVhZGVyJyxcbiAgICAgICAgICAgIGFkZF90ZXh0OiB0cnVlXG4gICAgICAgICAgfSxcbiAgICAgICAgICB7XG4gICAgICAgICAgICBzZWxlY3RvcjogJ2xhYmVsJyxcbiAgICAgICAgICAgIGFkZF90ZXh0OiB0cnVlLFxuICAgICAgICAgICAgY2xpY2thYmxlOiB0cnVlLFxuICAgICAgICAgICAgbmFtZTogJ2Zyb21fdGV4dCcsXG4gICAgICAgICAgICBnZW5lcmF0ZV9tZXRhZGF0YTogKGVtKSA9PiB7XG4gICAgICAgICAgICAgIGNvbnN0IHRpdGxlID0gZW0uaW5uZXJUZXh0XG4gICAgICAgICAgICAgIGNvbnN0IG5hbWVFbSA9IGVtXG4gICAgICAgICAgICAgICAgLmNsb3Nlc3QoJ2Rpdi5maWx0ZXItY29udGFpbmVyJylcbiAgICAgICAgICAgICAgICA/LnF1ZXJ5U2VsZWN0b3IoJyNmaWx0ZXItY29udGFpbmVyLWhlYWRlcicpXG4gICAgICAgICAgICAgIGNvbnN0IG5hbWUgPSBuYW1lRW0/LmlubmVyVGV4dD8ucmVwbGFjZSgvWyBdL2csICdfJykudG9Mb3dlckNhc2UoKS50cmltKClcbiAgICAgICAgICAgICAgY29uc3QgaW5wdXQgPSBlbS5xdWVyeVNlbGVjdG9yKCdpbnB1dCcpXG4gICAgICAgICAgICAgIGlmIChpbnB1dCAmJiBpbnB1dC5jaGVja2VkKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgICAgICAgIG5hbWU6ICdmaWx0ZXJzLicgKyBuYW1lLFxuICAgICAgICAgICAgICAgICAgZGF0YTogeyB0aXRsZTogdGl0bGU/LnRyaW0oKSB8fCAnJywgc2VsZWN0ZWQ6IHRydWUgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgICAgIG5hbWU6ICdmaWx0ZXJzLicgKyBuYW1lLFxuICAgICAgICAgICAgICAgIGRhdGE6IHsgdGl0bGU6IHRpdGxlPy50cmltKCkgfHwgJycsIHNlbGVjdGVkOiBmYWxzZSB9XG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9XG4gICAgICAgIF1cbiAgICAgIH1cbiAgICBdXG4gIH0sXG4gIHtcbiAgICBzZWxlY3RvcjogJ2Rpdi5hbG0tZ3JpZC1kZXNrdG9wLWdyaWQtY29udGFpbmVyJyxcbiAgICBuYW1lOiAncHJvZHVjdF9saXN0JyxcbiAgICBjaGlsZHJlbjogW1xuICAgICAge1xuICAgICAgICBzZWxlY3RvcjogJ2RpdltpZF49XCJncmlkQ2VsbFwiXScsXG4gICAgICAgIG5hbWU6ICdmcm9tX3RleHQnLFxuICAgICAgICB0ZXh0X3NlbGVjdG9yOiBcImRpdltpZF49J2Nsb3NlZENhcmQnXSBhW2lkXj0ndGl0bGUnXSBzcGFuLmEtdHJ1bmNhdGUtZnVsbFwiLFxuICAgICAgICBjaGlsZHJlbjogW1xuICAgICAgICAgIHtcbiAgICAgICAgICAgIHNlbGVjdG9yOiBcImRpdltpZF49J2dyaWRFbGVtZW50J11cIixcbiAgICAgICAgICAgIG5hbWU6ICdwcm9kdWN0X2NhcmQnLFxuICAgICAgICAgICAgY2hpbGRyZW46IFtcbiAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIHNlbGVjdG9yOiBcImRpdltpZF49J2Nsb3NlZENhcmQnXVwiLFxuICAgICAgICAgICAgICAgIG5hbWU6ICdjbG9zZWRfcHJvZHVjdF9jYXJkJyxcbiAgICAgICAgICAgICAgICBjaGlsZHJlbjogW1xuICAgICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICBzZWxlY3RvcjogXCJkaXZbaWRePSdpbmZvJ11cIixcbiAgICAgICAgICAgICAgICAgICAgbmFtZTogJ29wZW5fcHJvZHVjdF9jYXJkJyxcbiAgICAgICAgICAgICAgICAgICAgY2xpY2thYmxlOiB0cnVlLFxuICAgICAgICAgICAgICAgICAgICB0ZXh0X2Zvcm1hdDogJ09wZW4gUHJvZHVjdCBDYXJkJ1xuICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgc2VsZWN0b3I6ICdmb3JtIHNwYW4uYS1idXR0b24taW5uZXInLFxuICAgICAgICAgICAgICAgICAgICBuYW1lOiAnYWRkX3RvX2NhcnQnLFxuICAgICAgICAgICAgICAgICAgICBjbGlja2FibGU6IHRydWUsXG4gICAgICAgICAgICAgICAgICAgIGFkZF90ZXh0OiB0cnVlXG4gICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICBzZWxlY3RvcjogJ2RpdltpZF49XCJzZWVCdXlpbmdPcHRpb25zV3JhcHBlclwiXSBhJyxcbiAgICAgICAgICAgICAgICAgICAgbmFtZTogJ3NlZV9idXlpbmdfb3B0aW9ucycsXG4gICAgICAgICAgICAgICAgICAgIGNsaWNrYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgICAgICAgICAgYWRkX3RleHQ6IHRydWVcbiAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBdXG4gICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICBzZWxlY3RvcjogJ2RpdltuYW1lPVwiYXgtcXNcIl0nLFxuICAgICAgICAgICAgICAgIGNoaWxkcmVuOiBbXG4gICAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgIHNlbGVjdG9yOiBcImJ1dHRvblthcmlhLWxhYmVsPSdEZWNyZWFzZSBxdWFudGl0eSBieSBvbmUnXVwiLFxuICAgICAgICAgICAgICAgICAgICBhZGRfdGV4dDogdHJ1ZSxcbiAgICAgICAgICAgICAgICAgICAgdGV4dF9qczogZnVuY3Rpb24gKGVsZW1lbnQpIHtcbiAgICAgICAgICAgICAgICAgICAgICBpZiAoZWxlbWVudC5oYXNBdHRyaWJ1dGUoJ2FyaWEtbGFiZWwnKSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGVsZW1lbnQuZ2V0QXR0cmlidXRlKCdhcmlhLWxhYmVsJylcbiAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgcmV0dXJuICcnXG4gICAgICAgICAgICAgICAgICAgIH0sXG5cbiAgICAgICAgICAgICAgICAgICAgY2xpY2thYmxlOiB0cnVlLFxuICAgICAgICAgICAgICAgICAgICBuYW1lOiAnZGVjcmVhc2VfcXVhbnRpdHlfYnlfb25lJ1xuICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgc2VsZWN0b3I6IFwiZGl2W3JvbGU9J3NwaW5idXR0b24nXVwiLFxuICAgICAgICAgICAgICAgICAgICBhZGRfdGV4dDogdHJ1ZSxcbiAgICAgICAgICAgICAgICAgICAgdGV4dF9mb3JtYXQ6ICdDdXJyZW50IFF1YW50aXR5OiB7fSdcbiAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgIHNlbGVjdG9yOiBcImJ1dHRvblthcmlhLWxhYmVsPSdJbmNyZWFzZSBxdWFudGl0eSBieSBvbmUnXVwiLFxuICAgICAgICAgICAgICAgICAgICBhZGRfdGV4dDogdHJ1ZSxcbiAgICAgICAgICAgICAgICAgICAgdGV4dF9qczogZnVuY3Rpb24gKGVsZW1lbnQpIHtcbiAgICAgICAgICAgICAgICAgICAgICBpZiAoZWxlbWVudC5oYXNBdHRyaWJ1dGUoJ2FyaWEtbGFiZWwnKSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGVsZW1lbnQuZ2V0QXR0cmlidXRlKCdhcmlhLWxhYmVsJylcbiAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgcmV0dXJuICcnXG4gICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgIGNsaWNrYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgICAgICAgICAgbmFtZTogJ2luY3JlYXNlX3F1YW50aXR5X2J5X29uZSdcbiAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBdXG4gICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICBzZWxlY3RvcjogXCJkaXZbaWRePSdleHBhbmRlZEltYWdlJ11cIixcbiAgICAgICAgICAgICAgICBuYW1lOiAnY2xvc2VfcHJvZHVjdF9jYXJkJyxcbiAgICAgICAgICAgICAgICBjbGlja2FibGU6IHRydWUsXG4gICAgICAgICAgICAgICAgYWRkX3RleHQ6IHRydWUsXG4gICAgICAgICAgICAgICAgdGV4dF9mb3JtYXQ6ICdDbG9zZSBQcm9kdWN0IENhcmQnXG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIF1cbiAgICAgICAgICB9XG4gICAgICAgIF0sXG4gICAgICAgIGdlbmVyYXRlX21ldGFkYXRhOiAoZW0pID0+IHtcbiAgICAgICAgICBjb25zdCBhc2luRW0gPSBlbS5xdWVyeVNlbGVjdG9yKFwiZGl2W2lkXj0nY2xvc2VkQ2FyZCddIGRpdltpZF49J2luZm8nXVwiKVxuICAgICAgICAgIGNvbnN0IGFzaW4gPSBhc2luRW0/LmdldEF0dHJpYnV0ZSgnZGF0YS1hc2luJylcbiAgICAgICAgICBjb25zdCBwcmljZUVtID0gZW0ucXVlcnlTZWxlY3RvcihcbiAgICAgICAgICAgICdkaXZbaWRePVwiY2xvc2VkQ2FyZFwiXSBkaXZbaWRePVwiaW5mb1wiXSBzcGFuW2NsYXNzKj1cInByaWNlQmxvY2tXaXRoTWFyZ2luUmlnaHRcIl0gc3Bhbi5hLXByaWNlID4gc3Bhbjpub3QoLmEtb2Zmc2NyZWVuKSdcbiAgICAgICAgICApXG4gICAgICAgICAgY29uc3QgcHJpY2UgPSBwcmljZUVtPy5pbm5lclRleHQ/LnJlcGxhY2UoL1tcXG5dL2csICcnKVxuICAgICAgICAgIGNvbnN0IHRpdGxlRW0gPSBlbS5xdWVyeVNlbGVjdG9yKFxuICAgICAgICAgICAgXCJkaXZbaWRePSdjbG9zZWRDYXJkJ10gYVtpZF49J3RpdGxlJ10gc3Bhbi5hLXRydW5jYXRlLWZ1bGxcIlxuICAgICAgICAgIClcbiAgICAgICAgICBjb25zdCB0aXRsZSA9IHRpdGxlRW0/LmlubmVyVGV4dFxuICAgICAgICAgIGNvbnN0IGRlbGl2ZXJ5RW0gPSBlbS5xdWVyeVNlbGVjdG9yKFxuICAgICAgICAgICAgJ2RpdltpZF49XCJjbG9zZWRDYXJkXCJdIGRpdltpZF49XCJpbmZvXCJdICN1ZG1EZWxpdmVyeU1lc3NhZ2VDb21wb25lbnQnXG4gICAgICAgICAgKVxuICAgICAgICAgIGNvbnN0IGRlbGl2ZXJ5ID0gZGVsaXZlcnlFbT8uaW5uZXJUZXh0LnJlcGxhY2UoL1tcXG5dL2csICcgJylcbiAgICAgICAgICByZXR1cm4geyBuYW1lOiAnYWN0aXZlX2l0ZW1zJywgZGF0YTogeyB0aXRsZSwgYXNpbiwgcHJpY2UsIGRlbGl2ZXJ5IH0gfVxuICAgICAgICB9XG4gICAgICB9LFxuICAgICAge1xuICAgICAgICBzZWxlY3RvcjogJ2RpdltpZF49XCJmZWF0dXJlZFwiXScsXG4gICAgICAgIG5hbWU6ICdmcm9tX3RleHQnLFxuICAgICAgICB0ZXh0X3NlbGVjdG9yOiBcImFbaWRePSd0aXRsZSddIHNwYW4uYS10cnVuY2F0ZS1mdWxsXCIsXG4gICAgICAgIGNoaWxkcmVuOiBbXG4gICAgICAgICAge1xuICAgICAgICAgICAgc2VsZWN0b3I6ICdkaXZbaWRePVwiZGV0YWlsQ29udGVudFdyYXBwZXJcIl0gZGl2W2lkXj1cImRldGFpbENvbnRlbnRcIl0nLFxuICAgICAgICAgICAgbmFtZTogJ2RldGFpbGVkX2NvbnRlbnQnLFxuICAgICAgICAgICAgY2hpbGRyZW46IFtcbiAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIHNlbGVjdG9yOiAnZGl2Omhhcyg+IGltZyknLFxuICAgICAgICAgICAgICAgIGNsaWNrYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgICAgICBuYW1lOiAncHJvZHVjdF9pbWFnZScsXG4gICAgICAgICAgICAgICAgYWRkX3RleHQ6IHRydWUsXG4gICAgICAgICAgICAgICAgdGV4dF9mb3JtYXQ6ICdQcm9kdWN0IEltYWdlJ1xuICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgc2VsZWN0b3I6IFwiYVtpZF49J3RpdGxlJ11cIixcbiAgICAgICAgICAgICAgICBjbGlja2FibGU6IHRydWUsXG4gICAgICAgICAgICAgICAgbmFtZTogJ3Byb2R1Y3RfdGl0bGUnLFxuICAgICAgICAgICAgICAgIGFkZF90ZXh0OiB0cnVlLFxuICAgICAgICAgICAgICAgIHRleHRfc2VsZWN0b3I6ICdzcGFuLmEtdHJ1bmNhdGUtZnVsbCdcbiAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIHNlbGVjdG9yOiBcImRpdltjbGFzcyo9J211bHRpT2ZmZXJQaWxsQ29udGFpbmVyJ10gYVwiLFxuICAgICAgICAgICAgICAgIGNsaWNrYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgICAgICBuYW1lOiAnZnJvbV90ZXh0JyxcbiAgICAgICAgICAgICAgICBhZGRfdGV4dDogdHJ1ZVxuICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgc2VsZWN0b3I6XG4gICAgICAgICAgICAgICAgICBcImRpdltkYXRhLWJ1eWluZ29wdGlvbnR5cGU9J05FVyddLCBkaXZbY2xhc3MqPSdhc2luRGV0YWlsSW5mb0NvbHVtbnMnXTpoYXMoaW5wdXRbbmFtZT0nc3VibWl0LmFkZFRvQ2FydCddXCIsXG4gICAgICAgICAgICAgICAgbmFtZTogJ29uZV90aW1lX3B1cmNoYXNlJyxcbiAgICAgICAgICAgICAgICBjaGlsZHJlbjogW1xuICAgICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICBzZWxlY3RvcjpcbiAgICAgICAgICAgICAgICAgICAgICAnc3BhbltjbGFzcyo9XCJwcmljZUJsb2NrV2l0aE1hcmdpblJpZ2h0XCJdIHNwYW4uYS1wcmljZSA+IHNwYW46bm90KC5hLW9mZnNjcmVlbiknLFxuICAgICAgICAgICAgICAgICAgICBhZGRfdGV4dDogdHJ1ZSxcbiAgICAgICAgICAgICAgICAgICAgbmFtZTogJ3ByaWNlJ1xuICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgc2VsZWN0b3I6ICcjdWRtRGVsaXZlcnlNZXNzYWdlQ29tcG9uZW50JyxcbiAgICAgICAgICAgICAgICAgICAgYWRkX3RleHQ6IHRydWUsXG4gICAgICAgICAgICAgICAgICAgIG5hbWU6ICdkZWxpdmVyeSdcbiAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgIHNlbGVjdG9yOiAnZGl2W2NsYXNzKj1cImFjdGlvbkJ1dHRvbnNSb3dcIl0sIGRpdltjbGFzcyo9XCJhc2luRGV0YWlsQWN0aW9uc1Jvd1wiXScsXG4gICAgICAgICAgICAgICAgICAgIG5hbWU6ICdidXR0b25zJyxcbiAgICAgICAgICAgICAgICAgICAgY2hpbGRyZW46IFtcbiAgICAgICAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgICAgICBzZWxlY3RvcjogJ2lucHV0W25hbWU9XCJzdWJtaXQuYWRkVG9DYXJ0XCJdJyxcbiAgICAgICAgICAgICAgICAgICAgICAgIGFkZF90ZXh0OiB0cnVlLFxuICAgICAgICAgICAgICAgICAgICAgICAgbmFtZTogJ2FkZF90b19jYXJ0JyxcbiAgICAgICAgICAgICAgICAgICAgICAgIGNsaWNrYWJsZTogdHJ1ZVxuICAgICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICAgICAgc2VsZWN0b3I6ICdpbnB1dFtpZF49XCJidXktbm93XCJdJyxcbiAgICAgICAgICAgICAgICAgICAgICAgIGFkZF90ZXh0OiB0cnVlLFxuICAgICAgICAgICAgICAgICAgICAgICAgbmFtZTogJ2J1eV9ub3cnLFxuICAgICAgICAgICAgICAgICAgICAgICAgY2xpY2thYmxlOiB0cnVlXG4gICAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgICAgICBzZWxlY3RvcjogJ2RpdltpZF49XCJmZWVkYmFja0J1dHRvblNlY3Rpb25cIl0gaW5wdXQnLFxuICAgICAgICAgICAgICAgICAgICAgICAgYWRkX3RleHQ6IHRydWUsXG4gICAgICAgICAgICAgICAgICAgICAgICBuYW1lOiAncmVtb3ZlX2l0ZW0nLFxuICAgICAgICAgICAgICAgICAgICAgICAgY2xpY2thYmxlOiB0cnVlXG4gICAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgICAgICBzZWxlY3RvcjogJ2RpdltuYW1lPVwiYXgtcXNcIl0nLFxuICAgICAgICAgICAgICAgICAgICAgICAgY2hpbGRyZW46IFtcbiAgICAgICAgICAgICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNlbGVjdG9yOiBcImJ1dHRvblthcmlhLWxhYmVsPSdEZWNyZWFzZSBxdWFudGl0eSBieSBvbmUnXVwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGFkZF90ZXh0OiB0cnVlLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRleHRfanM6IGZ1bmN0aW9uIChlbGVtZW50KSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoZWxlbWVudC5oYXNBdHRyaWJ1dGUoJ2FyaWEtbGFiZWwnKSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gZWxlbWVudC5nZXRBdHRyaWJ1dGUoJ2FyaWEtbGFiZWwnKVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuICcnXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfSxcblxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNsaWNrYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBuYW1lOiAnZGVjcmVhc2VfcXVhbnRpdHlfYnlfb25lJ1xuICAgICAgICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgc2VsZWN0b3I6IFwiZGl2W3JvbGU9J3NwaW5idXR0b24nXVwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGFkZF90ZXh0OiB0cnVlLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRleHRfZm9ybWF0OiAnQ3VycmVudCBRdWFudGl0eToge30nXG4gICAgICAgICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBzZWxlY3RvcjogXCJidXR0b25bYXJpYS1sYWJlbD0nSW5jcmVhc2UgcXVhbnRpdHkgYnkgb25lJ11cIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBhZGRfdGV4dDogdHJ1ZSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0ZXh0X2pzOiBmdW5jdGlvbiAoZWxlbWVudCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGVsZW1lbnQuaGFzQXR0cmlidXRlKCdhcmlhLWxhYmVsJykpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGVsZW1lbnQuZ2V0QXR0cmlidXRlKCdhcmlhLWxhYmVsJylcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiAnJ1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY2xpY2thYmxlOiB0cnVlLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5hbWU6ICdpbmNyZWFzZV9xdWFudGl0eV9ieV9vbmUnXG4gICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIF1cbiAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIF1cbiAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBdLFxuICAgICAgICAgICAgICAgIGdlbmVyYXRlX21ldGFkYXRhOiAoZW0pID0+IHtcbiAgICAgICAgICAgICAgICAgIGxldCBhc2luRW0gPSBlbS5wYXJlbnRFbGVtZW50Py5wYXJlbnRFbGVtZW50XG4gICAgICAgICAgICAgICAgICBsZXQgYXNpbiA9IGFzaW5FbT8uZ2V0QXR0cmlidXRlKCdkYXRhLWFzaW4nKVxuICAgICAgICAgICAgICAgICAgaWYgKGFzaW4gPT09IG51bGwpIHtcbiAgICAgICAgICAgICAgICAgICAgbGV0IGFzaW5FbSA9IGVtLnBhcmVudEVsZW1lbnRcbiAgICAgICAgICAgICAgICAgICAgbGV0IGFzaW4gPSBhc2luRW0/LmdldEF0dHJpYnV0ZSgnZGF0YS1hc2luJylcbiAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgIGNvbnN0IHByaWNlRW0gPSBlbS5xdWVyeVNlbGVjdG9yKFxuICAgICAgICAgICAgICAgICAgICAnc3BhbltjbGFzcyo9XCJwcmljZUJsb2NrV2l0aE1hcmdpblJpZ2h0XCJdIHNwYW4uYS1wcmljZSA+IHNwYW46bm90KC5hLW9mZnNjcmVlbiknXG4gICAgICAgICAgICAgICAgICApXG4gICAgICAgICAgICAgICAgICBjb25zdCBwcmljZSA9IHByaWNlRW0/LmlubmVyVGV4dD8ucmVwbGFjZSgvW1xcbl0vZywgJycpXG4gICAgICAgICAgICAgICAgICBjb25zdCB0aXRsZUVtID0gZW0ucGFyZW50RWxlbWVudD8ucGFyZW50RWxlbWVudD8ucXVlcnlTZWxlY3RvcihcbiAgICAgICAgICAgICAgICAgICAgXCJhW2lkXj0ndGl0bGUnXSBzcGFuLmEtdHJ1bmNhdGUtZnVsbFwiXG4gICAgICAgICAgICAgICAgICApXG4gICAgICAgICAgICAgICAgICBjb25zdCB0aXRsZSA9IHRpdGxlRW0/LmlubmVyVGV4dFxuICAgICAgICAgICAgICAgICAgY29uc3QgdXJsRW0gPSBlbS5wYXJlbnRFbGVtZW50Py5wYXJlbnRFbGVtZW50Py5xdWVyeVNlbGVjdG9yKFwiYVtpZF49J3RpdGxlJ11cIilcbiAgICAgICAgICAgICAgICAgIGNvbnN0IHVybCA9IHVybEVtPy5nZXRBdHRyaWJ1dGUoJ2hyZWYnKVxuICAgICAgICAgICAgICAgICAgY29uc3QgZGVsaXZlcnlFbSA9IGVtLnF1ZXJ5U2VsZWN0b3IoJyN1ZG1EZWxpdmVyeU1lc3NhZ2VDb21wb25lbnQnKVxuICAgICAgICAgICAgICAgICAgY29uc3QgZGVsaXZlcnkgPSBkZWxpdmVyeUVtPy5pbm5lclRleHQucmVwbGFjZSgvW1xcbl0vZywgJyAnKVxuICAgICAgICAgICAgICAgICAgcmV0dXJuIHsgbmFtZTogJ2FjdGl2ZV9pdGVtcycsIGRhdGE6IHsgdGl0bGUsIGFzaW4sIHByaWNlLCB1cmwsIGRlbGl2ZXJ5IH0gfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIHNlbGVjdG9yOiBcImRpdltkYXRhLWJ1eWluZ29wdGlvbnR5cGU9J1NOUyddLCBkaXZbY2xhc3MqPSdzbnNVcHNlbGxCbG9ja0NvbnRhaW5lciddXCIsXG4gICAgICAgICAgICAgICAgbmFtZTogJ3N1YnNjcmliZV9hbmRfc2F2ZScsXG4gICAgICAgICAgICAgICAgY2hpbGRyZW46IFtcbiAgICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgc2VsZWN0b3I6XG4gICAgICAgICAgICAgICAgICAgICAgJ3NwYW5bY2xhc3MqPVwicHJpY2VCbG9ja1dpdGhNYXJnaW5SaWdodFwiXSBzcGFuLmEtcHJpY2UgPiBzcGFuOm5vdCguYS1vZmZzY3JlZW4pJyxcbiAgICAgICAgICAgICAgICAgICAgYWRkX3RleHQ6IHRydWUsXG4gICAgICAgICAgICAgICAgICAgIG5hbWU6ICdwcmljZSdcbiAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgIHNlbGVjdG9yOiAnI3VkbURlbGl2ZXJ5TWVzc2FnZUNvbXBvbmVudCcsXG4gICAgICAgICAgICAgICAgICAgIGFkZF90ZXh0OiB0cnVlLFxuICAgICAgICAgICAgICAgICAgICBuYW1lOiAnZGVsaXZlcnknXG4gICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICBzZWxlY3RvcjogJ2RpdltjbGFzcyo9XCJhY3Rpb25CdXR0b25zUm93XCJdJyxcbiAgICAgICAgICAgICAgICAgICAgbmFtZTogJ2J1dHRvbnMnLFxuICAgICAgICAgICAgICAgICAgICBjaGlsZHJlbjogW1xuICAgICAgICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHNlbGVjdG9yOiAnaW5wdXRbbmFtZT1cInN1Ym1pdC5hZGRUb0NhcnRcIl0nLFxuICAgICAgICAgICAgICAgICAgICAgICAgYWRkX3RleHQ6IHRydWUsXG4gICAgICAgICAgICAgICAgICAgICAgICBuYW1lOiAnYWRkX3RvX2NhcnQnLFxuICAgICAgICAgICAgICAgICAgICAgICAgY2xpY2thYmxlOiB0cnVlXG4gICAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgICAgICBzZWxlY3RvcjogJ3NwYW5bY2xhc3MqPVwic25zQnV0dG9uXCJdIGlucHV0JyxcbiAgICAgICAgICAgICAgICAgICAgICAgIGFkZF90ZXh0OiB0cnVlLFxuICAgICAgICAgICAgICAgICAgICAgICAgbmFtZTogJ3N1YnNjcmliZV9hbmRfc2F2ZScsXG4gICAgICAgICAgICAgICAgICAgICAgICBjbGlja2FibGU6IHRydWVcbiAgICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHNlbGVjdG9yOiAnZGl2W2lkXj1cImZlZWRiYWNrQnV0dG9uU2VjdGlvblwiXSBpbnB1dCcsXG4gICAgICAgICAgICAgICAgICAgICAgICBhZGRfdGV4dDogdHJ1ZSxcbiAgICAgICAgICAgICAgICAgICAgICAgIG5hbWU6ICdyZW1vdmVfaXRlbScsXG4gICAgICAgICAgICAgICAgICAgICAgICBjbGlja2FibGU6IHRydWVcbiAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIF1cbiAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgIHNlbGVjdG9yOiAnc3BhbltjbGFzcyo9XCJzdWJzY3JpcHRpb25CdXR0b25cIl0nLFxuICAgICAgICAgICAgICAgICAgICBhZGRfdGV4dDogdHJ1ZSxcbiAgICAgICAgICAgICAgICAgICAgbmFtZTogJ3NldF91cF9zdWJzY3JpcHRpb24nLFxuICAgICAgICAgICAgICAgICAgICBjbGlja2FibGU6IHRydWVcbiAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBdLFxuICAgICAgICAgICAgICAgIGdlbmVyYXRlX21ldGFkYXRhOiAoZW0pID0+IHtcbiAgICAgICAgICAgICAgICAgIGxldCBhc2luRW0gPSBlbS5wYXJlbnRFbGVtZW50Py5wYXJlbnRFbGVtZW50XG4gICAgICAgICAgICAgICAgICBsZXQgYXNpbiA9IGFzaW5FbT8uZ2V0QXR0cmlidXRlKCdkYXRhLWFzaW4nKVxuICAgICAgICAgICAgICAgICAgaWYgKGFzaW4gPT09IG51bGwpIHtcbiAgICAgICAgICAgICAgICAgICAgYXNpbkVtID0gZW0ucXVlcnlTZWxlY3RvcignaW5wdXRbZGF0YS1taXgtb3BlcmF0aW9ucz1cInNuc01vZGFsSGFuZGxlclwiXScpXG4gICAgICAgICAgICAgICAgICAgIGFzaW4gPSBhc2luRW0/LmdldEF0dHJpYnV0ZSgnZGF0YS1hc2luJylcbiAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgIGNvbnN0IHByaWNlRW0gPSBlbS5xdWVyeVNlbGVjdG9yKFxuICAgICAgICAgICAgICAgICAgICAnc3BhbltjbGFzcyo9XCJwcmljZUJsb2NrV2l0aE1hcmdpblJpZ2h0XCJdIHNwYW4uYS1wcmljZSA+IHNwYW46bm90KC5hLW9mZnNjcmVlbiknXG4gICAgICAgICAgICAgICAgICApXG4gICAgICAgICAgICAgICAgICBjb25zdCBwcmljZSA9IHByaWNlRW0/LmlubmVyVGV4dD8ucmVwbGFjZSgvW1xcbl0vZywgJycpXG4gICAgICAgICAgICAgICAgICBjb25zdCB0aXRsZUVtID0gZW0ucGFyZW50RWxlbWVudD8ucGFyZW50RWxlbWVudD8ucXVlcnlTZWxlY3RvcihcbiAgICAgICAgICAgICAgICAgICAgXCJhW2lkXj0ndGl0bGUnXSBzcGFuLmEtdHJ1bmNhdGUtZnVsbFwiXG4gICAgICAgICAgICAgICAgICApXG4gICAgICAgICAgICAgICAgICBjb25zdCB0aXRsZSA9IHRpdGxlRW0/LmlubmVyVGV4dFxuICAgICAgICAgICAgICAgICAgY29uc3QgdXJsRW0gPSBlbS5wYXJlbnRFbGVtZW50Py5wYXJlbnRFbGVtZW50Py5xdWVyeVNlbGVjdG9yKFwiYVtpZF49J3RpdGxlJ11cIilcbiAgICAgICAgICAgICAgICAgIGNvbnN0IHVybCA9IHVybEVtPy5nZXRBdHRyaWJ1dGUoJ2hyZWYnKVxuICAgICAgICAgICAgICAgICAgY29uc3QgZGVsaXZlcnlFbSA9IGVtLnF1ZXJ5U2VsZWN0b3IoJyN1ZG1EZWxpdmVyeU1lc3NhZ2VDb21wb25lbnQnKVxuICAgICAgICAgICAgICAgICAgY29uc3QgZGVsaXZlcnkgPSBkZWxpdmVyeUVtPy5pbm5lclRleHQucmVwbGFjZSgvW1xcbl0vZywgJyAnKVxuICAgICAgICAgICAgICAgICAgcmV0dXJuIHsgbmFtZTogJ2FjdGl2ZV9pdGVtcycsIGRhdGE6IHsgdGl0bGUsIGFzaW4sIHByaWNlLCB1cmwsIGRlbGl2ZXJ5IH0gfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgXVxuICAgICAgICAgIH0sXG4gICAgICAgICAge1xuICAgICAgICAgICAgc2VsZWN0b3I6IFwiZGl2W2lkXj0nZGV0YWlsLXZpZXctc2ltaWxhci1pdGVtcyddXCIsXG4gICAgICAgICAgICBuYW1lOiAnc2ltaWxhcl9pdGVtcycsXG4gICAgICAgICAgICBjaGlsZHJlbjogW1xuICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgc2VsZWN0b3I6ICdsaS5hLWNhcm91c2VsLWNhcmQnLFxuICAgICAgICAgICAgICAgIG5hbWU6ICdmcm9tX3RleHQnLFxuICAgICAgICAgICAgICAgIHRleHRfc2VsZWN0b3I6IFwiYVtpZF49J3RpdGxlJ10gc3Bhbi5hLXRydW5jYXRlLWZ1bGxcIixcbiAgICAgICAgICAgICAgICBjaGlsZHJlbjogW1xuICAgICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICBzZWxlY3RvcjogJ2Rpdi5hLWltYWdlLWNvbnRhaW5lcjpoYXMoPiBpbWcpJyxcbiAgICAgICAgICAgICAgICAgICAgY2xpY2thYmxlOiB0cnVlLFxuICAgICAgICAgICAgICAgICAgICBuYW1lOiAncHJvZHVjdF9pbWFnZScsXG4gICAgICAgICAgICAgICAgICAgIGFkZF90ZXh0OiB0cnVlLFxuICAgICAgICAgICAgICAgICAgICB0ZXh0X2Zvcm1hdDogJ1Byb2R1Y3QgSW1hZ2UnXG4gICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICBzZWxlY3RvcjogXCJhW2lkXj0ndGl0bGUnXVwiLFxuICAgICAgICAgICAgICAgICAgICBjbGlja2FibGU6IHRydWUsXG4gICAgICAgICAgICAgICAgICAgIG5hbWU6ICdwcm9kdWN0X3RpdGxlJyxcbiAgICAgICAgICAgICAgICAgICAgYWRkX3RleHQ6IHRydWUsXG4gICAgICAgICAgICAgICAgICAgIHRleHRfc2VsZWN0b3I6ICdzcGFuLmEtdHJ1bmNhdGUtZnVsbCdcbiAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgIHNlbGVjdG9yOlxuICAgICAgICAgICAgICAgICAgICAgICdzcGFuW2NsYXNzKj1cInByaWNlQmxvY2tXaXRoTWFyZ2luUmlnaHRcIl0gc3Bhbi5hLXByaWNlID4gc3Bhbjpub3QoLmEtb2Zmc2NyZWVuKScsXG4gICAgICAgICAgICAgICAgICAgIGFkZF90ZXh0OiB0cnVlLFxuICAgICAgICAgICAgICAgICAgICBuYW1lOiAncHJpY2UnXG4gICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICBzZWxlY3RvcjogJyN1ZG1EZWxpdmVyeU1lc3NhZ2VDb21wb25lbnQnLFxuICAgICAgICAgICAgICAgICAgICBhZGRfdGV4dDogdHJ1ZSxcbiAgICAgICAgICAgICAgICAgICAgbmFtZTogJ2RlbGl2ZXJ5J1xuICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgc2VsZWN0b3I6XG4gICAgICAgICAgICAgICAgICAgICAgJ2lucHV0W25hbWU9XCJzdWJtaXQuYWRkVG9DYXJ0XCJdLCBpbnB1dFtuYW1lXj1cImF0ZmNTaGltXCJdLCBidXR0b25bYXJpYS1sYWJlbD1cIkFkZCB0byBDYXJ0LiBDbGljayB0byBjaGFuZ2UgcXVhbnRpdHlcIl0nLFxuICAgICAgICAgICAgICAgICAgICBhZGRfdGV4dDogdHJ1ZSxcbiAgICAgICAgICAgICAgICAgICAgbmFtZTogJ2FkZF90b19jYXJ0JyxcbiAgICAgICAgICAgICAgICAgICAgY2xpY2thYmxlOiB0cnVlXG4gICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICBzZWxlY3RvcjogJ2RpdltpZF49XCJzZWVCdXlpbmdPcHRpb25zV3JhcHBlclwiXSBhJyxcbiAgICAgICAgICAgICAgICAgICAgbmFtZTogJ3NlZV9idXlpbmdfb3B0aW9ucycsXG4gICAgICAgICAgICAgICAgICAgIGNsaWNrYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgICAgICAgICAgYWRkX3RleHQ6IHRydWVcbiAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgIHNlbGVjdG9yOiAnZGl2W25hbWU9XCJheC1xc1wiXScsXG4gICAgICAgICAgICAgICAgICAgIGNoaWxkcmVuOiBbXG4gICAgICAgICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICAgICAgc2VsZWN0b3I6IFwiYnV0dG9uW2FyaWEtbGFiZWw9J0RlY3JlYXNlIHF1YW50aXR5IGJ5IG9uZSddXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICBhZGRfdGV4dDogdHJ1ZSxcbiAgICAgICAgICAgICAgICAgICAgICAgIHRleHRfanM6IGZ1bmN0aW9uIChlbGVtZW50KSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChlbGVtZW50Lmhhc0F0dHJpYnV0ZSgnYXJpYS1sYWJlbCcpKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGVsZW1lbnQuZ2V0QXR0cmlidXRlKCdhcmlhLWxhYmVsJylcbiAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gJydcbiAgICAgICAgICAgICAgICAgICAgICAgIH0sXG5cbiAgICAgICAgICAgICAgICAgICAgICAgIGNsaWNrYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgICAgICAgICAgICAgIG5hbWU6ICdkZWNyZWFzZV9xdWFudGl0eV9ieV9vbmUnXG4gICAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgICAgICBzZWxlY3RvcjogXCJkaXZbcm9sZT0nc3BpbmJ1dHRvbiddXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICBhZGRfdGV4dDogdHJ1ZSxcbiAgICAgICAgICAgICAgICAgICAgICAgIHRleHRfZm9ybWF0OiAnQ3VycmVudCBRdWFudGl0eToge30nXG4gICAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgICAgICBzZWxlY3RvcjogXCJidXR0b25bYXJpYS1sYWJlbD0nSW5jcmVhc2UgcXVhbnRpdHkgYnkgb25lJ11cIixcbiAgICAgICAgICAgICAgICAgICAgICAgIGFkZF90ZXh0OiB0cnVlLFxuICAgICAgICAgICAgICAgICAgICAgICAgdGV4dF9qczogZnVuY3Rpb24gKGVsZW1lbnQpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGVsZW1lbnQuaGFzQXR0cmlidXRlKCdhcmlhLWxhYmVsJykpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gZWxlbWVudC5nZXRBdHRyaWJ1dGUoJ2FyaWEtbGFiZWwnKVxuICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiAnJ1xuICAgICAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgICAgIGNsaWNrYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgICAgICAgICAgICAgIG5hbWU6ICdpbmNyZWFzZV9xdWFudGl0eV9ieV9vbmUnXG4gICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBdXG4gICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICBzZWxlY3RvcjogJ2Rpdi5xcy13aWRnZXQtY29udGFpbmVyJyxcbiAgICAgICAgICAgICAgICAgICAgY2hpbGRyZW46IFtcbiAgICAgICAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgICAgICBzZWxlY3RvcjogXCJpbnB1dFthcmlhLWxhYmVsPSdSZW1vdmUnXVwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgYWRkX3RleHQ6IHRydWUsXG4gICAgICAgICAgICAgICAgICAgICAgICB0ZXh0X2pzOiBmdW5jdGlvbiAoZWxlbWVudCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoZWxlbWVudC5oYXNBdHRyaWJ1dGUoJ2FyaWEtbGFiZWwnKSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBlbGVtZW50LmdldEF0dHJpYnV0ZSgnYXJpYS1sYWJlbCcpXG4gICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuICcnXG4gICAgICAgICAgICAgICAgICAgICAgICB9LFxuXG4gICAgICAgICAgICAgICAgICAgICAgICBjbGlja2FibGU6IHRydWUsXG4gICAgICAgICAgICAgICAgICAgICAgICBuYW1lOiAnZGVjcmVhc2VfcXVhbnRpdHlfYnlfb25lJ1xuICAgICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICAgICAgc2VsZWN0b3I6ICdkaXYucXMtd2lkZ2V0LWRyb3Bkb3duLWZsZXgtd3JhcHBlciBidXR0b24nLFxuICAgICAgICAgICAgICAgICAgICAgICAgYWRkX3RleHQ6IHRydWUsXG4gICAgICAgICAgICAgICAgICAgICAgICBjbGlja2FibGU6IHRydWUsXG4gICAgICAgICAgICAgICAgICAgICAgICBuYW1lOiAnZHJvcF9kb3duX2xpc3QnLFxuICAgICAgICAgICAgICAgICAgICAgICAgdGV4dF9mb3JtYXQ6ICdDdXJyZW50IFF1YW50aXR5OiB7fSdcbiAgICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHNlbGVjdG9yOlxuICAgICAgICAgICAgICAgICAgICAgICAgICAnZGl2LnFzLXdpZGdldC1kcm9wZG93bi13cmFwcGVyIHNwYW5bZGF0YS1hY3Rpb249XCJxcy13aWRnZXQtZHJvcGRvd24tZGVjbFwiXScsXG4gICAgICAgICAgICAgICAgICAgICAgICBhZGRfdGV4dDogdHJ1ZSxcbiAgICAgICAgICAgICAgICAgICAgICAgIGNsaWNrYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgICAgICAgICAgICAgIHVzZV9yb290OiB0cnVlLFxuICAgICAgICAgICAgICAgICAgICAgICAgbmFtZTogJ2Zyb21fdGV4dCcsXG4gICAgICAgICAgICAgICAgICAgICAgICB0ZXh0X2Zvcm1hdDogJ0Ryb3AgRG93biBPcHRpb24ge30nXG4gICAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgICAgICBzZWxlY3RvcjpcbiAgICAgICAgICAgICAgICAgICAgICAgICAgJ2RpdltpZF49XCJxcy13aWRnZXQtcXVhbnRpdHktY29udGFpbmVyLWF0ZmNcIl0gc3BhbltkYXRhLWFjdGlvbj1cInFzLXdpZGdldC1xdWFudGl0eS1jaGFuZ2VsaW5rLWRlY2xcIl0nLFxuICAgICAgICAgICAgICAgICAgICAgICAgYWRkX3RleHQ6IHRydWUsXG4gICAgICAgICAgICAgICAgICAgICAgICBjbGlja2FibGU6IHRydWUsXG4gICAgICAgICAgICAgICAgICAgICAgICB1c2Vfcm9vdDogdHJ1ZSxcbiAgICAgICAgICAgICAgICAgICAgICAgIG5hbWU6ICdmcm9tX3RleHQnXG4gICAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgICAgICBzZWxlY3RvcjpcbiAgICAgICAgICAgICAgICAgICAgICAgICAgJ2RpdltpZF49XCJxcy13aWRnZXQtc3VtbWFyeS1jb250YWluZXItYXRmY1wiXSBzcGFuW2lkXj1cInFzLXdpZGdldC1zdW1tYXJ5LWF0Yy1hdGZjXCJdJyxcbiAgICAgICAgICAgICAgICAgICAgICAgIGFkZF90ZXh0OiB0cnVlLFxuICAgICAgICAgICAgICAgICAgICAgICAgY2xpY2thYmxlOiB0cnVlLFxuICAgICAgICAgICAgICAgICAgICAgICAgdXNlX3Jvb3Q6IHRydWUsXG4gICAgICAgICAgICAgICAgICAgICAgICBuYW1lOiAnZnJvbV90ZXh0J1xuICAgICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICAgICAgc2VsZWN0b3I6IFwiaW5wdXRbYXJpYS1sYWJlbD0nQWRkJ11cIixcbiAgICAgICAgICAgICAgICAgICAgICAgIGFkZF90ZXh0OiB0cnVlLFxuICAgICAgICAgICAgICAgICAgICAgICAgdGV4dF9qczogZnVuY3Rpb24gKGVsZW1lbnQpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGVsZW1lbnQuaGFzQXR0cmlidXRlKCdhcmlhLWxhYmVsJykpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gZWxlbWVudC5nZXRBdHRyaWJ1dGUoJ2FyaWEtbGFiZWwnKVxuICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiAnJ1xuICAgICAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgICAgIGNsaWNrYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgICAgICAgICAgICAgIG5hbWU6ICdpbmNyZWFzZV9xdWFudGl0eV9ieV9vbmUnXG4gICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBdXG4gICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgXSxcbiAgICAgICAgICAgICAgICBnZW5lcmF0ZV9tZXRhZGF0YTogKGVtKSA9PiB7XG4gICAgICAgICAgICAgICAgICBjb25zdCBwYXJlbnRUaXRsZUVtID0gZW1cbiAgICAgICAgICAgICAgICAgICAgLmNsb3Nlc3QoJ2RpdltpZF49XCJmZWF0dXJlZFwiXScpXG4gICAgICAgICAgICAgICAgICAgID8ucXVlcnlTZWxlY3RvcihcbiAgICAgICAgICAgICAgICAgICAgICAnZGl2W2lkXj1cImRldGFpbENvbnRlbnRXcmFwcGVyXCJdIGFbaWRePVwidGl0bGVcIl0gc3Bhbi5hLXRydW5jYXRlLWZ1bGwnXG4gICAgICAgICAgICAgICAgICAgIClcbiAgICAgICAgICAgICAgICAgIGNvbnN0IHBhcmVudFRpdGxlID0gcGFyZW50VGl0bGVFbT8uaW5uZXJUZXh0XG4gICAgICAgICAgICAgICAgICAgID8udG9Mb3dlckNhc2UoKVxuICAgICAgICAgICAgICAgICAgICAucmVwbGFjZSgvW15cXHddKy9nLCAnXycpXG4gICAgICAgICAgICAgICAgICBjb25zdCBhc2luRW0gPSBlbS5xdWVyeVNlbGVjdG9yKCdkaXZbY2xhc3MqPVwiZGVsaWdodEZhY2VvdXRcIl0nKVxuICAgICAgICAgICAgICAgICAgY29uc3QgYXNpbiA9IGFzaW5FbT8uZ2V0QXR0cmlidXRlKCdkYXRhLWFzaW4nKVxuICAgICAgICAgICAgICAgICAgY29uc3QgcHJpY2VFbSA9IGVtLnF1ZXJ5U2VsZWN0b3IoXG4gICAgICAgICAgICAgICAgICAgICdzcGFuW2NsYXNzKj1cInByaWNlQmxvY2tXaXRoTWFyZ2luUmlnaHRcIl0gc3Bhbi5hLXByaWNlID4gc3Bhbjpub3QoLmEtb2Zmc2NyZWVuKSdcbiAgICAgICAgICAgICAgICAgIClcbiAgICAgICAgICAgICAgICAgIGNvbnN0IHByaWNlID0gcHJpY2VFbT8uaW5uZXJUZXh0Py5yZXBsYWNlKC9bXFxuXS9nLCAnJylcbiAgICAgICAgICAgICAgICAgIGNvbnN0IHRpdGxlRW0gPSBlbS5xdWVyeVNlbGVjdG9yKFwiYVtpZF49J3RpdGxlJ10gc3Bhbi5hLXRydW5jYXRlLWZ1bGxcIilcbiAgICAgICAgICAgICAgICAgIGNvbnN0IHRpdGxlID0gdGl0bGVFbT8uaW5uZXJUZXh0XG4gICAgICAgICAgICAgICAgICBjb25zdCB1cmxFbSA9IGVtLnF1ZXJ5U2VsZWN0b3IoXCJhW2lkXj0ndGl0bGUnXVwiKVxuICAgICAgICAgICAgICAgICAgY29uc3QgdXJsID0gdXJsRW0/LmdldEF0dHJpYnV0ZSgnaHJlZicpXG4gICAgICAgICAgICAgICAgICBjb25zdCBkZWxpdmVyeUVtID0gZW0ucXVlcnlTZWxlY3RvcignI3VkbURlbGl2ZXJ5TWVzc2FnZUNvbXBvbmVudCcpXG4gICAgICAgICAgICAgICAgICBjb25zdCBkZWxpdmVyeSA9IGRlbGl2ZXJ5RW0/LmlubmVyVGV4dC5yZXBsYWNlKC9bXFxuXS9nLCAnICcpXG4gICAgICAgICAgICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgICAgICAgICBuYW1lOiBwYXJlbnRUaXRsZSArICcuc2ltaWxhcl9pdGVtcycsXG4gICAgICAgICAgICAgICAgICAgIGRhdGE6IHsgdGl0bGUsIGFzaW4sIHByaWNlLCB1cmwsIGRlbGl2ZXJ5IH1cbiAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIF1cbiAgICAgICAgICB9XG4gICAgICAgIF1cbiAgICAgIH1cbiAgICBdXG4gIH1cbl1cblxuZXhwb3J0IGNvbnN0IHJlY2lwZXMgPSBbXG4gIHtcbiAgICBtYXRjaDogJy8nLFxuICAgIG1hdGNoX21ldGhvZDogJ3VybCcsXG4gICAgbWF0Y2hfd2l0aF9yZWY6IHRydWUsXG4gICAgc2VsZWN0b3I6ICdodG1sJyxcbiAgICBjaGlsZHJlbjogW1xuICAgICAge1xuICAgICAgICBzZWxlY3RvcjogJ2hlYWQnLFxuICAgICAgICBjaGlsZHJlbjogW1xuICAgICAgICAgIHtcbiAgICAgICAgICAgIHNlbGVjdG9yOiAndGl0bGUnLFxuICAgICAgICAgICAgYWRkX3RleHQ6IHRydWVcbiAgICAgICAgICB9XG4gICAgICAgIF1cbiAgICAgIH0sXG4gICAgICB7XG4gICAgICAgIHNlbGVjdG9yOiAnYm9keScsXG4gICAgICAgIGNoaWxkcmVuOiBbbmF2XVxuICAgICAgfVxuICAgIF1cbiAgfSxcbiAge1xuICAgIG1hdGNoOiAnL3MnLFxuICAgIG1hdGNoX21ldGhvZDogJ3VybCcsXG4gICAgc2VsZWN0b3I6ICdodG1sJyxcbiAgICBjaGlsZHJlbjogW1xuICAgICAge1xuICAgICAgICBzZWxlY3RvcjogJ2hlYWQnLFxuICAgICAgICBjaGlsZHJlbjogW1xuICAgICAgICAgIHtcbiAgICAgICAgICAgIHNlbGVjdG9yOiAndGl0bGUnLFxuICAgICAgICAgICAgYWRkX3RleHQ6IHRydWVcbiAgICAgICAgICB9XG4gICAgICAgIF1cbiAgICAgIH0sXG4gICAgICB7XG4gICAgICAgIHNlbGVjdG9yOiAnYm9keScsXG4gICAgICAgIGNoaWxkcmVuOiBbXG4gICAgICAgICAgbmF2LFxuICAgICAgICAgIHtcbiAgICAgICAgICAgIHNlbGVjdG9yOiAnI3MtcmVmaW5lbWVudHMnLFxuICAgICAgICAgICAgbmFtZTogJ3JlZmluZW1lbnRzJyxcbiAgICAgICAgICAgIGNoaWxkcmVuOiBbXG4gICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICBzZWxlY3RvcjogJyN0b3BSZWZpbmVtZW50c1xcXFwvMCcsXG4gICAgICAgICAgICAgICAgbmFtZTogJ3RvcF9yZWZpbmVtZW50cycsXG4gICAgICAgICAgICAgICAgYWRkX3RleHQ6ICd0cnVlJyxcbiAgICAgICAgICAgICAgICB0ZXh0X2Zvcm1hdDogJ1JlY2VudGx5IHVzZWQgZmlsdGVycycsXG4gICAgICAgICAgICAgICAgY2hpbGRyZW46IFtcbiAgICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgc2VsZWN0b3I6ICdsaScsXG4gICAgICAgICAgICAgICAgICAgIGFkZF90ZXh0OiB0cnVlLFxuICAgICAgICAgICAgICAgICAgICBuYW1lOiAnZnJvbV90ZXh0JyxcbiAgICAgICAgICAgICAgICAgICAgY2xpY2thYmxlOiB0cnVlLFxuICAgICAgICAgICAgICAgICAgICB0ZXh0X2pzOiBmdW5jdGlvbiAoZWxlbWVudCkge1xuICAgICAgICAgICAgICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBsZXQgdGV4dCA9ICcnXG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoIWVsZW1lbnQpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHRleHRcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IGFDaGlsZCA9IGVsZW1lbnQucXVlcnlTZWxlY3RvcignYS5hLWxpbmstbm9ybWFsLnMtbmF2aWdhdGlvbi1pdGVtJylcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChlbGVtZW50LmlubmVyVGV4dCAmJiBlbGVtZW50LmlubmVyVGV4dC50cmltKCkpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgdGV4dCArPSBlbGVtZW50LmlubmVyVGV4dC50cmltKClcbiAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGFDaGlsZCAmJiBhQ2hpbGQuaGFzQXR0cmlidXRlKCd0aXRsZScpKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdGV4dCArPSAnICdcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0ZXh0ICs9IGFDaGlsZC5nZXRBdHRyaWJ1dGUoJ3RpdGxlJylcbiAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgYUNoaWxkID0gZWxlbWVudC5xdWVyeVNlbGVjdG9yKCdhLmEtbGluay1ub3JtYWwucy1uYXZpZ2F0aW9uLWl0ZW0nKVxuICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoYUNoaWxkICYmIGFDaGlsZC5oYXNBdHRyaWJ1dGUoJ3RpdGxlJykpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0ZXh0ICs9IGFDaGlsZC5nZXRBdHRyaWJ1dGUoJ3RpdGxlJylcbiAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHRleHRcbiAgICAgICAgICAgICAgICAgICAgICB9IGNhdGNoIChlKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhlKVxuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuICcnXG4gICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICBjaGlsZHJlbjogW1xuICAgICAgICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHNlbGVjdG9yOiBcImlucHV0W3R5cGU9J2NoZWNrYm94J11cIlxuICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgXVxuICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIF1cbiAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIHNlbGVjdG9yOlxuICAgICAgICAgICAgICAgICAgJ2Rpdi5hLXNlY3Rpb24uYS1zcGFjaW5nLW5vbmU6bm90KDpoYXMoI24tdGl0bGUpKTpoYXMoc3Bhbi5hLXNpemUtYmFzZS5hLWNvbG9yLWJhc2UucHVpcy1ib2xkLXdlaWdodC10ZXh0KTpoYXModWwgc3Bhbi5hLWRlY2xhcmF0aXZlID4gc3BhbiA+IGxpKTpub3QoI3Jldmlld3NSZWZpbmVtZW50cyk6bm90KCNkZXBhcnRtZW50cyk6bm90KCNwcmljZVJlZmluZW1lbnRzKTpub3QoI2ZpbHRlcnMpJyxcbiAgICAgICAgICAgICAgICBuYW1lOiAnZnJvbV90ZXh0JyxcbiAgICAgICAgICAgICAgICB0ZXh0X3NlbGVjdG9yOiAnc3Bhbi5hLXNpemUtYmFzZS5hLWNvbG9yLWJhc2UucHVpcy1ib2xkLXdlaWdodC10ZXh0JyxcbiAgICAgICAgICAgICAgICBjaGlsZHJlbjogcmVmaW5lbWVudF9vcHRpb25cbiAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIHNlbGVjdG9yOiAnI2RlcGFydG1lbnRzJyxcbiAgICAgICAgICAgICAgICBuYW1lOiAnZGVwYXJ0bWVudHMnLFxuICAgICAgICAgICAgICAgIGFkZF90ZXh0OiB0cnVlLFxuICAgICAgICAgICAgICAgIHRleHRfZm9ybWF0OiAnRGVwYXJ0bWVudCcsXG4gICAgICAgICAgICAgICAgY2hpbGRyZW46IFtcbiAgICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgc2VsZWN0b3I6ICdsaSBhJyxcbiAgICAgICAgICAgICAgICAgICAgYWRkX3RleHQ6IHRydWUsXG4gICAgICAgICAgICAgICAgICAgIG5hbWU6ICdmcm9tX3RleHQnLFxuICAgICAgICAgICAgICAgICAgICBjbGlja2FibGU6IHRydWUsXG4gICAgICAgICAgICAgICAgICAgIGdlbmVyYXRlX21ldGFkYXRhOiAoZW0pID0+IHtcbiAgICAgICAgICAgICAgICAgICAgICBjb25zdCBzZWxlY3RlZCA9IGVtPy5nZXRBdHRyaWJ1dGUoJ2FyaWEtY3VycmVudCcpXG4gICAgICAgICAgICAgICAgICAgICAgY29uc3QgdGl0bGUgPSBlbT8uaW5uZXJUZXh0XG4gICAgICAgICAgICAgICAgICAgICAgY29uc3QgdXJsID0gZW0/LmdldEF0dHJpYnV0ZSgnaHJlZicpXG4gICAgICAgICAgICAgICAgICAgICAgaWYgKHNlbGVjdGVkICYmIHNlbGVjdGVkID09ICd0cnVlJykge1xuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgbmFtZTogJ3JlZmluZW1lbnRzLmRlcGFydG1lbnRzJyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgZGF0YTogeyB0aXRsZSwgc2VsZWN0ZWQ6IHRydWUsIHVybCB9XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgIG5hbWU6ICdyZWZpbmVtZW50cy5kZXBhcnRtZW50cycsXG4gICAgICAgICAgICAgICAgICAgICAgICAgIGRhdGE6IHsgdGl0bGUsIHNlbGVjdGVkOiBmYWxzZSwgdXJsIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBdXG4gICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICBzZWxlY3RvcjogJyNyZXZpZXdzUmVmaW5lbWVudHMnLFxuICAgICAgICAgICAgICAgIG5hbWU6ICdyZXZpZXdzX3JlZmluZW1lbnRzJyxcbiAgICAgICAgICAgICAgICBhZGRfdGV4dDogdHJ1ZSxcbiAgICAgICAgICAgICAgICB0ZXh0X2Zvcm1hdDogJ0N1c3RvbWVyIFJldmlld3MnLFxuICAgICAgICAgICAgICAgIGNoaWxkcmVuOiBbXG4gICAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgIHNlbGVjdG9yOiAnYS5zLW5hdmlnYXRpb24tY2xlYXItbGluaycsXG4gICAgICAgICAgICAgICAgICAgIGFkZF90ZXh0OiB0cnVlLFxuICAgICAgICAgICAgICAgICAgICBuYW1lOiAnY2xlYXJfc2VsZWN0aW9uJyxcbiAgICAgICAgICAgICAgICAgICAgY2xpY2thYmxlOiB0cnVlXG4gICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICBzZWxlY3RvcjogXCJsaSBhW2FyaWEtY3VycmVudD0ndHJ1ZSddXCIsXG4gICAgICAgICAgICAgICAgICAgIGFkZF90ZXh0OiB0cnVlLFxuICAgICAgICAgICAgICAgICAgICBuYW1lOiAnZnJvbV90ZXh0JyxcbiAgICAgICAgICAgICAgICAgICAgY2xpY2thYmxlOiB0cnVlLFxuICAgICAgICAgICAgICAgICAgICAvLyB0ZXh0X2Zvcm1hdDogJ0NsZWFyIE9wdGlvbiB7fScsXG4gICAgICAgICAgICAgICAgICAgIGdlbmVyYXRlX21ldGFkYXRhOiAoZW0pID0+IHtcbiAgICAgICAgICAgICAgICAgICAgICBjb25zdCB0aXRsZSA9IGVtPy5pbm5lclRleHQ/LnJlcGxhY2UoL1xcbi9nLCAnICcpXG4gICAgICAgICAgICAgICAgICAgICAgY29uc3QgdXJsID0gZW0/LmdldEF0dHJpYnV0ZSgnaHJlZicpXG4gICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHsgbmFtZTogJ3JlZmluZW1lbnRzLnJldmlld3MnLCBkYXRhOiB7IHRpdGxlLCBzZWxlY3RlZDogdHJ1ZSwgdXJsIH0gfVxuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICBzZWxlY3RvcjogXCJsaSBhW2FyaWEtY3VycmVudD0nZmFsc2UnXVwiLFxuICAgICAgICAgICAgICAgICAgICBhZGRfdGV4dDogdHJ1ZSxcbiAgICAgICAgICAgICAgICAgICAgbmFtZTogJ2Zyb21fdGV4dCcsXG4gICAgICAgICAgICAgICAgICAgIGNsaWNrYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgICAgICAgICAgZ2VuZXJhdGVfbWV0YWRhdGE6IChlbSkgPT4ge1xuICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IHRpdGxlID0gZW0/LmlubmVyVGV4dD8ucmVwbGFjZSgvXFxuL2csICcgJylcbiAgICAgICAgICAgICAgICAgICAgICBjb25zdCB1cmwgPSBlbT8uZ2V0QXR0cmlidXRlKCdocmVmJylcbiAgICAgICAgICAgICAgICAgICAgICByZXR1cm4geyBuYW1lOiAncmVmaW5lbWVudHMucmV2aWV3cycsIGRhdGE6IHsgdGl0bGUsIHNlbGVjdGVkOiBmYWxzZSwgdXJsIH0gfVxuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgXVxuICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgc2VsZWN0b3I6ICcjcHJpY2VSZWZpbmVtZW50cycsXG4gICAgICAgICAgICAgICAgbmFtZTogJ3ByaWNlX3JlZmluZW1lbnRzJyxcbiAgICAgICAgICAgICAgICBjaGlsZHJlbjogW1xuICAgICAgICAgICAgICAgICAgLy8gMiBjYXNlczogc2VsZWN0aW9uIC8gc2xpZGVyXG4gICAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgIHNlbGVjdG9yOiAnI3BfMzYtdGl0bGUsIGRpdi5zZi1yZWZpbmVtZW50LWhlYWRpbmcgc3BhbicsXG4gICAgICAgICAgICAgICAgICAgIGFkZF90ZXh0OiB0cnVlLFxuICAgICAgICAgICAgICAgICAgICBuYW1lOiAncHJpY2VfaGVhZGluZydcbiAgICAgICAgICAgICAgICAgIH0sXG5cbiAgICAgICAgICAgICAgICAgIC8vIGNhc2UgMTogc2VsZWN0aW9uXG4gICAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgIHNlbGVjdG9yOiBcImRpdlthcmlhLWxhYmVsbGVkYnk9J3BfMzYtdGl0bGUnXSA+IGFcIixcbiAgICAgICAgICAgICAgICAgICAgYWRkX3RleHQ6IHRydWUsXG4gICAgICAgICAgICAgICAgICAgIG5hbWU6ICdjbGVhcl9wcmljZV9zZWxlY3Rpb24nLFxuICAgICAgICAgICAgICAgICAgICBjbGlja2FibGU6IHRydWVcbiAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgIHNlbGVjdG9yOiBcInVsW2FyaWEtbGFiZWxsZWRieT0ncF8zNi10aXRsZSddIGFbYXJpYS1jdXJyZW50PSd0cnVlJ11cIixcbiAgICAgICAgICAgICAgICAgICAgYWRkX3RleHQ6IHRydWUsXG4gICAgICAgICAgICAgICAgICAgIG5hbWU6ICdmcm9tX3RleHQnLFxuICAgICAgICAgICAgICAgICAgICBjbGlja2FibGU6IHRydWUsXG4gICAgICAgICAgICAgICAgICAgIC8vIHRleHRfZm9ybWF0OiAnQ2xlYXIgT3B0aW9uIHt9JyxcbiAgICAgICAgICAgICAgICAgICAgZ2VuZXJhdGVfbWV0YWRhdGE6IChlbSkgPT4ge1xuICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IHRpdGxlID0gZW0/LmlubmVyVGV4dFxuICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IHVybCA9IGVtPy5nZXRBdHRyaWJ1dGUoJ2hyZWYnKVxuICAgICAgICAgICAgICAgICAgICAgIHJldHVybiB7IG5hbWU6ICdyZWZpbmVtZW50cy5wcmljZScsIGRhdGE6IHsgdGl0bGUsIHNlbGVjdGVkOiB0cnVlLCB1cmwgfSB9XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgIHNlbGVjdG9yOiBcInVsW2FyaWEtbGFiZWxsZWRieT0ncF8zNi10aXRsZSddIGFbYXJpYS1jdXJyZW50PSdmYWxzZSddXCIsXG4gICAgICAgICAgICAgICAgICAgIGFkZF90ZXh0OiB0cnVlLFxuICAgICAgICAgICAgICAgICAgICBuYW1lOiAnZnJvbV90ZXh0JyxcbiAgICAgICAgICAgICAgICAgICAgY2xpY2thYmxlOiB0cnVlLFxuICAgICAgICAgICAgICAgICAgICBnZW5lcmF0ZV9tZXRhZGF0YTogKGVtKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgICAgY29uc3QgdGl0bGUgPSBlbT8uaW5uZXJUZXh0XG4gICAgICAgICAgICAgICAgICAgICAgY29uc3QgdXJsID0gZW0/LmdldEF0dHJpYnV0ZSgnaHJlZicpXG4gICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHsgbmFtZTogJ3JlZmluZW1lbnRzLnByaWNlJywgZGF0YTogeyB0aXRsZSwgc2VsZWN0ZWQ6IGZhbHNlLCB1cmwgfSB9XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgIH0sXG5cbiAgICAgICAgICAgICAgICAgIC8vIGNhc2UgMjogc2xpZGVyXG4gICAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgIHNlbGVjdG9yOiAnZGl2LnNmLXJhbmdlLXNsaWRlci1yb3c6bnRoLW9mLXR5cGUoMSknLFxuICAgICAgICAgICAgICAgICAgICBhZGRfdGV4dDogdHJ1ZSxcbiAgICAgICAgICAgICAgICAgICAgZ2VuZXJhdGVfbWV0YWRhdGE6IChlbSkgPT4ge1xuICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IHJhbmdlID0gZW0/LmlubmVyVGV4dD8ucmVwbGFjZSgvXFxuL2csICcnKVxuICAgICAgICAgICAgICAgICAgICAgIHJldHVybiB7IG5hbWU6ICdyZWZpbmVtZW50cy5wcmljZScsIGRhdGE6IHsgdGl0bGU6ICdwcmljZV9yYW5nZScsIHJhbmdlIH0gfVxuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICBzZWxlY3RvcjogJ2Rpdi5zZi1yYW5nZS1zbGlkZXItcm93Om50aC1vZi10eXBlKDIpIGRpdi5zLWxvd2VyLWJvdW5kIGlucHV0JyxcbiAgICAgICAgICAgICAgICAgICAgbmFtZTogJ3ByaWNlX21pbl92YWx1ZScsXG4gICAgICAgICAgICAgICAgICAgIGFkZF90ZXh0OiB0cnVlLFxuICAgICAgICAgICAgICAgICAgICAvLyB0ZXh0X2pzOiAoZWxlbWVudCkgPT4ge1xuICAgICAgICAgICAgICAgICAgICAvLyAgIGNvbnN0IHRleHQgPSBlbGVtZW50LmdldEF0dHJpYnV0ZShcImFyaWEtdmFsdWV0ZXh0XCIpXG4gICAgICAgICAgICAgICAgICAgIC8vICAgY29uc29sZS5sb2codGV4dClcbiAgICAgICAgICAgICAgICAgICAgLy8gICBpZiAodGV4dCkge1xuICAgICAgICAgICAgICAgICAgICAvLyAgICAgcmV0dXJuIHRleHQ7XG4gICAgICAgICAgICAgICAgICAgIC8vICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgLy8gICAgIHJldHVybiBcIlwiO1xuICAgICAgICAgICAgICAgICAgICAvLyAgIH1cbiAgICAgICAgICAgICAgICAgICAgLy8gfSxcbiAgICAgICAgICAgICAgICAgICAgY2xpY2thYmxlOiB0cnVlLFxuICAgICAgICAgICAgICAgICAgICBrZWVwX2F0dHI6IFsnbWluJywgJ21heCcsICdzdGVwJ10sXG4gICAgICAgICAgICAgICAgICAgIG92ZXJyaWRlX2F0dHI6IHtcbiAgICAgICAgICAgICAgICAgICAgICBzdGVwX3ZhbHVlczogKGVtKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgICAgICBjb25zdCBmb3JtRW0gPSBlbS5jbG9zZXN0KCdmb3JtJylcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChmb3JtRW0pIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgcHJvcCA9IGZvcm1FbS5nZXRBdHRyaWJ1dGUoJ2RhdGEtc2xpZGVyLXByb3BzJylcbiAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHByb3ApIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb25zdCBzdGVwcyA9IEpTT04ucGFyc2UocHJvcCkuc3RlcExhYmVsc1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBzdGVwc1xuICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gJydcbiAgICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICAgIGN1cnJlbnRfdmFsdWU6IChlbSkgPT4ge1xuICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgdmFsdWUgPSBOdW1iZXIucGFyc2VJbnQoZW0uZ2V0QXR0cmlidXRlKCd2YWx1ZScpKVxuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHZhbHVlICE9PSBudWxsKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IGZvcm1FbSA9IGVtLmNsb3Nlc3QoJ2Zvcm0nKVxuICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoZm9ybUVtKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgcHJvcCA9IGZvcm1FbS5nZXRBdHRyaWJ1dGUoJ2RhdGEtc2xpZGVyLXByb3BzJylcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAocHJvcCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY29uc3Qgc3RlcHMgPSBKU09OLnBhcnNlKHByb3ApLnN0ZXBMYWJlbHNcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBzdGVwc1t2YWx1ZV1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiAnJ1xuICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgc2VsZWN0b3I6ICdkaXYuc2YtcmFuZ2Utc2xpZGVyLXJvdzpudGgtb2YtdHlwZSgyKSBkaXYucy11cHBlci1ib3VuZCBpbnB1dCcsXG4gICAgICAgICAgICAgICAgICAgIG5hbWU6ICdwcmljZV9tYXhfdmFsdWUnLFxuICAgICAgICAgICAgICAgICAgICBhZGRfdGV4dDogdHJ1ZSxcbiAgICAgICAgICAgICAgICAgICAgLy8gdGV4dF9qczogKGVsZW1lbnQpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgLy8gICBjb25zdCB0ZXh0ID0gZWxlbWVudC5nZXRBdHRyaWJ1dGUoXCJhcmlhLXZhbHVldGV4dFwiKVxuICAgICAgICAgICAgICAgICAgICAvLyAgIGlmICh0ZXh0KSB7XG4gICAgICAgICAgICAgICAgICAgIC8vICAgICByZXR1cm4gdGV4dDtcbiAgICAgICAgICAgICAgICAgICAgLy8gICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAvLyAgICAgcmV0dXJuIFwiXCI7XG4gICAgICAgICAgICAgICAgICAgIC8vICAgfVxuICAgICAgICAgICAgICAgICAgICAvLyB9LFxuICAgICAgICAgICAgICAgICAgICBjbGlja2FibGU6IHRydWUsXG4gICAgICAgICAgICAgICAgICAgIGtlZXBfYXR0cjogWydtaW4nLCAnbWF4JywgJ3N0ZXAnXSxcbiAgICAgICAgICAgICAgICAgICAgb3ZlcnJpZGVfYXR0cjoge1xuICAgICAgICAgICAgICAgICAgICAgIHN0ZXBfdmFsdWVzOiAoZW0pID0+IHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IGZvcm1FbSA9IGVtLmNsb3Nlc3QoJ2Zvcm0nKVxuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGZvcm1FbSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICBjb25zdCBwcm9wID0gZm9ybUVtLmdldEF0dHJpYnV0ZSgnZGF0YS1zbGlkZXItcHJvcHMnKVxuICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAocHJvcCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IHN0ZXBzID0gSlNPTi5wYXJzZShwcm9wKS5zdGVwTGFiZWxzXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHN0ZXBzXG4gICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiAnJ1xuICAgICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgICAgY3VycmVudF92YWx1ZTogKGVtKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgICAgICBjb25zdCB2YWx1ZSA9IE51bWJlci5wYXJzZUludChlbS5nZXRBdHRyaWJ1dGUoJ3ZhbHVlJykpXG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAodmFsdWUgIT09IG51bGwpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgZm9ybUVtID0gZW0uY2xvc2VzdCgnZm9ybScpXG4gICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChmb3JtRW0pIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb25zdCBwcm9wID0gZm9ybUVtLmdldEF0dHJpYnV0ZSgnZGF0YS1zbGlkZXItcHJvcHMnKVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChwcm9wKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb25zdCBzdGVwcyA9IEpTT04ucGFyc2UocHJvcCkuc3RlcExhYmVsc1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHN0ZXBzW3ZhbHVlXVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuICcnXG4gICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICBzZWxlY3RvcjogJ2Rpdi5zZi1zdWJtaXQtcmFuZ2UtYnV0dG9uIGlucHV0JyxcbiAgICAgICAgICAgICAgICAgICAgbmFtZTogJ3N1Ym1pdF9wcmljZV9yYW5nZScsXG4gICAgICAgICAgICAgICAgICAgIGFkZF90ZXh0OiB0cnVlLFxuICAgICAgICAgICAgICAgICAgICB0ZXh0X2Zvcm1hdDogJ0dvJyxcbiAgICAgICAgICAgICAgICAgICAgY2xpY2thYmxlOiB0cnVlXG4gICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICBzZWxlY3RvcjogJ2Rpdi5zZi1yZXNldC1yYW5nZS1saW5rIGEnLFxuICAgICAgICAgICAgICAgICAgICBuYW1lOiAncmVzZXRfcHJpY2Vfc2VsZWN0aW9uJyxcbiAgICAgICAgICAgICAgICAgICAgYWRkX3RleHQ6IHRydWUsXG4gICAgICAgICAgICAgICAgICAgIGNsaWNrYWJsZTogdHJ1ZVxuICAgICAgICAgICAgICAgICAgfSxcblxuICAgICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICBzZWxlY3RvcjogJyNwX25fZGVhbF90eXBlLXRpdGxlJyxcbiAgICAgICAgICAgICAgICAgICAgYWRkX3RleHQ6IHRydWUsXG4gICAgICAgICAgICAgICAgICAgIG5hbWU6ICdkZWFsc19kaXNjb3VudHNfaGVhZGluZydcbiAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgIHNlbGVjdG9yOiBcImRpdlthcmlhLWxhYmVsbGVkYnk9J3Bfbl9kZWFsX3R5cGUtdGl0bGUnXSA+IGFcIixcbiAgICAgICAgICAgICAgICAgICAgYWRkX3RleHQ6IHRydWUsXG4gICAgICAgICAgICAgICAgICAgIG5hbWU6ICdjbGVhcl9kZWFsc19kaXNjb3VudF9zZWxlY3Rpb24nLFxuICAgICAgICAgICAgICAgICAgICBjbGlja2FibGU6IHRydWVcbiAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgIHNlbGVjdG9yOiBcInVsW2FyaWEtbGFiZWxsZWRieT0ncF9uX2RlYWxfdHlwZS10aXRsZSddIGFbYXJpYS1jdXJyZW50PSd0cnVlJ11cIixcbiAgICAgICAgICAgICAgICAgICAgYWRkX3RleHQ6IHRydWUsXG4gICAgICAgICAgICAgICAgICAgIG5hbWU6ICdmcm9tX3RleHQnLFxuICAgICAgICAgICAgICAgICAgICBjbGlja2FibGU6IHRydWUsXG4gICAgICAgICAgICAgICAgICAgIC8vIHRleHRfZm9ybWF0OiAnQ2xlYXIgT3B0aW9uIHt9JyxcbiAgICAgICAgICAgICAgICAgICAgZ2VuZXJhdGVfbWV0YWRhdGE6IChlbSkgPT4ge1xuICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IHRpdGxlID0gZW0/LmlubmVyVGV4dFxuICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IHVybCA9IGVtPy5nZXRBdHRyaWJ1dGUoJ2hyZWYnKVxuICAgICAgICAgICAgICAgICAgICAgIHJldHVybiB7IG5hbWU6ICdyZWZpbmVtZW50cy5wcmljZScsIGRhdGE6IHsgdGl0bGUsIHNlbGVjdGVkOiB0cnVlLCB1cmwgfSB9XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgIHNlbGVjdG9yOiBcInVsW2FyaWEtbGFiZWxsZWRieT0ncF9uX2RlYWxfdHlwZS10aXRsZSddIGFbYXJpYS1jdXJyZW50PSdmYWxzZSddXCIsXG4gICAgICAgICAgICAgICAgICAgIGFkZF90ZXh0OiB0cnVlLFxuICAgICAgICAgICAgICAgICAgICBuYW1lOiAnZnJvbV90ZXh0JyxcbiAgICAgICAgICAgICAgICAgICAgY2xpY2thYmxlOiB0cnVlLFxuICAgICAgICAgICAgICAgICAgICBnZW5lcmF0ZV9tZXRhZGF0YTogKGVtKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgICAgY29uc3QgdGl0bGUgPSBlbT8uaW5uZXJUZXh0XG4gICAgICAgICAgICAgICAgICAgICAgY29uc3QgdXJsID0gZW0/LmdldEF0dHJpYnV0ZSgnaHJlZicpXG4gICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHsgbmFtZTogJ3JlZmluZW1lbnRzLnByaWNlJywgZGF0YTogeyB0aXRsZSwgc2VsZWN0ZWQ6IGZhbHNlLCB1cmwgfSB9XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBdXG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIF1cbiAgICAgICAgICB9LFxuICAgICAgICAgIHtcbiAgICAgICAgICAgIHNlbGVjdG9yOiAnZGl2LnMtbWFpbi1zbG90LnMtcmVzdWx0LWxpc3Qucy1zZWFyY2gtcmVzdWx0cycsXG4gICAgICAgICAgICBuYW1lOiAnc2VhcmNoX3Jlc3VsdHMnLFxuICAgICAgICAgICAgY2hpbGRyZW46IFtcbiAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIHNlbGVjdG9yOiAnZGl2LkFkSG9sZGVyJyxcbiAgICAgICAgICAgICAgICBuYW1lOiAnYWRzJyxcbiAgICAgICAgICAgICAgICBjaGlsZHJlbjogW1xuICAgICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICBzZWxlY3RvcjogJ2RpdltkYXRhLWFzaW5dJyxcbiAgICAgICAgICAgICAgICAgICAgbmFtZTogJ2Zyb21fdGV4dCcsXG4gICAgICAgICAgICAgICAgICAgIGFkZF90ZXh0OiB0cnVlLFxuICAgICAgICAgICAgICAgICAgICBjbGlja2FibGU6IHRydWUsXG4gICAgICAgICAgICAgICAgICAgIHRleHRfanM6IChlbSkgPT4ge1xuICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IHRpdGxlRW0gPSBlbS5xdWVyeVNlbGVjdG9yKCdpbWcnKVxuICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IHRleHQgPSB0aXRsZUVtPy5nZXRBdHRyaWJ1dGUoJ2FsdCcpXG4gICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHRleHQudHJpbSgpIHx8ICcnXG4gICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgIGdlbmVyYXRlX21ldGFkYXRhOiAoZW0pID0+IHtcbiAgICAgICAgICAgICAgICAgICAgICBjb25zdCBhc2luRW0gPSBlbVxuICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IGFzaW4gPSBhc2luRW0/LmdldEF0dHJpYnV0ZSgnZGF0YS1hc2luJylcbiAgICAgICAgICAgICAgICAgICAgICBjb25zdCB0aXRsZUVtID0gZW0ucXVlcnlTZWxlY3RvcignaW1nJylcbiAgICAgICAgICAgICAgICAgICAgICBjb25zdCB0aXRsZSA9IHRpdGxlRW0/LmdldEF0dHJpYnV0ZSgnYWx0JylcbiAgICAgICAgICAgICAgICAgICAgICBjb25zdCB1cmxFbSA9IGVtLnF1ZXJ5U2VsZWN0b3IoXCJhW2RhdGEtdHlwZT0ncHJvZHVjdFRpdGxlJ11cIilcbiAgICAgICAgICAgICAgICAgICAgICBjb25zdCB1cmwgPSB1cmxFbT8uZ2V0QXR0cmlidXRlKCdocmVmJylcbiAgICAgICAgICAgICAgICAgICAgICByZXR1cm4geyBuYW1lOiAnYWRzJywgZGF0YTogeyB0aXRsZSwgYXNpbiwgdXJsIH0gfVxuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgXVxuICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgaW5zZXJ0X3NwbGl0X21hcmtlcjogdHJ1ZSxcbiAgICAgICAgICAgICAgICBpbnNlcnRfc3BsaXRfbWFya2VyX2V2ZXJ5OiA0LFxuICAgICAgICAgICAgICAgIHNlbGVjdG9yOiAnZGl2W2RhdGEtY29tcG9uZW50LXR5cGU9XCJzLXNlYXJjaC1yZXN1bHRcIl0nLFxuICAgICAgICAgICAgICAgIHRleHRfc2VsZWN0b3I6XG4gICAgICAgICAgICAgICAgICAnc3Bhbi5hLWNvbG9yLWJhc2UuYS10ZXh0LW5vcm1hbCwgaDIuYS1jb2xvci1iYXNlLmEtdGV4dC1ub3JtYWwgc3BhbicsXG4gICAgICAgICAgICAgICAgbmFtZTogJ2Zyb21fdGV4dCcsXG4gICAgICAgICAgICAgICAgY2xhc3M6ICdzZWFyY2gtcmVzdWx0JyxcbiAgICAgICAgICAgICAgICBjaGlsZHJlbjogW1xuICAgICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICBzZWxlY3RvcjpcbiAgICAgICAgICAgICAgICAgICAgICBcImRpdltkYXRhLWN5PSd0aXRsZS1yZWNpcGUnXSBhLmEtbGluay1ub3JtYWwucy1saW5rLXN0eWxlLmEtdGV4dC1ub3JtYWxcIixcbiAgICAgICAgICAgICAgICAgICAgYWRkX3RleHQ6IHRydWUsXG4gICAgICAgICAgICAgICAgICAgIGNsYXNzOiAncHJvZHVjdC1uYW1lJyxcbiAgICAgICAgICAgICAgICAgICAgY2xpY2thYmxlOiB0cnVlLFxuICAgICAgICAgICAgICAgICAgICBuYW1lOiAncHJvZHVjdF9uYW1lJ1xuICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgc2VsZWN0b3I6ICdkaXYucy1wcm9kdWN0LWltYWdlLWNvbnRhaW5lcicsXG4gICAgICAgICAgICAgICAgICAgIGFkZF90ZXh0OiB0cnVlLFxuICAgICAgICAgICAgICAgICAgICBuYW1lOiAncHJvZHVjdF9pbWFnZScsXG4gICAgICAgICAgICAgICAgICAgIGNsaWNrYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgICAgICAgICAgdGV4dF9mb3JtYXQ6ICdQcm9kdWN0IEltYWdlJ1xuICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgc2VsZWN0b3I6ICdkaXYucy1jb2xvci1zd2F0Y2gtY29udGFpbmVyJyxcbiAgICAgICAgICAgICAgICAgICAgbmFtZTogJ2F2YWlsYWJsZV9jb2xvcnMnLFxuICAgICAgICAgICAgICAgICAgICBjaGlsZHJlbjogW1xuICAgICAgICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHNlbGVjdG9yOiAnZGl2LnMtY29sb3Itc3dhdGNoLXBhZCcsXG4gICAgICAgICAgICAgICAgICAgICAgICBuYW1lOiAnZnJvbV90ZXh0JyxcbiAgICAgICAgICAgICAgICAgICAgICAgIGNsaWNrYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgICAgICAgICAgICAgIGFkZF90ZXh0OiB0cnVlLFxuICAgICAgICAgICAgICAgICAgICAgICAgdGV4dF9qczogKGVtKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IGFDaGlsZCA9IGVtLnF1ZXJ5U2VsZWN0b3IoJ2EnKVxuICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoYUNoaWxkKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGFDaGlsZC5nZXRBdHRyaWJ1dGUoJ2FyaWEtbGFiZWwnKSB8fCAnJ1xuICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiAnJ1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICAgICAgc2VsZWN0b3I6IFwiZGl2W2RhdGEtY3NhLWMtdHlwZT0nbGluayddIGFcIixcbiAgICAgICAgICAgICAgICAgICAgICAgIGRpcmVjdF9jaGlsZDogdHJ1ZSxcbiAgICAgICAgICAgICAgICAgICAgICAgIG5hbWU6ICdmcm9tX3RleHQnLFxuICAgICAgICAgICAgICAgICAgICAgICAgY2xpY2thYmxlOiB0cnVlLFxuICAgICAgICAgICAgICAgICAgICAgICAgYWRkX3RleHQ6IHRydWVcbiAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIF1cbiAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgIHNlbGVjdG9yOiAnZGl2LnMtdmFyaWF0aW9ucy1vcHRpb25zLWVsZXZhdGVkJyxcbiAgICAgICAgICAgICAgICAgICAgbmFtZTogJ29wdGlvbnMnLFxuICAgICAgICAgICAgICAgICAgICBhZGRfdGV4dDogdHJ1ZSxcbiAgICAgICAgICAgICAgICAgICAgY2xpY2thYmxlOiB0cnVlLFxuICAgICAgICAgICAgICAgICAgICBjbGlja19zZWxlY3RvcjogJ2EnXG4gICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICBzZWxlY3RvcjogXCJkaXZbZGF0YS1jeT0ncmV2aWV3cy1ibG9jayddXCIsXG4gICAgICAgICAgICAgICAgICAgIGNsYXNzOiAncHJvZHVjdC1yZXZpZXcnLFxuICAgICAgICAgICAgICAgICAgICBjaGlsZHJlbjogW1xuICAgICAgICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHNlbGVjdG9yOiAnc3Bhbi5hLWljb24tYWx0JyxcbiAgICAgICAgICAgICAgICAgICAgICAgIGFkZF90ZXh0OiB0cnVlLFxuICAgICAgICAgICAgICAgICAgICAgICAgY2xhc3M6ICdwcm9kdWN0LXJhdGluZydcbiAgICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHNlbGVjdG9yOiAnc3Bhbi5hLXNpemUtYmFzZS5zLXVuZGVybGluZS10ZXh0JyxcbiAgICAgICAgICAgICAgICAgICAgICAgIGFkZF90ZXh0OiB0cnVlLFxuICAgICAgICAgICAgICAgICAgICAgICAgdGV4dF9mb3JtYXQ6ICd7fSByZXZpZXdzJyxcbiAgICAgICAgICAgICAgICAgICAgICAgIGNsYXNzOiAncHJvZHVjdC1yYXRpbmctY291bnQnLFxuICAgICAgICAgICAgICAgICAgICAgICAgbmFtZTogJ3Byb2R1Y3RfcmF0aW5nX2NvdW50JyxcbiAgICAgICAgICAgICAgICAgICAgICAgIGNsaWNrYWJsZTogdHJ1ZVxuICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgXVxuICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgc2VsZWN0b3I6IFwiZGl2W2RhdGEtY3k9J3ByaWNlLXJlY2lwZSddXCIsXG4gICAgICAgICAgICAgICAgICAgIGNsYXNzOiAncHJvZHVjdC1wcmljZScsXG4gICAgICAgICAgICAgICAgICAgIGNoaWxkcmVuOiBbXG4gICAgICAgICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICAgICAgc2VsZWN0b3I6ICdhLmEtbGluay1ub3JtYWwgPiBzcGFuLmEtcHJpY2UgPiBzcGFuLmEtb2Zmc2NyZWVuJyxcbiAgICAgICAgICAgICAgICAgICAgICAgIGFkZF90ZXh0OiB0cnVlXG4gICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBdXG4gICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICBzZWxlY3RvcjogXCJkaXZbZGF0YS1jeT0nZGVsaXZlcnktcmVjaXBlJ11cIixcbiAgICAgICAgICAgICAgICAgICAgYWRkX3RleHQ6IHRydWUsXG4gICAgICAgICAgICAgICAgICAgIGNsYXNzOiAncHJvZHVjdC1kZWxpdmVyeSdcbiAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgIHNlbGVjdG9yOiBcImRpdltkYXRhLWN5PSdhZGQtdG8tY2FydCddIGJ1dHRvblwiLFxuICAgICAgICAgICAgICAgICAgICBhZGRfdGV4dDogdHJ1ZSxcbiAgICAgICAgICAgICAgICAgICAgY2xpY2thYmxlOiB0cnVlLFxuICAgICAgICAgICAgICAgICAgICBuYW1lOiAnYWRkX3RvX2NhcnQnXG4gICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICBzZWxlY3RvcjogXCJkaXZbZGF0YS1jc2EtYy1jb250ZW50LWlkPSdzLXNlYXJjaC1zZWUtZGV0YWlscy1idXR0b24nXSBhXCIsXG4gICAgICAgICAgICAgICAgICAgIGFkZF90ZXh0OiB0cnVlLFxuICAgICAgICAgICAgICAgICAgICBjbGlja2FibGU6IHRydWUsXG4gICAgICAgICAgICAgICAgICAgIG5hbWU6ICdzZWVfb3B0aW9ucydcbiAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgIHNlbGVjdG9yOiAnZGl2W25hbWU9XCJheC1xc1wiXScsXG4gICAgICAgICAgICAgICAgICAgIGNoaWxkcmVuOiBbXG4gICAgICAgICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICAgICAgc2VsZWN0b3I6IFwiYnV0dG9uW2FyaWEtbGFiZWw9J0RlY3JlYXNlIHF1YW50aXR5IGJ5IG9uZSddXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICBhZGRfdGV4dDogdHJ1ZSxcbiAgICAgICAgICAgICAgICAgICAgICAgIHRleHRfanM6IGZ1bmN0aW9uIChlbGVtZW50KSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChlbGVtZW50Lmhhc0F0dHJpYnV0ZSgnYXJpYS1sYWJlbCcpKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGVsZW1lbnQuZ2V0QXR0cmlidXRlKCdhcmlhLWxhYmVsJylcbiAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gJydcbiAgICAgICAgICAgICAgICAgICAgICAgIH0sXG5cbiAgICAgICAgICAgICAgICAgICAgICAgIGNsaWNrYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgICAgICAgICAgICAgIG5hbWU6ICdkZWNyZWFzZV9xdWFudGl0eV9ieV9vbmUnXG4gICAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgICAgICBzZWxlY3RvcjogXCJkaXZbcm9sZT0nc3BpbmJ1dHRvbiddXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICBhZGRfdGV4dDogdHJ1ZSxcbiAgICAgICAgICAgICAgICAgICAgICAgIHRleHRfZm9ybWF0OiAnQ3VycmVudCBRdWFudGl0eToge30nXG4gICAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgICAgICBzZWxlY3RvcjogXCJidXR0b25bYXJpYS1sYWJlbD0nSW5jcmVhc2UgcXVhbnRpdHkgYnkgb25lJ11cIixcbiAgICAgICAgICAgICAgICAgICAgICAgIGFkZF90ZXh0OiB0cnVlLFxuICAgICAgICAgICAgICAgICAgICAgICAgdGV4dF9qczogZnVuY3Rpb24gKGVsZW1lbnQpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGVsZW1lbnQuaGFzQXR0cmlidXRlKCdhcmlhLWxhYmVsJykpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gZWxlbWVudC5nZXRBdHRyaWJ1dGUoJ2FyaWEtbGFiZWwnKVxuICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiAnJ1xuICAgICAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgICAgIGNsaWNrYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgICAgICAgICAgICAgIG5hbWU6ICdpbmNyZWFzZV9xdWFudGl0eV9ieV9vbmUnXG4gICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBdXG4gICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgXSxcbiAgICAgICAgICAgICAgICBnZW5lcmF0ZV9tZXRhZGF0YTogKGVtKSA9PiB7XG4gICAgICAgICAgICAgICAgICBjb25zdCBhc2luID0gZW0uZ2V0QXR0cmlidXRlKCdkYXRhLWFzaW4nKVxuICAgICAgICAgICAgICAgICAgY29uc3QgcHJpY2VFbSA9IGVtLnF1ZXJ5U2VsZWN0b3IoXG4gICAgICAgICAgICAgICAgICAgIFwiZGl2W2RhdGEtY3k9J3ByaWNlLXJlY2lwZSddIGEuYS1saW5rLW5vcm1hbCA+IHNwYW4uYS1wcmljZSA+IHNwYW4uYS1vZmZzY3JlZW5cIlxuICAgICAgICAgICAgICAgICAgKVxuICAgICAgICAgICAgICAgICAgY29uc3QgcHJpY2UgPSBwcmljZUVtPy5pbm5lclRleHRcbiAgICAgICAgICAgICAgICAgIGNvbnN0IHRpdGxlRW0gPSBlbS5xdWVyeVNlbGVjdG9yKFxuICAgICAgICAgICAgICAgICAgICAnc3Bhbi5hLWNvbG9yLWJhc2UuYS10ZXh0LW5vcm1hbCwgaDIuYS1jb2xvci1iYXNlLmEtdGV4dC1ub3JtYWwgc3BhbidcbiAgICAgICAgICAgICAgICAgIClcbiAgICAgICAgICAgICAgICAgIGNvbnN0IHRpdGxlID0gdGl0bGVFbT8uaW5uZXJUZXh0XG4gICAgICAgICAgICAgICAgICBjb25zdCB1cmxFbSA9IGVtLnF1ZXJ5U2VsZWN0b3IoXG4gICAgICAgICAgICAgICAgICAgIFwiZGl2W2RhdGEtY3k9J3RpdGxlLXJlY2lwZSddIGEuYS1saW5rLW5vcm1hbC5zLWxpbmstc3R5bGUuYS10ZXh0LW5vcm1hbFwiXG4gICAgICAgICAgICAgICAgICApXG4gICAgICAgICAgICAgICAgICBjb25zdCB1cmwgPSB1cmxFbT8uZ2V0QXR0cmlidXRlKCdocmVmJylcbiAgICAgICAgICAgICAgICAgIGNvbnN0IGRlbGl2ZXJ5RW0gPSBlbS5xdWVyeVNlbGVjdG9yKFwiZGl2W2RhdGEtY3k9J2RlbGl2ZXJ5LXJlY2lwZSddXCIpXG4gICAgICAgICAgICAgICAgICBjb25zdCBkZWxpdmVyeSA9IGRlbGl2ZXJ5RW0/LmlubmVyVGV4dC5yZXBsYWNlKC9bXFxuXS9nLCAnICcpXG4gICAgICAgICAgICAgICAgICByZXR1cm4geyBuYW1lOiAnc2VhcmNoX3Jlc3VsdHMnLCBkYXRhOiB7IHRpdGxlLCBhc2luLCBwcmljZSwgdXJsLCBkZWxpdmVyeSB9IH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIF1cbiAgICAgICAgICB9LFxuICAgICAgICAgIHtcbiAgICAgICAgICAgIHNlbGVjdG9yOiAnc3Bhbi5zLXBhZ2luYXRpb24tc3RyaXAnLFxuICAgICAgICAgICAgbmFtZTogJ3BhZ2luYXRpb24nLFxuICAgICAgICAgICAgY2hpbGRyZW46IFtcbiAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIHNlbGVjdG9yOiAnLnMtcGFnaW5hdGlvbi1pdGVtJyxcbiAgICAgICAgICAgICAgICBhZGRfdGV4dDogdHJ1ZSxcbiAgICAgICAgICAgICAgICBuYW1lOiAnZnJvbV90ZXh0JyxcbiAgICAgICAgICAgICAgICBjbGlja2FibGU6IHRydWVcbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgXVxuICAgICAgICAgIH0sXG4gICAgICAgICAge1xuICAgICAgICAgICAgc2VsZWN0b3I6ICdkaXYuYS1wb3BvdmVyLXdyYXBwZXInLFxuICAgICAgICAgICAgbmFtZTogJ3BvcG92ZXInLFxuICAgICAgICAgICAgY2hpbGRyZW46IFtcbiAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIHNlbGVjdG9yOiAnaGVhZGVyLmEtcG9wb3Zlci1oZWFkZXIgYnV0dG9uJyxcbiAgICAgICAgICAgICAgICBhZGRfdGV4dDogdHJ1ZSxcbiAgICAgICAgICAgICAgICBjbGlja2FibGU6IHRydWUsXG4gICAgICAgICAgICAgICAgbmFtZTogJ2Nsb3NlJyxcbiAgICAgICAgICAgICAgICB0ZXh0X2Zvcm1hdDogJ0Nsb3NlJ1xuICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgc2VsZWN0b3I6ICdkaXYuYS1wb3BvdmVyLWlubmVyIGRpdi5wdWlzLWF0Yy1zaXplLXZhcmlhdGlvbicsXG4gICAgICAgICAgICAgICAgY2hpbGRyZW46IFtcbiAgICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgc2VsZWN0b3I6ICdkaXYuYS1yb3c6bnRoLW9mLXR5cGUoMSknLFxuICAgICAgICAgICAgICAgICAgICBkaXJlY3RfY2hpbGQ6IHRydWUsXG4gICAgICAgICAgICAgICAgICAgIGNoaWxkcmVuOiBbXG4gICAgICAgICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICAgICAgc2VsZWN0b3I6IFwic3BhbltkYXRhLWNvbXBvbmVudC10eXBlPSdzLXByb2R1Y3QtaW1hZ2UnXSBhXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICBuYW1lOiAncHJvZHVjdF9pbWFnZScsXG4gICAgICAgICAgICAgICAgICAgICAgICBhZGRfdGV4dDogdHJ1ZSxcbiAgICAgICAgICAgICAgICAgICAgICAgIGNsaWNrYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgICAgICAgICAgICAgIHRleHRfZm9ybWF0OiAnUHJvZHVjdCBJbWFnZSdcbiAgICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHNlbGVjdG9yOiAnZGl2LnB1aXMtc2l6ZS12YXJpYXRpb24tdGl0bGUgYScsXG4gICAgICAgICAgICAgICAgICAgICAgICBuYW1lOiAncHJvZHVjdF90aXRsZScsXG4gICAgICAgICAgICAgICAgICAgICAgICBhZGRfdGV4dDogdHJ1ZSxcbiAgICAgICAgICAgICAgICAgICAgICAgIGNsaWNrYWJsZTogdHJ1ZVxuICAgICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICAgICAgc2VsZWN0b3I6ICdkaXYucHVpcy1zaXplLXZhcmlhdGlvbi1wcm9kdWN0LXNwZWMnLFxuICAgICAgICAgICAgICAgICAgICAgICAgbmFtZTogJ3Byb2R1Y3Rfc3BlY2lmaWNhdGlvbicsXG4gICAgICAgICAgICAgICAgICAgICAgICBhZGRfdGV4dDogdHJ1ZSxcbiAgICAgICAgICAgICAgICAgICAgICAgIGNsaWNrYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgICAgICAgICAgICAgIGNsaWNrX3NlbGVjdG9yOiAnYSdcbiAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIF1cbiAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgIHNlbGVjdG9yOiAnZGl2LmEtcm93Om50aC1vZi10eXBlKDIpJyxcbiAgICAgICAgICAgICAgICAgICAgZGlyZWN0X2NoaWxkOiB0cnVlLFxuICAgICAgICAgICAgICAgICAgICBjaGlsZHJlbjogW1xuICAgICAgICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHNlbGVjdG9yOiAnZGl2LnB1aXMtc2l6ZS12YXJpYXRpb24tcHJvZHVjdC1vcHRpb25zJyxcbiAgICAgICAgICAgICAgICAgICAgICAgIG5hbWU6ICdmcm9tX3RleHQnLFxuICAgICAgICAgICAgICAgICAgICAgICAgdGV4dF9zZWxlY3RvcjogJ3NwYW4uYS1zaXplLWJhc2UuYS1jb2xvci1zZWNvbmRhcnknLFxuICAgICAgICAgICAgICAgICAgICAgICAgY2hpbGRyZW46IFtcbiAgICAgICAgICAgICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNlbGVjdG9yOiAnc3Bhbi5hLXNpemUtYmFzZS5hLWNvbG9yLXNlY29uZGFyeScsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgYWRkX3RleHQ6IHRydWVcbiAgICAgICAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNlbGVjdG9yOiAnc3Bhbi5hLWRyb3Bkb3duLXByb21wdCcsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgYWRkX3RleHQ6IHRydWVcbiAgICAgICAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNlbGVjdG9yOiAnc2VsZWN0JyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBuYW1lOiAnZHJvcF9kb3duX2xpc3QnXG4gICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIF1cbiAgICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHNlbGVjdG9yOiAnZGl2LnB1aXMtc2l6ZS12YXJpYXRpb24tcHJpY2UgYS5hLXRleHQtbm9ybWFsJyxcbiAgICAgICAgICAgICAgICAgICAgICAgIG5hbWU6ICdwcmljZScsXG4gICAgICAgICAgICAgICAgICAgICAgICBjbGlja2FibGU6IHRydWUsXG4gICAgICAgICAgICAgICAgICAgICAgICBhZGRfdGV4dDogdHJ1ZSxcbiAgICAgICAgICAgICAgICAgICAgICAgIHRleHRfc2VsZWN0b3I6IFwic3BhblthcmlhLWhpZGRlbj0ndHJ1ZSddXCJcbiAgICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHNlbGVjdG9yOiAnZGl2LnB1aXMtc2l6ZS12YXJpYXRpb24tZGVsaXZlcnknLFxuICAgICAgICAgICAgICAgICAgICAgICAgYWRkX3RleHQ6IHRydWUsXG4gICAgICAgICAgICAgICAgICAgICAgICBuYW1lOiAnZGVsaXZlcnknXG4gICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBdXG4gICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICBzZWxlY3RvcjogJ2Rpdi5hLXJvdzpudGgtb2YtdHlwZSgzKScsXG4gICAgICAgICAgICAgICAgICAgIGRpcmVjdF9jaGlsZDogdHJ1ZSxcbiAgICAgICAgICAgICAgICAgICAgY2hpbGRyZW46IFtcbiAgICAgICAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgICAgICBzZWxlY3RvcjogJ3NwYW4ucy1uby1qcy1oaWRlIGlucHV0JyxcbiAgICAgICAgICAgICAgICAgICAgICAgIG5hbWU6ICdjYW5jZWwnLFxuICAgICAgICAgICAgICAgICAgICAgICAgY2xpY2thYmxlOiB0cnVlLFxuICAgICAgICAgICAgICAgICAgICAgICAgYWRkX3RleHQ6IHRydWUsXG4gICAgICAgICAgICAgICAgICAgICAgICB0ZXh0X2Zvcm1hdDogJ0NhbmNlbCdcbiAgICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHNlbGVjdG9yOiAnZGl2LnB1aXMtYXRjYi1hZGQtY29udGFpbmVyIGJ1dHRvbicsXG4gICAgICAgICAgICAgICAgICAgICAgICBuYW1lOiAnYWRkX3RvX2NhcnQnLFxuICAgICAgICAgICAgICAgICAgICAgICAgY2xpY2thYmxlOiB0cnVlLFxuICAgICAgICAgICAgICAgICAgICAgICAgYWRkX3RleHQ6IHRydWVcbiAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIF1cbiAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBdXG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIF1cbiAgICAgICAgICB9XG4gICAgICAgIF1cbiAgICAgIH1cbiAgICBdXG4gIH0sXG4gIHtcbiAgICBtYXRjaDogJyNwcm9kdWN0VGl0bGUnLFxuICAgIG1hdGNoX3RleHQ6ICcnLFxuICAgIHNlbGVjdG9yOiAnaHRtbCcsXG4gICAgY2hpbGRyZW46IFtcbiAgICAgIHtcbiAgICAgICAgc2VsZWN0b3I6ICdoZWFkJyxcbiAgICAgICAgY2hpbGRyZW46IFtcbiAgICAgICAgICB7XG4gICAgICAgICAgICBzZWxlY3RvcjogJ3RpdGxlJyxcbiAgICAgICAgICAgIGFkZF90ZXh0OiB0cnVlXG4gICAgICAgICAgfVxuICAgICAgICBdXG4gICAgICB9LFxuICAgICAge1xuICAgICAgICBzZWxlY3RvcjogJ2JvZHknLFxuICAgICAgICBjaGlsZHJlbjogW1xuICAgICAgICAgIG5hdixcbiAgICAgICAgICB7XG4gICAgICAgICAgICBzZWxlY3RvcjogJyNjZW50ZXJDb2wnLFxuICAgICAgICAgICAgY2xhc3M6ICdwcm9kdWN0LWNhcmQnLFxuICAgICAgICAgICAgY2hpbGRyZW46IFtcbiAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIHNlbGVjdG9yOiAnI3RpdGxlJyxcbiAgICAgICAgICAgICAgICBhZGRfdGV4dDogdHJ1ZSxcbiAgICAgICAgICAgICAgICBrZWVwX2F0dHI6IFsnaWQnXSxcbiAgICAgICAgICAgICAgICBnZW5lcmF0ZV9tZXRhZGF0YTogKGVtKSA9PiB7XG4gICAgICAgICAgICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgICAgICAgICBuYW1lOiAncHJvZHVjdF9kZXRhaWxzJyxcbiAgICAgICAgICAgICAgICAgICAgZGF0YTogeyB0aXRsZTogZW0/LmlubmVyVGV4dCB8fCAnJyB9XG4gICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgc2VsZWN0b3I6ICcjYXZlcmFnZUN1c3RvbWVyUmV2aWV3cycsXG4gICAgICAgICAgICAgICAgY2xhc3M6ICdyZXZpZXcnLFxuICAgICAgICAgICAgICAgIGNoaWxkcmVuOiBbXG4gICAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgIHNlbGVjdG9yOiAnc3Bhbi5hLWljb24tYWx0JyxcbiAgICAgICAgICAgICAgICAgICAgYWRkX3RleHQ6IHRydWVcbiAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgIHNlbGVjdG9yOiAnI2FjckN1c3RvbWVyUmV2aWV3VGV4dCcsXG4gICAgICAgICAgICAgICAgICAgIGFkZF90ZXh0OiB0cnVlXG4gICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgXVxuICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgc2VsZWN0b3I6XG4gICAgICAgICAgICAgICAgICAnI2FwZXhfZGVza3RvcCA+IGRpdltkYXRhLWNzYS1jLXNsb3QtaWQ9XCJhcGV4X2RwX2NlbnRlcl9jb2x1bW5cIl0nICtcbiAgICAgICAgICAgICAgICAgICcgPiBkaXZbY2xhc3M9XCJvZmZlcnNDb25zaXN0ZW5jeUVuYWJsZWRcIl0gPiBkaXY6bm90KFtzdHlsZT1cImRpc3BsYXk6bm9uZTtcIl0pOm5vdChbc3R5bGU9XCJkaXNwbGF5OiBub25lO1wiXSkgJyArXG4gICAgICAgICAgICAgICAgICAnI2NvcmVQcmljZURpc3BsYXlfZGVza3RvcF9mZWF0dXJlX2RpdjpoYXMoI3Nucy1iYXNlLXByaWNlKSAjc25zLWJhc2UtcHJpY2Ugc3Bhbi5hLXByaWNlLmFvay1hbGlnbi1jZW50ZXIucmVpbnZlbnRQcmljZVByaWNlVG9QYXlNYXJnaW4ucHJpY2VUb1BheSwgJyArXG4gICAgICAgICAgICAgICAgICAnI2FwZXhfZGVza3RvcCA+IGRpdltkYXRhLWNzYS1jLXNsb3QtaWQ9XCJhcGV4X2RwX2NlbnRlcl9jb2x1bW5cIl0nICtcbiAgICAgICAgICAgICAgICAgICcgPiBkaXZbY2xhc3M9XCJvZmZlcnNDb25zaXN0ZW5jeUVuYWJsZWRcIl0gPiBkaXY6bm90KFtzdHlsZT1cImRpc3BsYXk6bm9uZTtcIl0pOm5vdChbc3R5bGU9XCJkaXNwbGF5OiBub25lO1wiXSkgJyArXG4gICAgICAgICAgICAgICAgICAnI2NvcmVQcmljZURpc3BsYXlfZGVza3RvcF9mZWF0dXJlX2Rpdjpub3QoOmhhcygjc25zLWJhc2UtcHJpY2UpKSBzcGFuLmEtcHJpY2UuYW9rLWFsaWduLWNlbnRlci5yZWludmVudFByaWNlUHJpY2VUb1BheU1hcmdpbi5wcmljZVRvUGF5LCAnICtcbiAgICAgICAgICAgICAgICAgICcjYXBleF9kZXNrdG9wID4gZGl2W2RhdGEtY3NhLWMtc2xvdC1pZD1cImFwZXhfZHBfY2VudGVyX2NvbHVtblwiXSA+IGRpdltkYXRhLWNzYS1jLWNvbnRlbnQtaWQ9XCJhcGV4X3dpdGhfcmlvX2N4XCJdICcgK1xuICAgICAgICAgICAgICAgICAgJyNjb3JlUHJpY2VEaXNwbGF5X2Rlc2t0b3BfZmVhdHVyZV9kaXYgc3Bhbi5hLXByaWNlLmFvay1hbGlnbi1jZW50ZXIucmVpbnZlbnRQcmljZVByaWNlVG9QYXlNYXJnaW4ucHJpY2VUb1BheScsXG4gICAgICAgICAgICAgICAgYWRkX3RleHQ6IHRydWUsXG4gICAgICAgICAgICAgICAgdGV4dF9mb3JtYXQ6ICdQcmljZToge30nLFxuICAgICAgICAgICAgICAgIGNsYXNzOiAncHJvZHVjdC1wcmljZScsXG4gICAgICAgICAgICAgICAgZ2VuZXJhdGVfbWV0YWRhdGE6IChlbSkgPT4ge1xuICAgICAgICAgICAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgICAgICAgICAgbmFtZTogJ3Byb2R1Y3RfZGV0YWlscycsXG4gICAgICAgICAgICAgICAgICAgIGRhdGE6IHsgcHJpY2U6IGVtPy5pbm5lclRleHQ/LnJlcGxhY2UoL1xcbi9nLCAnJykgfHwgJycgfVxuICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgdGV4dF9qczogKGVtKSA9PiB7XG4gICAgICAgICAgICAgICAgICByZXR1cm4gZW0/LmlubmVyVGV4dD8ucmVwbGFjZSgvXFxuL2csICcnKSB8fCAnJ1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIHNlbGVjdG9yOiAnI3R3aXN0ZXInLFxuICAgICAgICAgICAgICAgIGNsYXNzOiAncHJvZHVjdC1vcHRpb25zJyxcbiAgICAgICAgICAgICAgICBuYW1lOiAncHJvZHVjdF9vcHRpb25zJyxcbiAgICAgICAgICAgICAgICBjaGlsZHJlbjogW1xuICAgICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICBzZWxlY3RvcjogJ2Rpdi5hLXNlY3Rpb24nLFxuICAgICAgICAgICAgICAgICAgICB0ZXh0X3NlbGVjdG9yOiAnZGl2LmEtcm93OmhhcyhsYWJlbC5hLWZvcm0tbGFiZWwpID4gbGFiZWwuYS1mb3JtLWxhYmVsJyxcbiAgICAgICAgICAgICAgICAgICAgbmFtZTogJ2Zyb21fdGV4dCcsXG4gICAgICAgICAgICAgICAgICAgIGRpcmVjdF9jaGlsZDogdHJ1ZSxcbiAgICAgICAgICAgICAgICAgICAgZ2VuZXJhdGVfbWV0YWRhdGE6IChlbSkgPT4ge1xuICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IGxhYmVsID0gZW1cbiAgICAgICAgICAgICAgICAgICAgICAgIC5xdWVyeVNlbGVjdG9yKCdkaXYuYS1yb3c6aGFzKGxhYmVsLmEtZm9ybS1sYWJlbCkgbGFiZWwuYS1mb3JtLWxhYmVsJylcbiAgICAgICAgICAgICAgICAgICAgICAgID8uaW5uZXJIVE1MLnJlcGxhY2UoL1s6XFxuXS9nLCAnJylcbiAgICAgICAgICAgICAgICAgICAgICAgIC50cmltKClcbiAgICAgICAgICAgICAgICAgICAgICBsZXQgdmFsdWUgPSBlbS5xdWVyeVNlbGVjdG9yKFxuICAgICAgICAgICAgICAgICAgICAgICAgJ2Rpdi5hLXJvdzpoYXMobGFiZWwuYS1mb3JtLWxhYmVsKSBzcGFuLnNlbGVjdGlvbidcbiAgICAgICAgICAgICAgICAgICAgICApPy5pbm5lckhUTUxcbiAgICAgICAgICAgICAgICAgICAgICBpZiAodmFsdWUgPT09IHVuZGVmaW5lZCB8fCB2YWx1ZSA9PT0gJycpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IG9wdGlvbnMgPSBlbS5xdWVyeVNlbGVjdG9yKCdzZWxlY3QnKT8ucXVlcnlTZWxlY3RvckFsbCgnb3B0aW9uJylcbiAgICAgICAgICAgICAgICAgICAgICAgIC8vIGNvbnNvbGUubG9nKG9wdGlvbnMpO1xuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKG9wdGlvbnMpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgZm9yIChjb25zdCBvcHRpb24gb2Ygb3B0aW9ucykge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vIGNvbnNvbGUubG9nKG9wdGlvbik7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKG9wdGlvbiAmJiBvcHRpb24uZ2V0QXR0cmlidXRlKCdzZWxlY3RlZCcpICE9PSBudWxsKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YWx1ZSA9IG9wdGlvbi5pbm5lckhUTUwudHJpbSgpXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAvLyBjb25zb2xlLmxvZyh2YWx1ZSk7XG4gICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgIHJldHVybiB7IG5hbWU6ICdwcm9kdWN0X29wdGlvbnMnLCBkYXRhOiB7IGxhYmVsLCB2YWx1ZTogdmFsdWUudHJpbSgpIH0gfVxuICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICBjaGlsZHJlbjogW1xuICAgICAgICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHNlbGVjdG9yOiAnZGl2LmEtcm93OmhhcyhsYWJlbC5hLWZvcm0tbGFiZWwpJyxcbiAgICAgICAgICAgICAgICAgICAgICAgIGNoaWxkcmVuOiBbXG4gICAgICAgICAgICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBzZWxlY3RvcjogJ2xhYmVsLmEtZm9ybS1sYWJlbCcsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgYWRkX3RleHQ6IHRydWVcbiAgICAgICAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNlbGVjdG9yOiAnc3Bhbi5zZWxlY3Rpb24nLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGFkZF90ZXh0OiB0cnVlXG4gICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIF1cbiAgICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHNlbGVjdG9yOiAnc2VsZWN0JyxcbiAgICAgICAgICAgICAgICAgICAgICAgIGFkZF90ZXh0OiB0cnVlLFxuICAgICAgICAgICAgICAgICAgICAgICAgLy8gY2xpY2thYmxlOiB0cnVlLFxuICAgICAgICAgICAgICAgICAgICAgICAgbmFtZTogJ2Ryb3BfZG93bl9saXN0J1xuICAgICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICAgICAgc2VsZWN0b3I6ICd1bCcsXG4gICAgICAgICAgICAgICAgICAgICAgICBuYW1lOiAnYnV0dG9uX2xpc3QnLFxuICAgICAgICAgICAgICAgICAgICAgICAgY2hpbGRyZW46IFtcbiAgICAgICAgICAgICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNlbGVjdG9yOiAnbGkgYnV0dG9uJyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBhZGRfdGV4dDogdHJ1ZSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjbGlja2FibGU6IHRydWUsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbmFtZTogJ2Zyb21fdGV4dCcsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdGV4dF9qczogZnVuY3Rpb24gKGVsZW1lbnQpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGxldCB0ZXh0ID0gJydcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChlbGVtZW50LmlubmVyVGV4dC50cmltKCkpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGV4dCArPSBlbGVtZW50LmlubmVyVGV4dC50cmltKClcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgaW1nQ2hpbGQgPSBlbGVtZW50LnF1ZXJ5U2VsZWN0b3IoJ2ltZycpXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChpbWdDaGlsZCAmJiBpbWdDaGlsZC5hbHQpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0ZXh0ICs9ICcgJ1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRleHQgKz0gaW1nQ2hpbGQuYWx0XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IGltZ0NoaWxkID0gZWxlbWVudC5xdWVyeVNlbGVjdG9yKCdpbWcnKVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoaW1nQ2hpbGQgJiYgaW1nQ2hpbGQuYWx0KSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGV4dCArPSBpbWdDaGlsZC5hbHRcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHRleHQudHJpbSgpXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICBdXG4gICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBdXG4gICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgXVxuICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAvLyBoYW5kbGUgbmV3IHR3aXN0ZXJzXG4gICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICBzZWxlY3RvcjogJyN0d2lzdGVyLXBsdXMtaW5saW5lLXR3aXN0ZXInLFxuICAgICAgICAgICAgICAgIGNsYXNzOiAncHJvZHVjdC1vcHRpb25zJyxcbiAgICAgICAgICAgICAgICBuYW1lOiAncHJvZHVjdF9vcHRpb25zJyxcbiAgICAgICAgICAgICAgICBjaGlsZHJlbjogW1xuICAgICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICBzZWxlY3RvcjogJ2Rpdi5pbmxpbmUtdHdpc3Rlci1yb3cnLFxuICAgICAgICAgICAgICAgICAgICB0ZXh0X3NlbGVjdG9yOlxuICAgICAgICAgICAgICAgICAgICAgICdkaXYuaW5saW5lLXR3aXN0ZXItZGltLXRpdGxlLXZhbHVlLXRydW5jYXRlLWV4cGFuZGVkIHNwYW4uYS1zaXplLWJhc2UuYS1jb2xvci1zZWNvbmRhcnknLFxuICAgICAgICAgICAgICAgICAgICBuYW1lOiAnZnJvbV90ZXh0JyxcbiAgICAgICAgICAgICAgICAgICAgZGlyZWN0X2NoaWxkOiB0cnVlLFxuICAgICAgICAgICAgICAgICAgICBnZW5lcmF0ZV9tZXRhZGF0YTogKGVtKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgICAgY29uc3QgbGFiZWwgPSBlbVxuICAgICAgICAgICAgICAgICAgICAgICAgLnF1ZXJ5U2VsZWN0b3IoXG4gICAgICAgICAgICAgICAgICAgICAgICAgICdkaXYuaW5saW5lLXR3aXN0ZXItZGltLXRpdGxlLXZhbHVlLXRydW5jYXRlLWV4cGFuZGVkIHNwYW4uYS1zaXplLWJhc2UuYS1jb2xvci1zZWNvbmRhcnknXG4gICAgICAgICAgICAgICAgICAgICAgICApXG4gICAgICAgICAgICAgICAgICAgICAgICA/LmlubmVySFRNTC5yZXBsYWNlKC9bOlxcbl0vZywgJycpXG4gICAgICAgICAgICAgICAgICAgICAgICAudHJpbSgpXG4gICAgICAgICAgICAgICAgICAgICAgbGV0IHZhbHVlID0gZW0ucXVlcnlTZWxlY3RvcihcbiAgICAgICAgICAgICAgICAgICAgICAgICdkaXYuaW5saW5lLXR3aXN0ZXItZGltLXRpdGxlLXZhbHVlLXRydW5jYXRlLWV4cGFuZGVkIHNwYW4uaW5saW5lLXR3aXN0ZXItZGltLXRpdGxlLXZhbHVlJ1xuICAgICAgICAgICAgICAgICAgICAgICk/LmlubmVySFRNTFxuICAgICAgICAgICAgICAgICAgICAgIGlmICh2YWx1ZSA9PT0gdW5kZWZpbmVkIHx8IHZhbHVlID09PSAnJykge1xuICAgICAgICAgICAgICAgICAgICAgICAgY29uc3Qgb3B0aW9ucyA9IGVtLnF1ZXJ5U2VsZWN0b3IoJ3NlbGVjdCcpPy5xdWVyeVNlbGVjdG9yQWxsKCdvcHRpb24nKVxuICAgICAgICAgICAgICAgICAgICAgICAgLy8gY29uc29sZS5sb2cob3B0aW9ucyk7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAob3B0aW9ucykge1xuICAgICAgICAgICAgICAgICAgICAgICAgICBmb3IgKGNvbnN0IG9wdGlvbiBvZiBvcHRpb25zKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgLy8gY29uc29sZS5sb2cob3B0aW9uKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAob3B0aW9uICYmIG9wdGlvbi5nZXRBdHRyaWJ1dGUoJ3NlbGVjdGVkJykgIT09IG51bGwpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhbHVlID0gb3B0aW9uLmlubmVySFRNTC50cmltKClcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIC8vIGNvbnNvbGUubG9nKHZhbHVlKTtcbiAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHsgbmFtZTogJ3Byb2R1Y3Rfb3B0aW9ucycsIGRhdGE6IHsgbGFiZWwsIHZhbHVlOiB2YWx1ZS50cmltKCkgfSB9XG4gICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgIGNoaWxkcmVuOiBbXG4gICAgICAgICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICAgICAgc2VsZWN0b3I6ICdkaXYuaW5saW5lLXR3aXN0ZXItZGltLXRpdGxlLXZhbHVlLXRydW5jYXRlLWV4cGFuZGVkJyxcbiAgICAgICAgICAgICAgICAgICAgICAgIGNoaWxkcmVuOiBbXG4gICAgICAgICAgICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBzZWxlY3RvcjogJ3NwYW4uYS1zaXplLWJhc2UuYS1jb2xvci1zZWNvbmRhcnknLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGFkZF90ZXh0OiB0cnVlXG4gICAgICAgICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBzZWxlY3RvcjogJ3NwYW4uaW5saW5lLXR3aXN0ZXItZGltLXRpdGxlLXZhbHVlJyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBhZGRfdGV4dDogdHJ1ZVxuICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICBdXG4gICAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgICAgICBzZWxlY3RvcjogJ3NlbGVjdCcsXG4gICAgICAgICAgICAgICAgICAgICAgICBhZGRfdGV4dDogdHJ1ZSxcbiAgICAgICAgICAgICAgICAgICAgICAgIC8vIGNsaWNrYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgICAgICAgICAgICAgIG5hbWU6ICdkcm9wX2Rvd25fbGlzdCdcbiAgICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHNlbGVjdG9yOiAndWwnLFxuICAgICAgICAgICAgICAgICAgICAgICAgbmFtZTogJ2J1dHRvbl9saXN0JyxcbiAgICAgICAgICAgICAgICAgICAgICAgIGNoaWxkcmVuOiBbXG4gICAgICAgICAgICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBzZWxlY3RvcjogJ2xpIHNwYW46bm90KC5hb2staGlkZGVuKSBpbnB1dCcsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgYWRkX3RleHQ6IHRydWUsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY2xpY2thYmxlOiB0cnVlLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5hbWU6ICdmcm9tX3RleHQnLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRleHRfanM6IGZ1bmN0aW9uIChlbGVtZW50KSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb25zdCB0ZXh0RW0gPSBlbGVtZW50Lm5leHRFbGVtZW50U2libGluZ1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbGV0IHRleHQgPSAnJ1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHRleHRFbS5pbm5lclRleHQudHJpbSgpKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRleHQgKz0gdGV4dEVtLmlubmVyVGV4dC50cmltKClcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgaW1nQ2hpbGQgPSB0ZXh0RW0ucXVlcnlTZWxlY3RvcignaW1nJylcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGltZ0NoaWxkICYmIGltZ0NoaWxkLmFsdCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRleHQgKz0gJyAnXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGV4dCArPSBpbWdDaGlsZC5hbHRcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgaW1nQ2hpbGQgPSB0ZXh0RW0ucXVlcnlTZWxlY3RvcignaW1nJylcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGltZ0NoaWxkICYmIGltZ0NoaWxkLmFsdCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRleHQgKz0gaW1nQ2hpbGQuYWx0XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiB0ZXh0LnRyaW0oKVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgXVxuICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgXVxuICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgc2VsZWN0b3I6ICdkaXYuaW5saW5lLXR3aXN0ZXItc2luZ2xldG9uLWhlYWRlcicsXG4gICAgICAgICAgICAgICAgICAgIHRleHRfc2VsZWN0b3I6ICdzcGFuLmEtc2l6ZS1iYXNlLmEtY29sb3Itc2Vjb25kYXJ5JyxcbiAgICAgICAgICAgICAgICAgICAgbmFtZTogJ2Zyb21fdGV4dCcsXG4gICAgICAgICAgICAgICAgICAgIGNoaWxkcmVuOiBbXG4gICAgICAgICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICAgICAgc2VsZWN0b3I6ICdzcGFuLmEtc2l6ZS1iYXNlLmEtY29sb3Itc2Vjb25kYXJ5JyxcbiAgICAgICAgICAgICAgICAgICAgICAgIGFkZF90ZXh0OiB0cnVlXG4gICAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgICAgICBzZWxlY3RvcjogJ3NwYW4uaW5saW5lLXR3aXN0ZXItZGltLXRpdGxlLXZhbHVlLXRydW5jYXRlJyxcbiAgICAgICAgICAgICAgICAgICAgICAgIGFkZF90ZXh0OiB0cnVlXG4gICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBdLFxuICAgICAgICAgICAgICAgICAgICBnZW5lcmF0ZV9tZXRhZGF0YTogKGVtKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgICAgY29uc3QgbGFiZWwgPSBlbVxuICAgICAgICAgICAgICAgICAgICAgICAgLnF1ZXJ5U2VsZWN0b3IoJ3NwYW4uYS1zaXplLWJhc2UuYS1jb2xvci1zZWNvbmRhcnknKVxuICAgICAgICAgICAgICAgICAgICAgICAgPy5pbm5lckhUTUwucmVwbGFjZSgvWzpcXG5dL2csICcnKVxuICAgICAgICAgICAgICAgICAgICAgICAgLnRyaW0oKVxuICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IHZhbHVlID0gZW0ucXVlcnlTZWxlY3RvcihcbiAgICAgICAgICAgICAgICAgICAgICAgICdzcGFuLmlubGluZS10d2lzdGVyLWRpbS10aXRsZS12YWx1ZS10cnVuY2F0ZSdcbiAgICAgICAgICAgICAgICAgICAgICApPy5pbm5lckhUTUxcbiAgICAgICAgICAgICAgICAgICAgICByZXR1cm4geyBuYW1lOiAncHJvZHVjdF9vcHRpb25zJywgZGF0YTogeyBsYWJlbCwgdmFsdWU6IHZhbHVlLnRyaW0oKSB9IH1cbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIF1cbiAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIHNlbGVjdG9yOlxuICAgICAgICAgICAgICAgICAgJyNwcm9kdWN0RmFjdHNEZXNrdG9wRXhwYW5kZXIgdWwuYS11bm9yZGVyZWQtbGlzdCwgI2ZlYXR1cmVidWxsZXRzX2ZlYXR1cmVfZGl2IHVsLmEtdW5vcmRlcmVkLWxpc3QnLFxuICAgICAgICAgICAgICAgIGFkZF90ZXh0OiB0cnVlLFxuICAgICAgICAgICAgICAgIG5hbWU6ICdhYm91dF90aGlzX2l0ZW0nLFxuICAgICAgICAgICAgICAgIHRleHRfZm9ybWF0OiAnQWJvdXQgdGhpcyBpdGVtOiAnLFxuICAgICAgICAgICAgICAgIGNoaWxkcmVuOiBbXG4gICAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgIHNlbGVjdG9yOiAnbGknLFxuICAgICAgICAgICAgICAgICAgICBhZGRfdGV4dDogdHJ1ZVxuICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIF0sXG4gICAgICAgICAgICAgICAgZ2VuZXJhdGVfbWV0YWRhdGE6IChlbSkgPT4ge1xuICAgICAgICAgICAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgICAgICAgICAgbmFtZTogJ3Byb2R1Y3RfZGV0YWlscycsXG4gICAgICAgICAgICAgICAgICAgIGRhdGE6IHtcbiAgICAgICAgICAgICAgICAgICAgICBidWxsZXRfbGlzdDogZW0/LmlubmVyVGV4dD8ucmVwbGFjZSgvXFxuL2csICcgJykgfHwgJydcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgXVxuICAgICAgICAgIH0sXG4gICAgICAgICAge1xuICAgICAgICAgICAgc2VsZWN0b3I6ICcjYnV5Ym94OmhhcyhkaXYuYS10YWItY29udGFpbmVyKTpub3QoOmhhcygjcGFydGlhbFN0YXRlX2J1eWJveF9kZXNrdG9wKSknLFxuICAgICAgICAgICAgbmFtZTogJ2J1eWJveCcsXG4gICAgICAgICAgICBjaGlsZHJlbjogW1xuICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgc2VsZWN0b3I6ICcjdGFiX2hlYWRpbmdfZGVza3RvcF9idXlib3hfZ3JvdXBfMSBhJyxcbiAgICAgICAgICAgICAgICBuYW1lOiAnZGVsaXZlcl90YWInLFxuICAgICAgICAgICAgICAgIGNsaWNrYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgICAgICBhZGRfdGV4dDogdHJ1ZVxuICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgc2VsZWN0b3I6ICcjdGFiX2hlYWRpbmdfZGVza3RvcF9idXlib3hfZ3JvdXBfMiBhJyxcbiAgICAgICAgICAgICAgICBuYW1lOiAncGlja191cF90YWInLFxuICAgICAgICAgICAgICAgIGNsaWNrYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgICAgICBhZGRfdGV4dDogdHJ1ZVxuICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgc2VsZWN0b3I6ICcjdGFiX2Rlc2t0b3BfYnV5Ym94X2dyb3VwXzEnLFxuICAgICAgICAgICAgICAgIG5hbWU6ICdkZWxpdmVyeScsXG4gICAgICAgICAgICAgICAgYWRkX3RleHQ6IHRydWUsXG4gICAgICAgICAgICAgICAgdGV4dF9mb3JtYXQ6ICdEZWxpdmVyeScsXG4gICAgICAgICAgICAgICAgY2hpbGRyZW46IFtidXlfYm94X3dpdGhfYWNjb3JkaW9uLCBidXlfYm94X3dpdGhvdXRfYWNjb3JkaW9uX2RlbGl2ZXJ5XVxuICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgc2VsZWN0b3I6ICcjdGFiX2Rlc2t0b3BfYnV5Ym94X2dyb3VwXzInLFxuICAgICAgICAgICAgICAgIG5hbWU6ICdwaWNrX3VwJyxcbiAgICAgICAgICAgICAgICBhZGRfdGV4dDogdHJ1ZSxcbiAgICAgICAgICAgICAgICB0ZXh0X2Zvcm1hdDogJ1BpY2sgVXAnLFxuICAgICAgICAgICAgICAgIGNoaWxkcmVuOiBbYnV5X2JveF93aXRob3V0X2FjY29yZGlvbl9waWNrX3VwXVxuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICBdLFxuICAgICAgICAgICAgZ2VuZXJhdGVfbWV0YWRhdGE6IChlbSkgPT4ge1xuICAgICAgICAgICAgICBjb25zdCBhc2luRW0gPSBlbS5xdWVyeVNlbGVjdG9yKCdpbnB1dCNBU0lOJylcbiAgICAgICAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgICAgICBuYW1lOiAncHJvZHVjdF9kZXRhaWxzJyxcbiAgICAgICAgICAgICAgICBkYXRhOiB7IGFzaW46IGFzaW5FbT8udmFsdWUgfHwgJycgfVxuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfSxcbiAgICAgICAgICB7XG4gICAgICAgICAgICBzZWxlY3RvcjpcbiAgICAgICAgICAgICAgJyNidXlib3g6bm90KDpoYXMoZGl2LmEtdGFiLWNvbnRhaW5lcikpOm5vdCg6aGFzKCNwYXJ0aWFsU3RhdGVfYnV5Ym94X2Rlc2t0b3ApKScsXG4gICAgICAgICAgICBuYW1lOiAnYnV5Ym94JyxcbiAgICAgICAgICAgIGNoaWxkcmVuOiBbYnV5X2JveF93aXRoX2FjY29yZGlvbiwgYnV5X2JveF93aXRob3V0X2FjY29yZGlvbl9kZWxpdmVyeV0sXG4gICAgICAgICAgICBnZW5lcmF0ZV9tZXRhZGF0YTogKGVtKSA9PiB7XG4gICAgICAgICAgICAgIGNvbnN0IGFzaW5FbSA9IGVtLnF1ZXJ5U2VsZWN0b3IoJ2lucHV0I0FTSU4nKVxuICAgICAgICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgICAgIG5hbWU6ICdwcm9kdWN0X2RldGFpbHMnLFxuICAgICAgICAgICAgICAgIGRhdGE6IHsgYXNpbjogYXNpbkVtPy52YWx1ZSB8fCAnJyB9XG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9LFxuICAgICAgICAgIHtcbiAgICAgICAgICAgIHNlbGVjdG9yOiAnI3BhcnRpYWxTdGF0ZV9idXlib3hfZGVza3RvcCcsXG4gICAgICAgICAgICBjaGlsZHJlbjogW1xuICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgc2VsZWN0b3I6ICcjcGFydGlhbFN0YXRlQnV5Ym94IGRpdi5hLXNlY3Rpb24uYS10ZXh0LWNlbnRlci5hLXNwYWNpbmctc21hbGwnLFxuICAgICAgICAgICAgICAgIGFkZF90ZXh0OiB0cnVlXG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIF0sXG4gICAgICAgICAgICBnZW5lcmF0ZV9tZXRhZGF0YTogKGVtKSA9PiB7XG4gICAgICAgICAgICAgIGNvbnN0IGFzaW5FbSA9IGVtLnF1ZXJ5U2VsZWN0b3IoJ2lucHV0I0FTSU4nKVxuICAgICAgICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgICAgIG5hbWU6ICdwcm9kdWN0X2RldGFpbHMnLFxuICAgICAgICAgICAgICAgIGRhdGE6IHsgYXNpbjogYXNpbkVtPy52YWx1ZSB8fCAnJyB9XG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9LFxuICAgICAgICAgIHtcbiAgICAgICAgICAgIHNlbGVjdG9yOiAnI2F0dGFjaC13YXJyYW50eS1wYW5lICNhdHRhY2gtd2FycmFudHktZGlzcGxheScsXG4gICAgICAgICAgICBuYW1lOiAnd2FycmFudHktYm94JyxcbiAgICAgICAgICAgIGNoaWxkcmVuOiBbXG4gICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICBzZWxlY3RvcjogJ2Rpdi5hdHRhY2gtd2FycmFudHktYm94JyxcbiAgICAgICAgICAgICAgICB0ZXh0X3NlbGVjdG9yOiAnI2F0dGFjaC13YXJyYW50eS1jYXJkLWRpc3BsYXktdGl0bGUnLFxuICAgICAgICAgICAgICAgIG5hbWU6ICdmcm9tX3RleHQnLFxuICAgICAgICAgICAgICAgIGNoaWxkcmVuOiBbXG4gICAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgIHNlbGVjdG9yOiAnaS5hLWljb24tY2hlY2tib3gnLFxuICAgICAgICAgICAgICAgICAgICBuYW1lOiAnc2VsZWN0JyxcbiAgICAgICAgICAgICAgICAgICAgY2xpY2thYmxlOiB0cnVlXG4gICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICBzZWxlY3RvcjogJyNhdHRhY2gtd2FycmFudHktY2FyZC1kaXNwbGF5LXRpdGxlJyxcbiAgICAgICAgICAgICAgICAgICAgYWRkX3RleHQ6IHRydWVcbiAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgIHNlbGVjdG9yOiAnI2F0dGFjaC13YXJyYW50eS1jYXJkLXByaWNlJyxcbiAgICAgICAgICAgICAgICAgICAgYWRkX3RleHQ6IHRydWVcbiAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBdXG4gICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICBzZWxlY3RvcjogJ2Rpdi5hLXNlY3Rpb24uYXR0YWNoLXdhcnJhbnR5LWJ1dHRvbi1yb3cnLFxuICAgICAgICAgICAgICAgIGNoaWxkcmVuOiBbXG4gICAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgIHNlbGVjdG9yOiBcImlucHV0W2FyaWEtbGFiZWxsZWRieT0nYXR0YWNoU2lBZGRDb3ZlcmFnZS1hbm5vdW5jZSddXCIsXG4gICAgICAgICAgICAgICAgICAgIG5hbWU6ICdhZGRfcHJvdGVjdGlvbicsXG4gICAgICAgICAgICAgICAgICAgIGNsaWNrYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgICAgICAgICAgYWRkX3RleHQ6IHRydWUsXG4gICAgICAgICAgICAgICAgICAgIHRleHRfZm9ybWF0OiAnQWRkIFByb3RlY3Rpb24nXG4gICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICBzZWxlY3RvcjogXCJpbnB1dFthcmlhLWxhYmVsbGVkYnk9J2F0dGFjaFNpTm9Db3ZlcmFnZS1hbm5vdW5jZSddXCIsXG4gICAgICAgICAgICAgICAgICAgIG5hbWU6ICdub19wcm90ZWN0aW9uJyxcbiAgICAgICAgICAgICAgICAgICAgY2xpY2thYmxlOiB0cnVlLFxuICAgICAgICAgICAgICAgICAgICBhZGRfdGV4dDogdHJ1ZSxcbiAgICAgICAgICAgICAgICAgICAgdGV4dF9mb3JtYXQ6ICdObyBUaGFua3MnXG4gICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgXVxuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICBdXG4gICAgICAgICAgfVxuICAgICAgICBdXG4gICAgICB9XG4gICAgXVxuICB9LFxuICB7XG4gICAgbWF0Y2g6ICcvY2FydC9hZGQtdG8tY2FydCcsXG4gICAgbWF0Y2hfbWV0aG9kOiAndXJsJyxcbiAgICBzZWxlY3RvcjogJ2h0bWwnLFxuICAgIG1hdGNoX3dpdGhfcmVmOiB0cnVlLFxuICAgIGNoaWxkcmVuOiBbXG4gICAgICB7XG4gICAgICAgIHNlbGVjdG9yOiAnaGVhZCcsXG4gICAgICAgIGNoaWxkcmVuOiBbXG4gICAgICAgICAge1xuICAgICAgICAgICAgc2VsZWN0b3I6ICd0aXRsZScsXG4gICAgICAgICAgICBhZGRfdGV4dDogdHJ1ZVxuICAgICAgICAgIH1cbiAgICAgICAgXVxuICAgICAgfSxcbiAgICAgIHtcbiAgICAgICAgc2VsZWN0b3I6ICdib2R5JyxcbiAgICAgICAgY2hpbGRyZW46IFtcbiAgICAgICAgICBuYXYsXG4gICAgICAgICAge1xuICAgICAgICAgICAgc2VsZWN0b3I6ICcjc3ctYXRjLWJ1eS1ib3gnLFxuICAgICAgICAgICAgY2hpbGRyZW46IFtcbiAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIHNlbGVjdG9yOiAnI3N3LXN1YnRvdGFsJyxcbiAgICAgICAgICAgICAgICBjaGlsZHJlbjogW1xuICAgICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICBzZWxlY3RvcjogJyNzdy1zdWJ0b3RhbC1pdGVtLWNvdW50JyxcbiAgICAgICAgICAgICAgICAgICAgYWRkX3RleHQ6IHRydWVcbiAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgIHNlbGVjdG9yOiBcInNwYW5bYXJpYS1oaWRkZW49J3RydWUnXVwiLFxuICAgICAgICAgICAgICAgICAgICBhZGRfdGV4dDogdHJ1ZVxuICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIF1cbiAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIHNlbGVjdG9yOiAnI3NjLWJ1eS1ib3gtcHRjLWJ1dHRvbiBzcGFuLmEtYnV0dG9uLWlubmVyIGlucHV0JyxcbiAgICAgICAgICAgICAgICBhZGRfdGV4dDogdHJ1ZSxcbiAgICAgICAgICAgICAgICB0ZXh0X3NlbGVjdG9yOiAnZGl2LnNjLXdpdGhvdXQtbXVsdGljYXJ0JyxcbiAgICAgICAgICAgICAgICBjbGlja2FibGU6IHRydWUsXG4gICAgICAgICAgICAgICAgbmFtZTogJ2NoZWNrX291dCdcbiAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIHNlbGVjdG9yOiAnI3N3LWd0YyBhJyxcbiAgICAgICAgICAgICAgICBhZGRfdGV4dDogdHJ1ZSxcbiAgICAgICAgICAgICAgICBjbGlja2FibGU6IHRydWUsXG4gICAgICAgICAgICAgICAgbmFtZTogJ2dvX3RvX2NhcnQnXG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIF1cbiAgICAgICAgICB9XG4gICAgICAgIF1cbiAgICAgIH1cbiAgICBdXG4gIH0sXG4gIHtcbiAgICBtYXRjaDogJy9jYXJ0L3NtYXJ0LXdhZ29uJyxcbiAgICBtYXRjaF9tZXRob2Q6ICd1cmwnLFxuICAgIHNlbGVjdG9yOiAnaHRtbCcsXG4gICAgY2hpbGRyZW46IFtcbiAgICAgIHtcbiAgICAgICAgc2VsZWN0b3I6ICdoZWFkJyxcbiAgICAgICAgY2hpbGRyZW46IFtcbiAgICAgICAgICB7XG4gICAgICAgICAgICBzZWxlY3RvcjogJ3RpdGxlJyxcbiAgICAgICAgICAgIGFkZF90ZXh0OiB0cnVlXG4gICAgICAgICAgfVxuICAgICAgICBdXG4gICAgICB9LFxuICAgICAge1xuICAgICAgICBzZWxlY3RvcjogJ2JvZHknLFxuICAgICAgICBjaGlsZHJlbjogW1xuICAgICAgICAgIG5hdixcbiAgICAgICAgICB7XG4gICAgICAgICAgICBzZWxlY3RvcjogJyNzdy1hdGMtYnV5LWJveCcsXG4gICAgICAgICAgICBjaGlsZHJlbjogW1xuICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgc2VsZWN0b3I6ICcjc3ctc3VidG90YWwnLFxuICAgICAgICAgICAgICAgIGNoaWxkcmVuOiBbXG4gICAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgIHNlbGVjdG9yOiAnI3N3LXN1YnRvdGFsLWl0ZW0tY291bnQnLFxuICAgICAgICAgICAgICAgICAgICBhZGRfdGV4dDogdHJ1ZVxuICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgc2VsZWN0b3I6IFwic3BhblthcmlhLWhpZGRlbj0ndHJ1ZSddXCIsXG4gICAgICAgICAgICAgICAgICAgIGFkZF90ZXh0OiB0cnVlXG4gICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgXVxuICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgc2VsZWN0b3I6ICcjc2MtYnV5LWJveC1wdGMtYnV0dG9uIHNwYW4uYS1idXR0b24taW5uZXIgaW5wdXQnLFxuICAgICAgICAgICAgICAgIGFkZF90ZXh0OiB0cnVlLFxuICAgICAgICAgICAgICAgIHRleHRfc2VsZWN0b3I6ICdkaXYuc2Mtd2l0aG91dC1tdWx0aWNhcnQnLFxuICAgICAgICAgICAgICAgIGNsaWNrYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgICAgICBuYW1lOiAnY2hlY2tfb3V0J1xuICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgc2VsZWN0b3I6ICcjc3ctZ3RjIGEnLFxuICAgICAgICAgICAgICAgIGFkZF90ZXh0OiB0cnVlLFxuICAgICAgICAgICAgICAgIGNsaWNrYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgICAgICBuYW1lOiAnZ29fdG9fY2FydCdcbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgXVxuICAgICAgICAgIH1cbiAgICAgICAgXVxuICAgICAgfVxuICAgIF1cbiAgfSxcbiAge1xuICAgIG1hdGNoOiAnL2dwL2NhcnQvdmlldy5odG1sJyxcbiAgICBtYXRjaF9tZXRob2Q6ICd1cmwnLFxuICAgIHNlbGVjdG9yOiAnaHRtbCcsXG4gICAgY2hpbGRyZW46IFtcbiAgICAgIHtcbiAgICAgICAgc2VsZWN0b3I6ICdoZWFkJyxcbiAgICAgICAgY2hpbGRyZW46IFtcbiAgICAgICAgICB7XG4gICAgICAgICAgICBzZWxlY3RvcjogJ3RpdGxlJyxcbiAgICAgICAgICAgIGFkZF90ZXh0OiB0cnVlXG4gICAgICAgICAgfVxuICAgICAgICBdXG4gICAgICB9LFxuICAgICAge1xuICAgICAgICBzZWxlY3RvcjogJ2JvZHknLFxuICAgICAgICBjaGlsZHJlbjogY2FydFxuICAgICAgfVxuICAgIF1cbiAgfSxcbiAge1xuICAgIG1hdGNoOiAnL2NhcnQnLFxuICAgIG1hdGNoX21ldGhvZDogJ3VybCcsXG4gICAgbWF0Y2hfd2l0aF9yZWY6IHRydWUsXG4gICAgc2VsZWN0b3I6ICdodG1sJyxcbiAgICBjaGlsZHJlbjogW1xuICAgICAge1xuICAgICAgICBzZWxlY3RvcjogJ2hlYWQnLFxuICAgICAgICBjaGlsZHJlbjogW1xuICAgICAgICAgIHtcbiAgICAgICAgICAgIHNlbGVjdG9yOiAndGl0bGUnLFxuICAgICAgICAgICAgYWRkX3RleHQ6IHRydWVcbiAgICAgICAgICB9XG4gICAgICAgIF1cbiAgICAgIH0sXG4gICAgICB7XG4gICAgICAgIHNlbGVjdG9yOiAnYm9keScsXG4gICAgICAgIGNoaWxkcmVuOiBjYXJ0XG4gICAgICB9XG4gICAgXVxuICB9LFxuICB7XG4gICAgbWF0Y2g6ICcvY2FydC9sb2NhbG1hcmtldCcsXG4gICAgbWF0Y2hfbWV0aG9kOiAndXJsJyxcbiAgICBtYXRjaF93aXRoX3JlZjogdHJ1ZSxcbiAgICBzZWxlY3RvcjogJ2h0bWwnLFxuICAgIGNoaWxkcmVuOiBbXG4gICAgICB7XG4gICAgICAgIHNlbGVjdG9yOiAnaGVhZCcsXG4gICAgICAgIGNoaWxkcmVuOiBbXG4gICAgICAgICAge1xuICAgICAgICAgICAgc2VsZWN0b3I6ICd0aXRsZScsXG4gICAgICAgICAgICBhZGRfdGV4dDogdHJ1ZVxuICAgICAgICAgIH1cbiAgICAgICAgXVxuICAgICAgfSxcbiAgICAgIHtcbiAgICAgICAgc2VsZWN0b3I6ICdib2R5JyxcbiAgICAgICAgY2hpbGRyZW46IGZyZXNoX2NhcnRcbiAgICAgIH1cbiAgICBdXG4gIH0sXG4gIHtcbiAgICBtYXRjaDogJy9hcC9zaWduaW4nLFxuICAgIG1hdGNoX21ldGhvZDogJ3VybCcsXG4gICAgdGVybWluYXRlOiBmdW5jdGlvbiAoKSB7XG4gICAgICByZXR1cm4gISFhcmd1bWVudHNbMF1cbiAgICB9LFxuICAgIHRlcm1pbmF0ZV9jYWxsYmFjazogZnVuY3Rpb24gKCkge1xuICAgICAgcmV0dXJuIGFyZ3VtZW50c1swXVxuICAgIH0sXG4gICAgc2VsZWN0b3I6ICdodG1sJ1xuICB9LFxuICB7XG4gICAgbWF0Y2g6ICcvZ3AvYnV5L3NwYy9oYW5kbGVycy9kaXNwbGF5Lmh0bWwnLFxuICAgIG1hdGNoX21ldGhvZDogJ3VybCcsXG4gICAgdGVybWluYXRlOiBmdW5jdGlvbiAoKSB7XG4gICAgICByZXR1cm4gISFhcmd1bWVudHNbMF1cbiAgICB9LFxuICAgIHRlcm1pbmF0ZV9jYWxsYmFjazogZnVuY3Rpb24gKCkge1xuICAgICAgcmV0dXJuIGFyZ3VtZW50c1swXVxuICAgIH0sXG4gICAgc2VsZWN0b3I6ICdodG1sJ1xuICB9LFxuICB7XG4gICAgbWF0Y2g6ICcvZ3AvYnV5YWdhaW4nLFxuICAgIG1hdGNoX21ldGhvZDogJ3VybCcsXG4gICAgbWF0Y2hfd2l0aF9yZWY6IHRydWUsXG4gICAgc2VsZWN0b3I6ICdodG1sJyxcbiAgICBjaGlsZHJlbjogW1xuICAgICAge1xuICAgICAgICBzZWxlY3RvcjogJ2hlYWQnLFxuICAgICAgICBjaGlsZHJlbjogW1xuICAgICAgICAgIHtcbiAgICAgICAgICAgIHNlbGVjdG9yOiAndGl0bGUnLFxuICAgICAgICAgICAgYWRkX3RleHQ6IHRydWVcbiAgICAgICAgICB9XG4gICAgICAgIF1cbiAgICAgIH0sXG4gICAgICB7XG4gICAgICAgIHNlbGVjdG9yOiAnYm9keScsXG4gICAgICAgIGNoaWxkcmVuOiBidXlfYWdhaW5cbiAgICAgIH1cbiAgICBdXG4gIH1cbl1cbiIsImV4cG9ydCBmdW5jdGlvbiBwcm9jZXNzRWxlbWVudChlbGVtZW50OiBhbnksIHJlY2lwZTogYW55LCBwYXJlbnROYW1lID0gJycsIG50aENoaWxkID0gMCkge1xuICAvLyBjb25zb2xlLmxvZyhcInByb2Nlc3NpbmcgZWxlbWVudDogXCIsIGVsZW1lbnQsIHJlY2lwZSk7XG4gIC8vIENyZWF0ZSBhIG5ldyBlbGVtZW50IHVzaW5nIHRoZSBET00gQVBJXG4gIGxldCB0YWdOYW1lID0gcmVjaXBlLnRhZ19uYW1lIHx8IGVsZW1lbnQudGFnTmFtZS50b0xvd2VyQ2FzZSgpXG4gIC8vIEhhbmRsZSB1bmRlcnNjb3JlZCB0YWdzXG4gIGlmICh0YWdOYW1lLmVuZHNXaXRoKCdfJykpIHtcbiAgICB0YWdOYW1lID0gdGFnTmFtZS5zbGljZSgwLCAtMSlcbiAgfVxuICBjb25zdCBuZXdFbGVtZW50ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCh0YWdOYW1lKVxuXG4gIC8vIEV4dHJhY3QgdGV4dCBjb250ZW50IGJhc2VkIG9uIHRoZSByZWNpcGVcbiAgbGV0IGVsZW1lbnRUZXh0ID0gJydcbiAgaWYgKHJlY2lwZS50ZXh0X3NlbGVjdG9yKSB7XG4gICAgY29uc3QgdGV4dEVsZW1lbnQgPSBlbGVtZW50LnF1ZXJ5U2VsZWN0b3IocmVjaXBlLnRleHRfc2VsZWN0b3IpXG4gICAgaWYgKHRleHRFbGVtZW50KSB7XG4gICAgICBlbGVtZW50VGV4dCA9IHRleHRFbGVtZW50LmlubmVyVGV4dCB8fCB0ZXh0RWxlbWVudC50ZXh0Q29udGVudCB8fCAnJ1xuICAgIH1cbiAgfSBlbHNlIGlmIChyZWNpcGUudGV4dF9qcykge1xuICAgIGVsZW1lbnRUZXh0ID0gcmVjaXBlLnRleHRfanMoZWxlbWVudClcbiAgICBpZiAoZWxlbWVudFRleHQgPT09ICcnIHx8IGVsZW1lbnRUZXh0ID09PSB1bmRlZmluZWQpIHtcbiAgICAgIC8vIGNvbnNvbGUubG9nKCd0ZXh0IGpzIGRvZXMgbm90IGRldGVjdCB0ZXh0IGZvciBlbGVtZW50ICcsIGVsZW1lbnQpXG4gICAgfVxuICB9IGVsc2UgaWYgKHJlY2lwZS5hZGRfdGV4dCkge1xuICAgIGVsZW1lbnRUZXh0ID0gZWxlbWVudC5pbm5lclRleHQgfHwgZWxlbWVudC50ZXh0Q29udGVudCB8fCAnJ1xuICB9XG4gIGVsZW1lbnRUZXh0ID0gZWxlbWVudFRleHQucmVwbGFjZSgvXFxzKy9nLCAnICcpLnRyaW0oKVxuICBpZiAocmVjaXBlLnRleHRfZm9ybWF0KSB7XG4gICAgZWxlbWVudFRleHQgPSByZWNpcGUudGV4dF9mb3JtYXQucmVwbGFjZSgne30nLCBlbGVtZW50VGV4dClcbiAgfSBlbHNlIGlmIChyZWNpcGUudGV4dF9mb3JtYXQpIHtcbiAgICBlbGVtZW50VGV4dCA9IHJlY2lwZS50ZXh0X2Zvcm1hdFxuICB9XG5cbiAgaWYgKGVsZW1lbnRUZXh0ICYmIHJlY2lwZS5hZGRfdGV4dCkge1xuICAgIG5ld0VsZW1lbnQudGV4dENvbnRlbnQgPSBlbGVtZW50VGV4dFxuICB9XG5cbiAgLy8gQnVpbGQgdGhlIG5vZGUgYXR0cmlidXRlc1xuICBsZXQgZWxlbWVudE5hbWUgPSAnJ1xuICBpZiAocmVjaXBlLm5hbWUpIHtcbiAgICBpZiAocmVjaXBlLm5hbWUgPT09ICdmcm9tX3RleHQnKSB7XG4gICAgICBpZiAoIWVsZW1lbnRUZXh0KSB7XG4gICAgICAgIC8vIGNvbnNvbGUubG9nKCdlbGVtZW50VGV4dCBpcyBlbXB0eScsIHJlY2lwZSwgZWxlbWVudClcbiAgICAgICAgLy8gZGVidWdnZXJcbiAgICAgIH1cbiAgICAgIGVsZW1lbnROYW1lID0gcGFyZW50TmFtZSA/IHBhcmVudE5hbWUgKyAnLicgOiAnJ1xuICAgICAgaWYgKCFlbGVtZW50VGV4dCkge1xuICAgICAgICAvLyBjb25zb2xlLmxvZyhcImVsZW1lbnQgdGV4dCBub3QgZm91bmRcIik7XG4gICAgICAgIGVsZW1lbnROYW1lID0gJydcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGVsZW1lbnROYW1lICs9IGVsZW1lbnRUZXh0LnRvTG93ZXJDYXNlKCkucmVwbGFjZSgvW15cXHddKy9nLCAnXycpXG4gICAgICB9XG4gICAgfSBlbHNlIGlmIChyZWNpcGUubmFtZSA9PT0gJ2Zyb21fbnRoX2NoaWxkJykge1xuICAgICAgZWxlbWVudE5hbWUgPSBwYXJlbnROYW1lID8gcGFyZW50TmFtZSArICcuJyA6ICcnXG4gICAgICBlbGVtZW50TmFtZSArPSBudGhDaGlsZC50b1N0cmluZygpXG4gICAgfSBlbHNlIHtcbiAgICAgIGVsZW1lbnROYW1lID0gcGFyZW50TmFtZSA/IHBhcmVudE5hbWUgKyAnLicgOiAnJ1xuICAgICAgZWxlbWVudE5hbWUgKz0gcmVjaXBlLm5hbWVcbiAgICB9XG4gICAgbmV3RWxlbWVudC5zZXRBdHRyaWJ1dGUoJ25hbWUnLCBlbGVtZW50TmFtZSlcbiAgICBwYXJlbnROYW1lID0gZWxlbWVudE5hbWVcbiAgfVxuXG4gIGlmIChyZWNpcGUuZ2VuZXJhdGVfbWV0YWRhdGEpIHtcbiAgICBjb25zdCBtZXRhb2JqID0gcmVjaXBlLmdlbmVyYXRlX21ldGFkYXRhKGVsZW1lbnQpXG4gICAgY29uc3QgbWV0YWRhdGEgPSBKU09OLnN0cmluZ2lmeShtZXRhb2JqLmRhdGEpXG4gICAgY29uc3QgbWV0YW5hbWUgPSBtZXRhb2JqLm5hbWVcblxuICAgIGVsZW1lbnQuc2V0QXR0cmlidXRlKCdkYXRhLWVsZW1lbnQtbWV0YS1uYW1lJywgbWV0YW5hbWUpXG4gICAgZWxlbWVudC5zZXRBdHRyaWJ1dGUoJ2RhdGEtZWxlbWVudC1tZXRhLWRhdGEnLCBtZXRhZGF0YSlcbiAgICAvLyBjb25zb2xlLmxvZygnbWV0YWRhdGEgZ2VuZXJhdGVkOiAnLCBtZXRhZGF0YSwgJyB3aXRoIG5hbWU6ICcsIG1ldGFuYW1lKVxuICB9XG5cbiAgLy8gSGFuZGxlIGNsaWNrYWJsZXMgYW5kIGlucHV0c1xuICBpZiAocmVjaXBlLmNsaWNrYWJsZSkge1xuICAgIGlmICghcmVjaXBlLm5hbWUpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcignY2xpY2thYmxlIGVsZW1lbnQgbXVzdCBoYXZlIGEgbmFtZScpXG4gICAgfVxuICAgIC8vIGhhbmRsZSBjbGlja19zZWxlY3RvclxuICAgIGxldCBjbGlja19lbGVtZW50OiBFbGVtZW50IHwgbnVsbFxuICAgIGlmIChyZWNpcGUuY2xpY2tfc2VsZWN0b3IpIHtcbiAgICAgIGNsaWNrX2VsZW1lbnQgPSBlbGVtZW50LnF1ZXJ5U2VsZWN0b3IocmVjaXBlLmNsaWNrX3NlbGVjdG9yKVxuICAgIH0gZWxzZSB7XG4gICAgICBjbGlja19lbGVtZW50ID0gZWxlbWVudFxuICAgIH1cbiAgICBpZiAoY2xpY2tfZWxlbWVudCkge1xuICAgICAgY2xpY2tfZWxlbWVudC5zZXRBdHRyaWJ1dGUoJ2RhdGEtY2xpY2thYmxlLWlkJywgZWxlbWVudE5hbWUpXG4gICAgfSBlbHNlIHtcbiAgICAgIC8vIGNvbnNvbGUubG9nKCdjbGljay1lbGVtZW50IG5vdCBmb3VuZCcsIGVsZW1lbnQsIHJlY2lwZSlcbiAgICB9XG4gICAgaWYgKCF3aW5kb3cuY2xpY2thYmxlX3JlY2lwZXMpIHtcbiAgICAgIHdpbmRvdy5jbGlja2FibGVfcmVjaXBlcyA9IHt9XG4gICAgfVxuICAgIHdpbmRvdy5jbGlja2FibGVfcmVjaXBlc1tlbGVtZW50TmFtZV0gPSByZWNpcGVcbiAgfVxuICBpZiAodGFnTmFtZSA9PT0gJ2lucHV0Jykge1xuICAgIGNvbnN0IGlucHV0VHlwZSA9IGVsZW1lbnQuZ2V0QXR0cmlidXRlKCd0eXBlJylcbiAgICBpZiAoWyd0ZXh0JywgJ251bWJlciddLmluY2x1ZGVzKGlucHV0VHlwZSkpIHtcbiAgICAgIG5ld0VsZW1lbnQuc2V0QXR0cmlidXRlKCd2YWx1ZScsIGVsZW1lbnQudmFsdWUpXG4gICAgICBlbGVtZW50LnNldEF0dHJpYnV0ZSgnZGF0YS1pbnB1dC1pZCcsIGVsZW1lbnROYW1lKVxuICAgIH0gZWxzZSBpZiAoaW5wdXRUeXBlID09PSAnY2hlY2tib3gnKSB7XG4gICAgICBuZXdFbGVtZW50LnNldEF0dHJpYnV0ZSgnY2hlY2tlZCcsIGVsZW1lbnQuY2hlY2tlZC50b1N0cmluZygpKVxuICAgIH0gZWxzZSBpZiAoaW5wdXRUeXBlID09PSAncmFkaW8nKSB7XG4gICAgICBuZXdFbGVtZW50LnNldEF0dHJpYnV0ZSgnY2hlY2tlZCcsIGVsZW1lbnQuY2hlY2tlZC50b1N0cmluZygpKVxuICAgICAgZWxlbWVudC5zZXRBdHRyaWJ1dGUoJ2RhdGEtY2xpY2thYmxlLWlkJywgZWxlbWVudE5hbWUpXG4gICAgfVxuICAgIGlmICghd2luZG93LmlucHV0X3JlY2lwZXMpIHtcbiAgICAgIHdpbmRvdy5pbnB1dF9yZWNpcGVzID0ge31cbiAgICB9XG4gICAgd2luZG93LmlucHV0X3JlY2lwZXNbZWxlbWVudE5hbWVdID0gcmVjaXBlXG4gIH1cbiAgLy8gKipIYW5kbGUgc2VsZWN0IGVsZW1lbnRzKipcbiAgaWYgKHRhZ05hbWUgPT09ICdzZWxlY3QnKSB7XG4gICAgLy8gVGFnIHRoZSBzZWxlY3QgZWxlbWVudCB3aXRoIGRhdGEtc2VsZWN0LWlkXG4gICAgZWxlbWVudC5zZXRBdHRyaWJ1dGUoJ2RhdGEtc2VsZWN0LWlkJywgZWxlbWVudE5hbWUpXG5cbiAgICBjb25zdCBzZWxlY3RJZCA9IGVsZW1lbnQuZ2V0QXR0cmlidXRlKCdpZCcpXG5cbiAgICBjb25zdCBuYW1lSWQgPSBlbGVtZW50LmdldEF0dHJpYnV0ZSgnbmFtZScpXG5cbiAgICBjb25zdCB0YWcgPSBlbGVtZW50LnBhcmVudEVsZW1lbnQ/LnF1ZXJ5U2VsZWN0b3IoJ3NwYW4uYS1idXR0b24tZHJvcGRvd24gc3Bhbi5hLWJ1dHRvbi10ZXh0JylcbiAgICBjb25zdCBuZXdUYWcgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdzcGFuJylcbiAgICBuZXdUYWcudGV4dENvbnRlbnQgPSB0YWcudGV4dENvbnRlbnRcbiAgICBjb25zdCB0YWdOYW1lID0gZWxlbWVudE5hbWUgKyAnLm9wZW5fZHJvcF9kb3duX2xpc3QnXG4gICAgbmV3VGFnLnNldEF0dHJpYnV0ZSgnbmFtZScsIHRhZ05hbWUpXG4gICAgdGFnLnNldEF0dHJpYnV0ZSgnZGF0YS1jbGlja2FibGUtaWQnLCB0YWdOYW1lKSAvLyBUYWcgYWN0dWFsIERPTSBvcHRpb24gZWxlbWVudFxuXG4gICAgbmV3RWxlbWVudC5hcHBlbmRDaGlsZChuZXdUYWcpXG5cbiAgICBjb25zdCBvcHRpb25zID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnYVtpZF49XCInICsgc2VsZWN0SWQgKyAnXCJdJylcbiAgICBvcHRpb25zLmZvckVhY2goYXN5bmMgKG9wdGlvbikgPT4ge1xuICAgICAgY29uc3Qgb3B0aW9uVmFsdWUgPSBvcHRpb24udGV4dENvbnRlbnQudHJpbSgpXG4gICAgICBjb25zdCBvcHRpb25OYW1lID0gZWxlbWVudE5hbWUgKyAnLicgKyBvcHRpb25WYWx1ZVxuICAgICAgY29uc3QgbmV3T3B0aW9uID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnYScpXG4gICAgICBuZXdPcHRpb24udGV4dENvbnRlbnQgPSBvcHRpb24udGV4dENvbnRlbnRcbiAgICAgIG5ld09wdGlvbi5zZXRBdHRyaWJ1dGUoJ3ZhbHVlJywgb3B0aW9uVmFsdWUpXG4gICAgICBuZXdPcHRpb24uc2V0QXR0cmlidXRlKCduYW1lJywgb3B0aW9uTmFtZSlcbiAgICAgIG5ld09wdGlvbi5zZXRBdHRyaWJ1dGUoJ3NlbGVjdGVkJywgb3B0aW9uLmdldEF0dHJpYnV0ZSgnYXJpYS1zZWxlY3RlZCcpKVxuICAgICAgb3B0aW9uLnNldEF0dHJpYnV0ZSgnZGF0YS1jbGlja2FibGUtaWQnLCBvcHRpb25OYW1lKSAvLyBUYWcgYWN0dWFsIERPTSBvcHRpb24gZWxlbWVudFxuICAgICAgbmV3RWxlbWVudC5hcHBlbmRDaGlsZChuZXdPcHRpb24pXG4gICAgfSlcbiAgfVxuICAvLyBDb3B5IHNwZWNpZmllZCBhdHRyaWJ1dGVzXG4gIGNvbnN0IGF0dHJzVG9Db3B5ID0gW1xuICAgICdhbHQnLFxuICAgICd0aXRsZScsXG4gICAgJ3R5cGUnLFxuICAgICd2YWx1ZScsXG4gICAgJ3JvbGUnLFxuICAgICdhcmlhLWxhYmVsJyxcbiAgICAnYXJpYS1oaWRkZW4nLFxuICAgICdhcmlhLXNlbGVjdGVkJ1xuICBdXG4gIGF0dHJzVG9Db3B5LmZvckVhY2goKGF0dHIpID0+IHtcbiAgICBjb25zdCB2YWx1ZSA9IGVsZW1lbnQuZ2V0QXR0cmlidXRlKGF0dHIpXG4gICAgaWYgKHZhbHVlKSB7XG4gICAgICBuZXdFbGVtZW50LnNldEF0dHJpYnV0ZShhdHRyLCB2YWx1ZSlcbiAgICB9XG4gIH0pXG4gIGlmIChyZWNpcGUua2VlcF9hdHRyKSB7XG4gICAgLy8gY29uc29sZS5sb2coXCJhdHRyaWJ1dGVzIHRvIGtlZXA6IFwiLCByZWNpcGUua2VlcF9hdHRyKTtcbiAgICBmb3IgKGNvbnN0IGtleSBvZiByZWNpcGUua2VlcF9hdHRyKSB7XG4gICAgICBjb25zdCB2YWx1ZSA9IGVsZW1lbnQuZ2V0QXR0cmlidXRlKGtleSlcbiAgICAgIC8vIGNvbnNvbGUubG9nKGtleSwgdmFsdWUpXG4gICAgICBpZiAodmFsdWUpIHtcbiAgICAgICAgbmV3RWxlbWVudC5zZXRBdHRyaWJ1dGUoa2V5LCB2YWx1ZSlcbiAgICAgIH1cbiAgICB9XG4gIH1cbiAgaWYgKHJlY2lwZVsnY2xhc3MnXSkge1xuICAgIG5ld0VsZW1lbnQuc2V0QXR0cmlidXRlKCdjbGFzcycsIHJlY2lwZVsnY2xhc3MnXSlcbiAgfVxuICBpZiAocmVjaXBlWydpZCddKSB7XG4gICAgbmV3RWxlbWVudC5zZXRBdHRyaWJ1dGUoJ2lkJywgcmVjaXBlWydpZCddKVxuICB9XG5cbiAgLy8gT3ZlcnJpZGUgYXR0cmlidXRlcyBpZiBzcGVjaWZpZWRcbiAgaWYgKHJlY2lwZS5vdmVycmlkZV9hdHRyKSB7XG4gICAgZm9yIChjb25zdCBrZXkgaW4gcmVjaXBlLm92ZXJyaWRlX2F0dHIpIHtcbiAgICAgIG5ld0VsZW1lbnQuc2V0QXR0cmlidXRlKGtleSwgcmVjaXBlLm92ZXJyaWRlX2F0dHJba2V5XShlbGVtZW50KSlcbiAgICB9XG4gIH1cblxuICAvLyBQcm9jZXNzIGNoaWxkcmVuXG4gIGlmIChyZWNpcGUuY2hpbGRyZW4gJiYgcmVjaXBlLmNoaWxkcmVuLmxlbmd0aCA+IDApIHtcbiAgICBmb3IgKGNvbnN0IGNoaWxkUmVjaXBlIG9mIHJlY2lwZS5jaGlsZHJlbikge1xuICAgICAgY29uc3Qgc2VsZWN0b3IgPSBjaGlsZFJlY2lwZS5kaXJlY3RfY2hpbGRcbiAgICAgICAgPyBgOnNjb3BlID4gJHtjaGlsZFJlY2lwZS5zZWxlY3Rvcn1gXG4gICAgICAgIDogY2hpbGRSZWNpcGUuc2VsZWN0b3JcbiAgICAgIGxldCBjaGlsZEVsZW1lbnRzXG4gICAgICBpZiAoY2hpbGRSZWNpcGUudXNlX3Jvb3QpIHtcbiAgICAgICAgY2hpbGRFbGVtZW50cyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoc2VsZWN0b3IpXG4gICAgICAgIGNvbnNvbGUubG9nKCd1c2Ugcm9vdCBmb3IgJywgY2hpbGRFbGVtZW50cylcbiAgICAgIH0gZWxzZSBjaGlsZEVsZW1lbnRzID0gZWxlbWVudC5xdWVyeVNlbGVjdG9yQWxsKHNlbGVjdG9yKVxuICAgICAgY2hpbGRFbGVtZW50cy5mb3JFYWNoKChjaGlsZEVsZW1lbnQ6IGFueSwgaW5kZXg6IG51bWJlcikgPT4ge1xuICAgICAgICBjb25zdCBjaGlsZE5vZGUgPSBwcm9jZXNzRWxlbWVudChjaGlsZEVsZW1lbnQsIGNoaWxkUmVjaXBlLCBwYXJlbnROYW1lLCBpbmRleClcbiAgICAgICAgbmV3RWxlbWVudC5hcHBlbmRDaGlsZChjaGlsZE5vZGUpXG4gICAgICAgIGlmIChjaGlsZFJlY2lwZS5pbnNlcnRfc3BsaXRfbWFya2VyKSB7XG4gICAgICAgICAgY29uc3QgZXZlcnkgPSBjaGlsZFJlY2lwZS5pbnNlcnRfc3BsaXRfbWFya2VyX2V2ZXJ5IHx8IDFcbiAgICAgICAgICBpZiAoaW5kZXggJSBldmVyeSA9PSAwKSB7XG4gICAgICAgICAgICBjb25zdCBzcGxpdE1hcmtlciA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3NwbGl0LW1hcmtlcicpXG4gICAgICAgICAgICBuZXdFbGVtZW50LmFwcGVuZENoaWxkKHNwbGl0TWFya2VyKVxuICAgICAgICAgICAgLy8gY29uc29sZS5sb2coXCJpbnNlcnRpbmcgc3BsaXQgbWFya2VyIDFcIik7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGlmIChjaGlsZFJlY2lwZS5pbnNlcnRfc3BsaXRfbWFya2VyKSB7XG4gICAgICAgICAgLy8gY29uc29sZS5sb2coXCJpbnNlcnRpbmcgc3BsaXQgbWFya2VyIDJcIik7XG4gICAgICAgICAgY29uc3Qgc3BsaXRNYXJrZXIgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdzcGxpdC1tYXJrZXInKVxuICAgICAgICAgIG5ld0VsZW1lbnQuYXBwZW5kQ2hpbGQoc3BsaXRNYXJrZXIpXG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgLy8gY29uc29sZS5sb2coJ25vIHNwbGl0IG1hcmtlcicpXG4gICAgICAgIH1cbiAgICAgIH0pXG4gICAgfVxuICB9XG5cbiAgLy8gSGFuZGxlIGVtcHR5IG1lc3NhZ2VzXG4gIGlmIChyZWNpcGUuZW1wdHlfbWVzc2FnZSAmJiBuZXdFbGVtZW50LmNoaWxkcmVuLmxlbmd0aCA9PT0gMCkge1xuICAgIGNvbnN0IGVtcHR5VGV4dE5vZGUgPSBkb2N1bWVudC5jcmVhdGVUZXh0Tm9kZShyZWNpcGUuZW1wdHlfbWVzc2FnZSlcbiAgICBuZXdFbGVtZW50LmFwcGVuZENoaWxkKGVtcHR5VGV4dE5vZGUpXG4gIH1cblxuICByZXR1cm4gbmV3RWxlbWVudFxufVxuIiwiaW1wb3J0IHsgc3RhcnRzV2l0aCB9IGZyb20gJ2xvZGFzaCdcbmltcG9ydCB7IGZpbHRlcl91cmwsIHVybF9pbmNsdWRlcywgY2hlY2tfdXNlcl9pZF91cmwgfSBmcm9tICcuLi9jb25maWcnXG5cbmV4cG9ydCBmdW5jdGlvbiBpc0Zyb21Qb3B1cChlbGVtZW50OiBIVE1MRWxlbWVudCk6IGJvb2xlYW4ge1xuICByZXR1cm4gZWxlbWVudC5jbG9zZXN0KCcjcmVhc29uLW1vZGFsJykgIT09IG51bGxcbn1cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiB1cGRhdGVfaWNvbih1cmwpIHtcbiAgY29uc29sZS5sb2coJ3VwZGF0ZV9pY29uJywgdXJsKVxuICBpZiAoIShhd2FpdCBzaG91bGRFeGNsdWRlKHVybCkpKSB7XG4gICAgY29uc29sZS5sb2coJ2FjdGl2ZSBpY29uJylcbiAgICBjaHJvbWUuYWN0aW9uLnNldEljb24oe1xuICAgICAgcGF0aDogJy4uL2ljb24ucG5nJ1xuICAgIH0pXG4gIH0gZWxzZSB7XG4gICAgY29uc29sZS5sb2coJ2luYWN0aXZlIGljb24nKVxuICAgIGNocm9tZS5hY3Rpb24uc2V0SWNvbih7XG4gICAgICBwYXRoOiAnLi4vaW5hY3RpdmVfaWNvbi5wbmcnXG4gICAgfSlcbiAgfVxufVxuXG5leHBvcnQgZnVuY3Rpb24gZmluZFBhZ2VNZXRhKCkge1xuICBjb25zdCBhbGxfZWxlbWVudF93aXRoX21ldGFfZGF0YSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJ1tkYXRhLWVsZW1lbnQtbWV0YS1uYW1lXScpXG5cbiAgY29uc3QgZ3JvdXBlZFJlc3VsdCA9IHt9XG5cbiAgYWxsX2VsZW1lbnRfd2l0aF9tZXRhX2RhdGEuZm9yRWFjaCgoZWxlbWVudCkgPT4ge1xuICAgIGNvbnN0IG1ldGFOYW1lID0gZWxlbWVudC5nZXRBdHRyaWJ1dGUoJ2RhdGEtZWxlbWVudC1tZXRhLW5hbWUnKVxuICAgIGNvbnN0IG1ldGFEYXRhID0gZWxlbWVudC5nZXRBdHRyaWJ1dGUoJ2RhdGEtZWxlbWVudC1tZXRhLWRhdGEnKVxuXG4gICAgaWYgKCFncm91cGVkUmVzdWx0W21ldGFOYW1lXSkge1xuICAgICAgZ3JvdXBlZFJlc3VsdFttZXRhTmFtZV0gPSBbXVxuICAgIH1cbiAgICBncm91cGVkUmVzdWx0W21ldGFOYW1lXS5wdXNoKEpTT04ucGFyc2UobWV0YURhdGEpKVxuICB9KVxuXG4gIHJldHVybiBncm91cGVkUmVzdWx0XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBnZXRDbGlja2FibGVFbGVtZW50c0luVmlld3BvcnQoKSB7XG4gIC8vIFNlbGVjdCBhbGwgcG90ZW50aWFsIGNsaWNrYWJsZSBlbGVtZW50c1xuICBjb25zdCBkb2N1bWVudENvcHkgPSBkb2N1bWVudC5jbG9uZU5vZGUodHJ1ZSkgYXMgRG9jdW1lbnRcbiAgY29uc3QgYWxsRWxlbWVudHMgPSBkb2N1bWVudENvcHkucXVlcnlTZWxlY3RvckFsbChcbiAgICAnYSwgYnV0dG9uLCBbb25jbGlja10sIGlucHV0W3R5cGU9XCJidXR0b25cIl0sIGlucHV0W3R5cGU9XCJzdWJtaXRcIl0nXG4gIClcblxuICAvLyBDaGVjayBpZiBlYWNoIGVsZW1lbnQgaXMgaW4gdGhlIHZpZXdwb3J0IGFuZCBhZGQgbWFya2VyXG4gIGFsbEVsZW1lbnRzLmZvckVhY2goKGVsZW1lbnQpID0+IHtcbiAgICBjb25zdCByZWN0ID0gZWxlbWVudC5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKVxuICAgIGlmIChcbiAgICAgIHJlY3QudG9wID49IDAgJiZcbiAgICAgIHJlY3QubGVmdCA+PSAwICYmXG4gICAgICByZWN0LmJvdHRvbSA8PSAod2luZG93LmlubmVySGVpZ2h0IHx8IGRvY3VtZW50LmRvY3VtZW50RWxlbWVudC5jbGllbnRIZWlnaHQpICYmXG4gICAgICByZWN0LnJpZ2h0IDw9ICh3aW5kb3cuaW5uZXJXaWR0aCB8fCBkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQuY2xpZW50V2lkdGgpXG4gICAgKSB7XG4gICAgICAvLyBBZGQgbWFya2VyIGF0dHJpYnV0ZSB0byB0aGUgZWxlbWVudFxuICAgICAgZWxlbWVudC5zZXRBdHRyaWJ1dGUoJ3Zpc2libGUtY2xpY2thYmxlLWVsZW1lbnQtbWFya2VyJywgJ3RydWUnKVxuICAgIH1cbiAgfSlcbiAgcmV0dXJuIGRvY3VtZW50Q29weVxufVxuXG4vLyBBZGQgY2xlYW51cCBmdW5jdGlvbiB0byByZW1vdmUgbWFya2VycyB3aGVuIG5lZWRlZFxuZXhwb3J0IGZ1bmN0aW9uIHJlbW92ZUNsaWNrYWJsZU1hcmtlcnMoKSB7XG4gIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJ1t2aXNpYmxlLWNsaWNrYWJsZS1lbGVtZW50LW1hcmtlcl0nKS5mb3JFYWNoKChlbGVtZW50KSA9PiB7XG4gICAgZWxlbWVudC5yZW1vdmVBdHRyaWJ1dGUoJ3Zpc2libGUtY2xpY2thYmxlLWVsZW1lbnQtbWFya2VyJylcbiAgfSlcbn1cblxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIHNob3VsZEV4Y2x1ZGUodXJsOiBzdHJpbmcsIGlnbm9yZVVzZXJJZDogYm9vbGVhbiA9IGZhbHNlKSB7XG4gIGlmICghaWdub3JlVXNlcklkKSB7XG4gICAgaWYgKGNocm9tZS5zdG9yYWdlKSB7XG4gICAgICBjb25zdCByZXN1bHQgPSBhd2FpdCBjaHJvbWUuc3RvcmFnZS5sb2NhbC5nZXQoJ3VzZXJJZCcpXG4gICAgICBpZiAoIXJlc3VsdC51c2VySWQpIHtcbiAgICAgICAgY29uc29sZS5sb2coJ25vIHVzZXIgaWQnKVxuICAgICAgICAvLyBpZiB0aGVyZSBpcyBubyB1c2VyIGlkLCB3ZSBzaG91bGQgbm90IGJlIHJlY29yZGluZyBhbnl0aGluZ1xuICAgICAgICByZXR1cm4gdHJ1ZVxuICAgICAgfVxuICAgIH0gZWxzZSB7XG4gICAgICBjb25zdCB1c2VySWQgPSBhd2FpdCBuZXcgUHJvbWlzZTxzdHJpbmc+KChyZXNvbHZlKSA9PiB7XG4gICAgICAgIGNvbnN0IGhhbmRsZU1lc3NhZ2UgPSAoZXZlbnQ6IE1lc3NhZ2VFdmVudCkgPT4ge1xuICAgICAgICAgIGlmIChldmVudC5kYXRhLnR5cGUgPT09ICdHRVRfVVNFUl9JRF9SRVNQT05TRScpIHtcbiAgICAgICAgICAgIHdpbmRvdy5yZW1vdmVFdmVudExpc3RlbmVyKCdtZXNzYWdlJywgaGFuZGxlTWVzc2FnZSlcbiAgICAgICAgICAgIHJlc29sdmUoZXZlbnQuZGF0YS51c2VySWQpXG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKCdtZXNzYWdlJywgaGFuZGxlTWVzc2FnZSlcbiAgICAgICAgd2luZG93LnBvc3RNZXNzYWdlKHsgdHlwZTogJ0dFVF9VU0VSX0lEJyB9LCAnKicpXG4gICAgICB9KVxuICAgICAgaWYgKCF1c2VySWQpIHtcbiAgICAgICAgLy8gaWYgdGhlcmUgaXMgbm8gdXNlciBpZCwgd2Ugc2hvdWxkIG5vdCBiZSByZWNvcmRpbmcgYW55dGhpbmdcbiAgICAgICAgcmV0dXJuIHRydWVcbiAgICAgIH1cbiAgICB9XG4gIH1cbiAgaWYgKCF1cmwpIHtcbiAgICByZXR1cm4gdHJ1ZVxuICB9XG4gIHJldHVybiAoXG4gICAgIXVybF9pbmNsdWRlcy5zb21lKChpbmNsdWRlVXJsKSA9PiB1cmwuaW5jbHVkZXMoaW5jbHVkZVVybCkpIHx8XG4gICAgZmlsdGVyX3VybC5zb21lKChleGNsdWRlVXJsKSA9PiB1cmwuaW5jbHVkZXMoZXhjbHVkZVVybCkpXG4gIClcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGdlbmVyYXRlSHRtbFNuYXBzaG90SWQodGltZXN0YW1wOiBzdHJpbmcsIHV1aWQ6IHN0cmluZykge1xuICBjb25zdCB1cmwgPSB3aW5kb3cubG9jYXRpb24uaHJlZlxuICByZXR1cm4gYGh0bWxfJHtoYXNoQ29kZSh1cmwpfV8ke3RpbWVzdGFtcH1fJHt1dWlkfWBcbn1cbmV4cG9ydCBmdW5jdGlvbiBoYXNoQ29kZShzdHI6IHN0cmluZykge1xuICBsZXQgaGFzaCA9IDBcbiAgZm9yIChsZXQgaSA9IDA7IGkgPCBzdHIubGVuZ3RoOyBpKyspIHtcbiAgICBoYXNoID0gKGhhc2ggPDwgNSkgLSBoYXNoICsgc3RyLmNoYXJDb2RlQXQoaSlcbiAgICBoYXNoIHw9IDBcbiAgfVxuICBjb25zb2xlLmxvZygnSGFzaCB2YWx1ZSBiZWZvcmUgcmV0dXJuOicsIGhhc2gpXG4gIHJldHVybiBoYXNoLnRvU3RyaW5nKClcbn1cblxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGNoZWNrX3VzZXJfaWQodXNlcl9pZDogc3RyaW5nKSB7XG4gIHRyeSB7XG4gICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBmZXRjaChgJHtjaGVja191c2VyX2lkX3VybH0/dXNlcl9pZD0ke3VzZXJfaWR9YCwge1xuICAgICAgbWV0aG9kOiAnR0VUJ1xuICAgIH0pXG4gICAgY29uc3QgZGF0YSA9IGF3YWl0IHJlc3BvbnNlLmpzb24oKVxuXG4gICAgaWYgKHJlc3BvbnNlLm9rKSB7XG4gICAgICByZXR1cm4gJ3N1Y2Nlc3MnXG4gICAgfSBlbHNlIHtcbiAgICAgIHJldHVybiBkYXRhIHx8ICdVbmtub3duIGVycm9yJ1xuICAgIH1cbiAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICBjb25zb2xlLmxvZyhgRXJyb3I6ICR7KGVycm9yIGFzIEVycm9yKS5tZXNzYWdlfWApXG4gIH1cbiAgcmV0dXJuICdVbmtub3duIGVycm9yJ1xufVxuXG5pbXBvcnQgeyByZWNpcGVzIH0gZnJvbSAnLi4vcmVjaXBlX25ldydcbmltcG9ydCB7IHByb2Nlc3NFbGVtZW50IH0gZnJvbSAnLi9lbGVtZW50LXByb2Nlc3NvcidcbmZ1bmN0aW9uIHNlbGVjdFJlY2lwZSgpIHtcbiAgY29uc3QgcGFyc2VkVXJsID0gbmV3IFVSTCh3aW5kb3cubG9jYXRpb24uaHJlZilcbiAgbGV0IHBhdGggPSBwYXJzZWRVcmwucGF0aG5hbWVcbiAgcGF0aCA9IHBhdGggIT09ICcvJyA/IHBhdGgucmVwbGFjZSgvXFwvKyQvLCAnJykgOiBwYXRoXG5cbiAgZm9yIChjb25zdCByZWNpcGUgb2YgcmVjaXBlcykge1xuICAgIGNvbnN0IG1hdGNoTWV0aG9kID0gcmVjaXBlLm1hdGNoX21ldGhvZCB8fCAndGV4dCdcbiAgICBpZiAobWF0Y2hNZXRob2QgPT09ICd0ZXh0Jykge1xuICAgICAgdHJ5IHtcbiAgICAgICAgLy8gRXhlY3V0ZSBzY3JpcHQgaW4gdGFiIHRvIGNoZWNrIGZvciBtYXRjaGluZyBlbGVtZW50XG4gICAgICAgIGNvbnN0IGVsZW1lbnQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKHJlY2lwZS5tYXRjaClcblxuICAgICAgICBjb25zdCBoYXNNYXRjaCA9XG4gICAgICAgICAgZWxlbWVudCAmJlxuICAgICAgICAgICghcmVjaXBlLm1hdGNoX3RleHQgfHxcbiAgICAgICAgICAgIChlbGVtZW50LnRleHRDb250ZW50Py50b0xvd2VyQ2FzZSgpLmluY2x1ZGVzKHJlY2lwZS5tYXRjaF90ZXh0LnRvTG93ZXJDYXNlKCkpID8/IGZhbHNlKSlcblxuICAgICAgICBpZiAoaGFzTWF0Y2gpIHtcbiAgICAgICAgICBjb25zb2xlLmxvZygnbWF0Y2hlZCB3aXRoIHJlY2lwZSAnLCByZWNpcGUubWF0Y2gpXG4gICAgICAgICAgcmV0dXJuIHJlY2lwZVxuICAgICAgICB9XG4gICAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgICBjb25zb2xlLmVycm9yKCdFcnJvciBjaGVja2luZyB0ZXh0IG1hdGNoOicsIGVycm9yKVxuICAgICAgfVxuICAgIH0gZWxzZSBpZiAobWF0Y2hNZXRob2QgPT09ICd1cmwnKSB7XG4gICAgICBpZiAocmVjaXBlLm1hdGNoID09PSBwYXRoKSB7XG4gICAgICAgIGNvbnNvbGUubG9nKCdtYXRjaGVkIHdpdGggcmVjaXBlICcsIHJlY2lwZS5tYXRjaClcbiAgICAgICAgcmV0dXJuIHJlY2lwZVxuICAgICAgfSBlbHNlIGlmIChcbiAgICAgICAgcmVjaXBlLm1hdGNoX3dpdGhfcmVmICYmXG4gICAgICAgIChwYXRoLnN0YXJ0c1dpdGgocmVjaXBlLm1hdGNoICsgJy9yZWY9JykgfHwgcGF0aC5zdGFydHNXaXRoKHJlY2lwZS5tYXRjaCArICdyZWY9JykpXG4gICAgICApIHtcbiAgICAgICAgY29uc29sZS5sb2coJ21hdGNoZWQgd2l0aCByZWNpcGUgJywgcmVjaXBlLm1hdGNoKVxuICAgICAgICByZXR1cm4gcmVjaXBlXG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgdGhyb3cgbmV3IEVycm9yKGBObyBtYXRjaGluZyByZWNpcGUgZm91bmQgZm9yIHBhdGg6ICR7cGF0aH1gKVxufVxuXG5leHBvcnQgZnVuY3Rpb24gcHJvY2Vzc1JlY2lwZSgpIHtcbiAgY29uc29sZS5sb2coJ3N0YXJ0IHByb2Nlc3MgcmVjaXBlJylcbiAgdHJ5IHtcbiAgICBjb25zdCByZWNpcGUgPSBzZWxlY3RSZWNpcGUoKVxuICAgIGNvbnN0IHJvb3RFbGVtZW50ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihyZWNpcGUuc2VsZWN0b3IpXG4gICAgaWYgKHJvb3RFbGVtZW50KSB7XG4gICAgICBjb25zdCBuZXdSb290ID0gcHJvY2Vzc0VsZW1lbnQocm9vdEVsZW1lbnQsIHJlY2lwZSlcbiAgICAgIGNvbnN0IHNpbXBsaWZpZWRIVE1MID0gbmV3Um9vdC5vdXRlckhUTUxcbiAgICAgIHJldHVybiBzaW1wbGlmaWVkSFRNTFxuICAgIH1cbiAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICBjb25zb2xlLmVycm9yKCdFcnJvciBwcm9jZXNzaW5nIHJlY2lwZTonLCBlcnJvcilcbiAgfVxufVxuXG4vLyBSZXBsYWNlIHRoZSBzaW1wbGUgcXVlc3Rpb24gd2l0aCBhIG1vcmUgZGV0YWlsZWQgb25lIGJhc2VkIG9uIGV2ZW50IHR5cGVcbmV4cG9ydCBmdW5jdGlvbiBnZXRDdXN0b21RdWVzdGlvbihldmVudFR5cGU6IHN0cmluZywgZGF0YTogYW55KTogc3RyaW5nIHtcbiAgc3dpdGNoIChldmVudFR5cGUpIHtcbiAgICBjYXNlICdjbGlja19hJzpcbiAgICBjYXNlICdjbGlja19iJzpcbiAgICBjYXNlICdjbGlja19jJzpcbiAgICAgIC8vIENoZWNrIGlmIGl0J3MgYSBzcGVjaWZpYyB0eXBlIG9mIGNsaWNrXG4gICAgICBpZiAoXG4gICAgICAgIGRhdGFbJ2RhdGEtc2VtYW50aWMtaWQnXSA9PT0gJ2J1eWJveC5kZWxpdmVyeS5zdWJzY3JpYmVfc2F2ZV8ucHVyY2hhc2VfZm9ybS5zZXRfdXBfbm93JyB8fFxuICAgICAgICBkYXRhLnRhcmdldC5pbm5lclRleHQgPT09ICdTZXQgVXAgTm93J1xuICAgICAgKSB7XG4gICAgICAgIHJldHVybiAnV2hhdCBtYWtlcyB5b3UgY2hvb3NlIHRvIHN1YnNjcmliZSB0byB0aGlzIHByb2R1Y3Q/J1xuICAgICAgfSBlbHNlIGlmIChcbiAgICAgICAgZGF0YVsnZGF0YS1zZW1hbnRpYy1pZCddID09PSAnYnV5Ym94LmRlbGl2ZXJ5Lm9uZV90aW1lX3B1cmNoYXNlXy5wdXJjaGFzZV9mb3JtLmJ1eV9ub3cnIHx8XG4gICAgICAgIGRhdGFbJ2RhdGEtc2VtYW50aWMtaWQnXSA9PT0gJ2J1eWJveC5kZWxpdmVyeS5wdXJjaGFzZV9mb3JtLmJ1eScgfHxcbiAgICAgICAgZGF0YS50YXJnZXQuaWQgPT09ICdidXktbm93LWJ1dHRvbidcbiAgICAgICkge1xuICAgICAgICByZXR1cm4gJ1doYXQgZG8geW91IGxpa2UgYWJvdXQgdGhpcyBwYXJ0aWN1bGFyIHByb2R1Y3Q/J1xuICAgICAgfSBlbHNlIGlmIChcbiAgICAgICAgZGF0YVsnZGF0YS1zZW1hbnRpYy1pZCddPy5zdGFydHNXaXRoKCdzZWFyY2hfcmVzdWx0cy4nKSB8fFxuICAgICAgICBkYXRhWydkYXRhLXNlbWFudGljLWlkJ10/LnN0YXJ0c1dpdGgoJ3Byb2R1Y3RfbGlzdC4nKSB8fFxuICAgICAgICAoZGF0YVsnZGF0YS1zZW1hbnRpYy1pZCddPy5zdGFydHNXaXRoKCdhY3RpdmVfaXRlbV9saXN0LicpICYmXG4gICAgICAgICAgZGF0YVsnZGF0YS1zZW1hbnRpYy1pZCddPy5lbmRzV2l0aCgnLnByb2R1Y3RfZGV0YWlsJykpIHx8XG4gICAgICAgIGRhdGEudGFyZ2V0LmNsYXNzTmFtZT8uaW5jbHVkZXMoJ3NjLXByb2R1Y3QtbGluaycpXG4gICAgICApIHtcbiAgICAgICAgcmV0dXJuICdZb3UgY2xpY2tlZCBvbiB0aGlzIHByb2R1Y3QuIFdoYXQgY2F1Z2h0IHlvdXIgYXR0ZW50aW9uIGNvbXBhcmVkIHRvIHRoZSBvdGhlciBvcHRpb25zIHlvdSBzYXc/J1xuICAgICAgfSBlbHNlIGlmIChcbiAgICAgICAgZGF0YVsnZGF0YS1zZW1hbnRpYy1pZCddID09PVxuICAgICAgICAgICdidXlib3guZGVsaXZlcnkub25lX3RpbWVfcHVyY2hhc2VfLnB1cmNoYXNlX2Zvcm0uYWRkX3RvX2NhcnQnIHx8XG4gICAgICAgIGRhdGFbJ2RhdGEtc2VtYW50aWMtaWQnXSA9PT0gJ2J1eWJveC5kZWxpdmVyeS5wdXJjaGFzZV9mb3JtLmFkZF90b19jYXJ0JyB8fFxuICAgICAgICBkYXRhLnRhcmdldC5pZCA9PT0gJ2FkZC10by1jYXJ0LWJ1dHRvbicgfHxcbiAgICAgICAgZGF0YS50YXJnZXQubmFtZSA9PT0gJ3N1Ym1pdC5hZGRUb0NhcnQnXG4gICAgICApIHtcbiAgICAgICAgcmV0dXJuICdXaGF0IG1ha2VzIHlvdSBkZWNpZGUgdG8gYWRkIHRoaXMgaXRlbSB0byB5b3VyIGNhcnQ/J1xuICAgICAgfSBlbHNlIGlmIChkYXRhWydkYXRhLXNlbWFudGljLWlkJ10gPT09ICduYXZfYmFyLnNlYXJjaF9idXR0b24nKSB7XG4gICAgICAgIHJldHVybiAnV2hhdCBhcmUgeW91IHNlYXJjaGluZyBmb3I/J1xuICAgICAgfSBlbHNlIGlmIChcbiAgICAgICAgZGF0YVsnZGF0YS1zZW1hbnRpYy1pZCddPy5zdGFydHNXaXRoKCdyZWZpbmVtZW50cy4nKSB8fFxuICAgICAgICBkYXRhWydkYXRhLXNlbWFudGljLWlkJ10/LnN0YXJ0c1dpdGgoJ2ZpbHRlcnMuJylcbiAgICAgICkge1xuICAgICAgICByZXR1cm4gJ1doYXQgYXJlIHlvdSBob3BpbmcgdG8gZmluZCB3aXRoIHRoaXMgZmlsdGVyPydcbiAgICAgIH0gZWxzZSBpZiAoZGF0YVsnZGF0YS1zZW1hbnRpYy1pZCddPy5zdGFydHNXaXRoKCdwcm9kdWN0X29wdGlvbnMuJykpIHtcbiAgICAgICAgcmV0dXJuICdXaGF0IGRvIHlvdSBsaWtlIGFib3V0IHRoaXMgcHJvZHVjdCBvcHRpb24/J1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgcmV0dXJuICdZb3UgY2xpY2tlZCBvbiB0aGlzIGVsZW1lbnQuIENvdWxkIHlvdSBzaGFyZSB3aGF0IHlvdSB3ZXJlIHRyeWluZyB0byBkbyBvciBmaW5kPydcbiAgICAgIH1cblxuICAgIGNhc2UgJ3Njcm9sbCc6XG4gICAgICByZXR1cm4gJ1lvdSBzY3JvbGxlZCBvbiB0aGlzIHBhZ2UuIFdoYXQgaW5mb3JtYXRpb24gYXJlIHlvdSBsb29raW5nIGZvcj8nXG4gICAgY2FzZSAnaW5wdXQnOlxuICAgICAgcmV0dXJuICdZb3UgdHlwZWQgaW4gdGhpcyBpbnB1dCBmaWVsZC4gV2hhdCBhcmUgeW91IHNlYXJjaGluZyBmb3I/J1xuICAgIGNhc2UgJ25hdmlnYXRpb24nOlxuICAgICAgaWYgKGRhdGEubmF2aWdhdGlvblR5cGUgPT09ICdiYWNrJykge1xuICAgICAgICByZXR1cm4gJ1doeSBkaWQgeW91IGRlY2lkZSB0byBnbyBiYWNrIHRvIHRoZSBwcmV2aW91cyBwYWdlPydcbiAgICAgIH0gZWxzZSBpZiAoZGF0YS5uYXZpZ2F0aW9uVHlwZSA9PT0gJ2ZvcndhcmQnKSB7XG4gICAgICAgIHJldHVybiAnV2h5IGRpZCB5b3UgZGVjaWRlIHRvIHJldHVybiB0byB0aGlzIHBhZ2UgPydcbiAgICAgIH1cbiAgICAgIHJldHVybiBgV2hhdCBpcyB0aGUgcmVhc29uIGZvciB0aGlzICR7ZGF0YS5uYXZpZ2F0aW9uVHlwZX0gbmF2aWdhdGlvbj9gXG4gICAgY2FzZSAndGFiQWN0aXZhdGUnOlxuICAgICAgcmV0dXJuIGBXaHkgZGlkIHlvdSBzd2l0Y2ggdG8gdGhpcyB0YWI/YFxuICAgIGRlZmF1bHQ6XG4gICAgICByZXR1cm4gYFdoYXQgaXMgdGhlIHJlYXNvbiBmb3IgdGhlICR7ZXZlbnRUeXBlfSBhY3Rpb24/YFxuICB9XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBpc1ZhbGlkUmVhc29uKHJlYXNvbjogc3RyaW5nKTogYm9vbGVhbiB7XG4gIGlmICghcmVhc29uIHx8IHJlYXNvbi50cmltKCkubGVuZ3RoID09PSAwKSB7XG4gICAgcmV0dXJuIGZhbHNlIC8vIEVtcHR5IGlucHV0XG4gIH1cbiAgaWYgKHJlYXNvbi50cmltKCkubGVuZ3RoIDwgMiB8fCByZWFzb24ubGVuZ3RoIDwgNSkge1xuICAgIHJldHVybiBmYWxzZSAvLyBUb28gc2hvcnQgdG8gYmUgbWVhbmluZ2Z1bCwgYXQgbGVhc3QgNSBjaGFyYWN0ZXJzIGFuZCAyIHdvcmRzXG4gIH1cbiAgLy8gQ2hlY2sgZm9yIHJlcGV0aXRpdmUgb3IgbWVhbmluZ2xlc3MgaW5wdXQgKGUuZy4sIFwiYWFhXCIsXCIhISFcIilcbiAgY29uc3QgbWVhbmluZ2xlc3NQYXR0ZXJucyA9IFsvXiguKVxcMXszLH0kLywgL15bXmEtekEtWjAtOV0rJC9dXG4gIGZvciAoY29uc3QgcGF0dGVybiBvZiBtZWFuaW5nbGVzc1BhdHRlcm5zKSB7XG4gICAgaWYgKHBhdHRlcm4udGVzdChyZWFzb24udG9Mb3dlckNhc2UoKS5yZXBsYWNlKC9cXHMrL2csICcnKSkpIHtcbiAgICAgIHJldHVybiBmYWxzZVxuICAgIH1cbiAgfVxuICByZXR1cm4gdHJ1ZVxufVxuIiwiY29uc3QgcmFuZG9tVVVJRCA9IHR5cGVvZiBjcnlwdG8gIT09ICd1bmRlZmluZWQnICYmIGNyeXB0by5yYW5kb21VVUlEICYmIGNyeXB0by5yYW5kb21VVUlELmJpbmQoY3J5cHRvKTtcbmV4cG9ydCBkZWZhdWx0IHsgcmFuZG9tVVVJRCB9O1xuIiwibGV0IGdldFJhbmRvbVZhbHVlcztcbmNvbnN0IHJuZHM4ID0gbmV3IFVpbnQ4QXJyYXkoMTYpO1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gcm5nKCkge1xuICAgIGlmICghZ2V0UmFuZG9tVmFsdWVzKSB7XG4gICAgICAgIGlmICh0eXBlb2YgY3J5cHRvID09PSAndW5kZWZpbmVkJyB8fCAhY3J5cHRvLmdldFJhbmRvbVZhbHVlcykge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdjcnlwdG8uZ2V0UmFuZG9tVmFsdWVzKCkgbm90IHN1cHBvcnRlZC4gU2VlIGh0dHBzOi8vZ2l0aHViLmNvbS91dWlkanMvdXVpZCNnZXRyYW5kb212YWx1ZXMtbm90LXN1cHBvcnRlZCcpO1xuICAgICAgICB9XG4gICAgICAgIGdldFJhbmRvbVZhbHVlcyA9IGNyeXB0by5nZXRSYW5kb21WYWx1ZXMuYmluZChjcnlwdG8pO1xuICAgIH1cbiAgICByZXR1cm4gZ2V0UmFuZG9tVmFsdWVzKHJuZHM4KTtcbn1cbiIsImltcG9ydCB2YWxpZGF0ZSBmcm9tICcuL3ZhbGlkYXRlLmpzJztcbmNvbnN0IGJ5dGVUb0hleCA9IFtdO1xuZm9yIChsZXQgaSA9IDA7IGkgPCAyNTY7ICsraSkge1xuICAgIGJ5dGVUb0hleC5wdXNoKChpICsgMHgxMDApLnRvU3RyaW5nKDE2KS5zbGljZSgxKSk7XG59XG5leHBvcnQgZnVuY3Rpb24gdW5zYWZlU3RyaW5naWZ5KGFyciwgb2Zmc2V0ID0gMCkge1xuICAgIHJldHVybiAoYnl0ZVRvSGV4W2FycltvZmZzZXQgKyAwXV0gK1xuICAgICAgICBieXRlVG9IZXhbYXJyW29mZnNldCArIDFdXSArXG4gICAgICAgIGJ5dGVUb0hleFthcnJbb2Zmc2V0ICsgMl1dICtcbiAgICAgICAgYnl0ZVRvSGV4W2FycltvZmZzZXQgKyAzXV0gK1xuICAgICAgICAnLScgK1xuICAgICAgICBieXRlVG9IZXhbYXJyW29mZnNldCArIDRdXSArXG4gICAgICAgIGJ5dGVUb0hleFthcnJbb2Zmc2V0ICsgNV1dICtcbiAgICAgICAgJy0nICtcbiAgICAgICAgYnl0ZVRvSGV4W2FycltvZmZzZXQgKyA2XV0gK1xuICAgICAgICBieXRlVG9IZXhbYXJyW29mZnNldCArIDddXSArXG4gICAgICAgICctJyArXG4gICAgICAgIGJ5dGVUb0hleFthcnJbb2Zmc2V0ICsgOF1dICtcbiAgICAgICAgYnl0ZVRvSGV4W2FycltvZmZzZXQgKyA5XV0gK1xuICAgICAgICAnLScgK1xuICAgICAgICBieXRlVG9IZXhbYXJyW29mZnNldCArIDEwXV0gK1xuICAgICAgICBieXRlVG9IZXhbYXJyW29mZnNldCArIDExXV0gK1xuICAgICAgICBieXRlVG9IZXhbYXJyW29mZnNldCArIDEyXV0gK1xuICAgICAgICBieXRlVG9IZXhbYXJyW29mZnNldCArIDEzXV0gK1xuICAgICAgICBieXRlVG9IZXhbYXJyW29mZnNldCArIDE0XV0gK1xuICAgICAgICBieXRlVG9IZXhbYXJyW29mZnNldCArIDE1XV0pLnRvTG93ZXJDYXNlKCk7XG59XG5mdW5jdGlvbiBzdHJpbmdpZnkoYXJyLCBvZmZzZXQgPSAwKSB7XG4gICAgY29uc3QgdXVpZCA9IHVuc2FmZVN0cmluZ2lmeShhcnIsIG9mZnNldCk7XG4gICAgaWYgKCF2YWxpZGF0ZSh1dWlkKSkge1xuICAgICAgICB0aHJvdyBUeXBlRXJyb3IoJ1N0cmluZ2lmaWVkIFVVSUQgaXMgaW52YWxpZCcpO1xuICAgIH1cbiAgICByZXR1cm4gdXVpZDtcbn1cbmV4cG9ydCBkZWZhdWx0IHN0cmluZ2lmeTtcbiIsImltcG9ydCBuYXRpdmUgZnJvbSAnLi9uYXRpdmUuanMnO1xuaW1wb3J0IHJuZyBmcm9tICcuL3JuZy5qcyc7XG5pbXBvcnQgeyB1bnNhZmVTdHJpbmdpZnkgfSBmcm9tICcuL3N0cmluZ2lmeS5qcyc7XG5mdW5jdGlvbiB2NChvcHRpb25zLCBidWYsIG9mZnNldCkge1xuICAgIGlmIChuYXRpdmUucmFuZG9tVVVJRCAmJiAhYnVmICYmICFvcHRpb25zKSB7XG4gICAgICAgIHJldHVybiBuYXRpdmUucmFuZG9tVVVJRCgpO1xuICAgIH1cbiAgICBvcHRpb25zID0gb3B0aW9ucyB8fCB7fTtcbiAgICBjb25zdCBybmRzID0gb3B0aW9ucy5yYW5kb20gfHwgKG9wdGlvbnMucm5nIHx8IHJuZykoKTtcbiAgICBybmRzWzZdID0gKHJuZHNbNl0gJiAweDBmKSB8IDB4NDA7XG4gICAgcm5kc1s4XSA9IChybmRzWzhdICYgMHgzZikgfCAweDgwO1xuICAgIGlmIChidWYpIHtcbiAgICAgICAgb2Zmc2V0ID0gb2Zmc2V0IHx8IDA7XG4gICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgMTY7ICsraSkge1xuICAgICAgICAgICAgYnVmW29mZnNldCArIGldID0gcm5kc1tpXTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gYnVmO1xuICAgIH1cbiAgICByZXR1cm4gdW5zYWZlU3RyaW5naWZ5KHJuZHMpO1xufVxuZXhwb3J0IGRlZmF1bHQgdjQ7XG4iLCJpbXBvcnQge1xuICBmaW5kUGFnZU1ldGEsXG4gIGlzRnJvbVBvcHVwLFxuICBnZXRDbGlja2FibGVFbGVtZW50c0luVmlld3BvcnQsXG4gIHNob3VsZEV4Y2x1ZGUsXG4gIGdlbmVyYXRlSHRtbFNuYXBzaG90SWQsXG4gIHByb2Nlc3NSZWNpcGUsXG4gIGlzVmFsaWRSZWFzb25cbn0gZnJvbSAnLi91dGlscy91dGlsJ1xuaW1wb3J0IHsgdjQgYXMgdXVpZHY0IH0gZnJvbSAndXVpZCdcbmltcG9ydCB7IHNjcm9sbF90aHJlc2hvbGQgfSBmcm9tICcuL2NvbmZpZydcblxuYXN5bmMgZnVuY3Rpb24gY2FwdHVyZVNjcmVlbnNob3QodGltZXN0YW1wOiBzdHJpbmcsIHV1aWQ6IHN0cmluZykge1xuICB0cnkge1xuICAgIC8vIGNvbnN0IHNjcmVlbnNob3RJZCA9IGBzY3JlZW5zaG90XyR7dGltZXN0YW1wfV8ke3V1aWR9YFxuICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgY2hyb21lLnJ1bnRpbWUuc2VuZE1lc3NhZ2Uoe1xuICAgICAgYWN0aW9uOiAnY2FwdHVyZVNjcmVlbnNob3QnLFxuICAgICAgdGltZXN0YW1wLFxuICAgICAgdXVpZFxuICAgIH0pXG5cbiAgICBpZiAoIXJlc3BvbnNlLnN1Y2Nlc3MpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcihyZXNwb25zZS5tZXNzYWdlIHx8ICdTY3JlZW5zaG90IGNhcHR1cmUgZmFpbGVkJylcbiAgICB9XG5cbiAgICB3aW5kb3cucG9zdE1lc3NhZ2UoXG4gICAgICB7XG4gICAgICAgIHR5cGU6ICdTQ1JFRU5TSE9UX0NPTVBMRVRFJyxcbiAgICAgICAgdGltZXN0YW1wOiB0aW1lc3RhbXAsXG4gICAgICAgIHN1Y2Nlc3M6IHRydWVcbiAgICAgIH0sXG4gICAgICAnKidcbiAgICApXG4gIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgY29uc29sZS5lcnJvcignRXJyb3IgY2FwdHVyaW5nIHNjcmVlbnNob3QgaW4gY29udGVudCBzY3JpcHQ6JywgZXJyb3IpXG5cbiAgICB3aW5kb3cucG9zdE1lc3NhZ2UoXG4gICAgICB7XG4gICAgICAgIHR5cGU6ICdTQ1JFRU5TSE9UX0NPTVBMRVRFJyxcbiAgICAgICAgdGltZXN0YW1wOiB0aW1lc3RhbXAsXG4gICAgICAgIHN1Y2Nlc3M6IGZhbHNlLFxuICAgICAgICBlcnJvcjogZXJyb3IubWVzc2FnZVxuICAgICAgfSxcbiAgICAgICcqJ1xuICAgIClcbiAgfVxufVxuXG53aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcignbWVzc2FnZScsIGFzeW5jIChldmVudCkgPT4ge1xuICBpZiAoZXZlbnQuc291cmNlICE9PSB3aW5kb3cpIHJldHVyblxuICBpZiAoZXZlbnQuZGF0YS50eXBlICYmIGV2ZW50LmRhdGEudHlwZSA9PT0gJ0dFVF9VU0VSX0lEJykge1xuICAgIGNvbnN0IHJlc3VsdCA9IGF3YWl0IGNocm9tZS5zdG9yYWdlLmxvY2FsLmdldCgndXNlcklkJylcbiAgICBjb25zdCB1c2VySWQgPSByZXN1bHQudXNlcklkXG4gICAgd2luZG93LnBvc3RNZXNzYWdlKHsgdHlwZTogJ0dFVF9VU0VSX0lEX1JFU1BPTlNFJywgdXNlcklkOiB1c2VySWQgfSwgJyonKVxuICB9XG4gIGlmIChldmVudC5kYXRhLnR5cGUgJiYgZXZlbnQuZGF0YS50eXBlID09PSAnQ0FQVFVSRV9TQ1JFRU5TSE9UJykge1xuICAgIGF3YWl0IGNhcHR1cmVTY3JlZW5zaG90KGV2ZW50LmRhdGEudGltZXN0YW1wLCBldmVudC5kYXRhLnV1aWQpXG4gIH1cbiAgaWYgKGV2ZW50LmRhdGEudHlwZSAmJiBldmVudC5kYXRhLnR5cGUgPT09ICdTQVZFX0lOVEVSQUNUSU9OX0RBVEEnKSB7XG4gICAgdHJ5IHtcbiAgICAgIGNvbnN0IGRhdGFGb3JCYWNrZ3JvdW5kID0geyAuLi5ldmVudC5kYXRhLmRhdGEgfVxuXG4gICAgICBjb25zdCByZXNwb25zZTIgPSBhd2FpdCBjaHJvbWUucnVudGltZS5zZW5kTWVzc2FnZSh7XG4gICAgICAgIGFjdGlvbjogJ3NhdmVEYXRhJyxcbiAgICAgICAgZGF0YTogZGF0YUZvckJhY2tncm91bmRcbiAgICAgIH0pXG4gICAgICBpZiAoIXJlc3BvbnNlMi5zdWNjZXNzKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihyZXNwb25zZTIubWVzc2FnZSB8fCAnaW50ZXJhY3Rpb24gY2FwdHVyZSBmYWlsZWQnKVxuICAgICAgfVxuICAgICAgd2luZG93LnBvc3RNZXNzYWdlKFxuICAgICAgICB7XG4gICAgICAgICAgdHlwZTogJ0lOVEVSQUNUSU9OX0NPTVBMRVRFJyxcbiAgICAgICAgICB0aW1lc3RhbXA6IGV2ZW50LmRhdGEuZGF0YS50aW1lc3RhbXAsXG4gICAgICAgICAgc3VjY2VzczogdHJ1ZVxuICAgICAgICB9LFxuICAgICAgICAnKidcbiAgICAgIClcbiAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgY29uc29sZS5lcnJvcignRXJyb3Igc2F2aW5nIGludGVyYWN0aW9uIGRhdGE6JywgZXJyb3IpXG4gICAgICB3aW5kb3cucG9zdE1lc3NhZ2UoXG4gICAgICAgIHtcbiAgICAgICAgICB0eXBlOiAnSU5URVJBQ1RJT05fQ09NUExFVEUnLFxuICAgICAgICAgIHN1Y2Nlc3M6IGZhbHNlLFxuICAgICAgICAgIGVycm9yOiBlcnJvci5tZXNzYWdlLFxuICAgICAgICAgIHRpbWVzdGFtcDogZXZlbnQuZGF0YS5kYXRhLnRpbWVzdGFtcFxuICAgICAgICB9LFxuICAgICAgICAnKidcbiAgICAgIClcbiAgICB9XG4gIH1cbn0pXG5cbmNvbnN0IHdvcmsgPSAoKSA9PiB7XG4gIC8vIERlZmluZSBpbnRlcmZhY2VzIGZvciBSZWNpcGUgYW5kIE9yZGVyRGV0YWlsXG4gIGludGVyZmFjZSBSZWNpcGUge1xuICAgIHRhZ19uYW1lPzogc3RyaW5nXG4gICAgdGV4dF9zZWxlY3Rvcj86IHN0cmluZ1xuICAgIHRleHRfanM/OiBzdHJpbmdcbiAgICBhZGRfdGV4dD86IGJvb2xlYW5cbiAgICB0ZXh0X2Zvcm1hdD86IHN0cmluZ1xuICAgIG5hbWU/OiBzdHJpbmdcbiAgICBjbGlja2FibGU/OiBib29sZWFuXG4gICAgY2xpY2tfc2VsZWN0b3I/OiBzdHJpbmdcbiAgICBrZWVwX2F0dHI/OiB7IFtrZXk6IHN0cmluZ106IHN0cmluZyB9XG4gICAgb3ZlcnJpZGVfYXR0cj86IHsgW2tleTogc3RyaW5nXTogc3RyaW5nIH1cbiAgICBjaGlsZHJlbj86IFJlY2lwZVtdXG4gICAgaW5zZXJ0X3NwbGl0X21hcmtlcj86IGJvb2xlYW5cbiAgICBpbnNlcnRfc3BsaXRfbWFya2VyX2V2ZXJ5PzogbnVtYmVyXG4gICAgZGlyZWN0X2NoaWxkPzogYm9vbGVhblxuICAgIGVtcHR5X21lc3NhZ2U/OiBzdHJpbmdcbiAgICBba2V5OiBzdHJpbmddOiBhbnkgLy8gQWxsb3cgYWRkaXRpb25hbCBwcm9wZXJ0aWVzXG4gIH1cblxuICBpbnRlcmZhY2UgT3JkZXJEZXRhaWwge1xuICAgIG5hbWU6IHN0cmluZ1xuICAgIHByaWNlOiBudW1iZXJcbiAgfVxuXG4gIC8vIEV4dGVuZCB0aGUgV2luZG93IGludGVyZmFjZSB0byBpbmNsdWRlIGN1c3RvbSBwcm9wZXJ0aWVzXG5cbiAgZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcignRE9NQ29udGVudExvYWRlZCcsICgpID0+IHtcbiAgICBjb25zb2xlLmxvZygnRE9NQ29udGVudExvYWRlZCBldmVudCB0cmlnZ2VyZWQnKVxuICAgIHByb2Nlc3NSZWNpcGUoKVxuICB9KVxuXG4gIC8vIEZ1bmN0aW9uIHRvIGNhcHR1cmUgaW50ZXJhY3Rpb25zXG4gIGFzeW5jIGZ1bmN0aW9uIGNhcHR1cmVJbnRlcmFjdGlvbihcbiAgICBldmVudFR5cGU6IHN0cmluZyxcbiAgICB0YXJnZXQ6IGFueSxcbiAgICB0aW1lc3RhbXA6IHN0cmluZyxcbiAgICB1dWlkOiBzdHJpbmcsXG4gICAgc2Nyb2xsRGlzdGFuY2U/OiBudW1iZXJcbiAgKSB7XG4gICAgdHJ5IHtcbiAgICAgIC8vIEdlbmVyYXRlIG5ldyBIVE1MIHNuYXBzaG90IElEXG4gICAgICBjb25zdCBjdXJyZW50U25hcHNob3RJZCA9IGdlbmVyYXRlSHRtbFNuYXBzaG90SWQodGltZXN0YW1wLCB1dWlkKVxuXG4gICAgICBjb25zdCBzaW1wbGlmaWVkSFRNTCA9IHByb2Nlc3NSZWNpcGUoKVxuICAgICAgY29uc3QgbWFya2VkRG9jID0gZ2V0Q2xpY2thYmxlRWxlbWVudHNJblZpZXdwb3J0KClcblxuICAgICAgY29uc3QgcGFnZU1ldGEgPSBmaW5kUGFnZU1ldGEoKVxuXG4gICAgICBsZXQgZGF0YSA9IHtcbiAgICAgICAgdXVpZDogdXVpZCxcbiAgICAgICAgZXZlbnRUeXBlLFxuICAgICAgICB0aW1lc3RhbXA6IHRpbWVzdGFtcCxcblxuICAgICAgICBodG1sU25hcHNob3RJZDogY3VycmVudFNuYXBzaG90SWQsIC8vIFVzZSB0aGUgbmV3IHNuYXBzaG90IElEXG4gICAgICAgIHBhZ2VNZXRhOiBwYWdlTWV0YSB8fCAnJyxcbiAgICAgICAgaHRtbENvbnRlbnQ6IG1hcmtlZERvYy5kb2N1bWVudEVsZW1lbnQub3V0ZXJIVE1MLFxuICAgICAgICBzaW1wbGlmaWVkSFRNTDogc2ltcGxpZmllZEhUTUxcbiAgICAgIH1cbiAgICAgIGlmIChldmVudFR5cGUgPT09ICdzY3JvbGwnKSB7XG4gICAgICAgIGRhdGFbJ3Njcm9sbERpc3RhbmNlJ10gPSBzY3JvbGxEaXN0YW5jZVxuICAgICAgICBkYXRhWyd0YXJnZXQnXSA9IHRhcmdldFxuICAgICAgfVxuICAgICAgaWYgKGV2ZW50VHlwZSA9PT0gJ2lucHV0Jykge1xuICAgICAgICBkYXRhWydpbnB1dC12YWx1ZXMnXSA9IHRhcmdldD8udmFsdWUgfHwgJydcbiAgICAgICAgZGF0YVsnaW5wdXQtaWQnXSA9IHRhcmdldD8uaWQgfHwgJydcbiAgICAgICAgZGF0YVsnZGF0YS1lbGVtZW50LW1ldGEtbmFtZSddID0gdGFyZ2V0LmdldEF0dHJpYnV0ZSgnZGF0YS1lbGVtZW50LW1ldGEtbmFtZScpIHx8ICcnXG4gICAgICAgIGRhdGFbJ2RhdGEtZWxlbWVudC1tZXRhLWRhdGEnXSA9IHRhcmdldC5nZXRBdHRyaWJ1dGUoJ2RhdGEtZWxlbWVudC1tZXRhLWRhdGEnKSB8fCAnJ1xuICAgICAgfVxuICAgICAgYXdhaXQgY2hyb21lLnJ1bnRpbWUuc2VuZE1lc3NhZ2UoeyBhY3Rpb246ICdzYXZlRGF0YScsIGRhdGEgfSlcbiAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgY29uc29sZS5lcnJvcihgRXJyb3IgZHVyaW5nICR7ZXZlbnRUeXBlfSBldmVudCBoYW5kbGluZzpgLCBlcnJvcilcbiAgICB9XG4gIH1cbiAgLy8gVmFyaWFibGVzIHRvIHRyYWNrIHNjcm9sbCBldmVudHNcbiAgbGV0IGlzU2Nyb2xsaW5nID0gZmFsc2VcbiAgbGV0IHNjcm9sbFRpbWVvdXQ6IG51bWJlciB8IHVuZGVmaW5lZFxuICBsZXQgc2Nyb2xsU3RhcnRUb3AgPSB3aW5kb3cuc2Nyb2xsWSB8fCBkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQuc2Nyb2xsVG9wXG4gIGxldCBhY2N1bXVsYXRlZFNjcm9sbERpc3RhbmNlID0gMFxuXG4gIC8vIEZ1bmN0aW9uIHRvIGhhbmRsZSB0aGUgZmlyc3Qgc2Nyb2xsIGV2ZW50IGluIGEgc2Nyb2xsIHNlcXVlbmNlXG4gIGFzeW5jIGZ1bmN0aW9uIGhhbmRsZUZpcnN0U2Nyb2xsKHNjcm9sbFV1aWQ6IHN0cmluZywgc2Nyb2xsVGltZXN0YW1wOiBzdHJpbmcpIHtcbiAgICB0cnkge1xuICAgICAgY29uc29sZS5sb2coJ0ZpcnN0IHNjcm9sbCBldmVudCcpXG4gICAgICBjYXB0dXJlU2NyZWVuc2hvdChzY3JvbGxUaW1lc3RhbXAsIHNjcm9sbFV1aWQpXG4gICAgICBwcm9jZXNzUmVjaXBlKClcbiAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgY29uc29sZS5lcnJvcignRXJyb3IgZHVyaW5nIGZpcnN0IHNjcm9sbCBoYW5kbGluZzonLCBlcnJvcilcbiAgICB9XG4gIH1cblxuICAvLyBGdW5jdGlvbiB0byBoYW5kbGUgd2hlbiBzY3JvbGxpbmcgc3RvcHMgKG5vIHNjcm9sbCBldmVudHMgd2l0aGluIHRoZSB0aHJlc2hvbGQpXG4gIGFzeW5jIGZ1bmN0aW9uIGhhbmRsZVNjcm9sbFN0b3Aoc2Nyb2xsVXVpZDogc3RyaW5nLCBzY3JvbGxUaW1lc3RhbXA6IHN0cmluZykge1xuICAgIHRyeSB7XG4gICAgICBjb25zb2xlLmxvZygnc2Nyb2xsIHN0b3AgdXVpZCcsIHNjcm9sbFV1aWQpXG4gICAgICBjb25zdCBjdXJyZW50U2Nyb2xsVG9wID0gd2luZG93LnNjcm9sbFkgfHwgZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50LnNjcm9sbFRvcFxuICAgICAgYWNjdW11bGF0ZWRTY3JvbGxEaXN0YW5jZSArPSBjdXJyZW50U2Nyb2xsVG9wIC0gc2Nyb2xsU3RhcnRUb3BcblxuICAgICAgaWYgKGFjY3VtdWxhdGVkU2Nyb2xsRGlzdGFuY2UgIT09IDApIHtcbiAgICAgICAgLy8gUmVjb3JkIHRoZSBzY3JvbGwgaW50ZXJhY3Rpb24gd2l0aCB0aGUgYWNjdW11bGF0ZWQgc2Nyb2xsIGRpc3RhbmNlXG4gICAgICAgIGF3YWl0IGNhcHR1cmVJbnRlcmFjdGlvbihcbiAgICAgICAgICAnc2Nyb2xsJyxcbiAgICAgICAgICB3aW5kb3cubG9jYXRpb24uaHJlZixcbiAgICAgICAgICBzY3JvbGxUaW1lc3RhbXAsXG4gICAgICAgICAgc2Nyb2xsVXVpZCxcbiAgICAgICAgICBhY2N1bXVsYXRlZFNjcm9sbERpc3RhbmNlXG4gICAgICAgIClcbiAgICAgICAgLy8gUmVzZXQgYWNjdW11bGF0ZWQgc2Nyb2xsIGRpc3RhbmNlXG4gICAgICAgIGFjY3VtdWxhdGVkU2Nyb2xsRGlzdGFuY2UgPSAwXG4gICAgICAgIHNjcm9sbFN0YXJ0VG9wID0gY3VycmVudFNjcm9sbFRvcFxuICAgICAgfVxuICAgICAgaXNTY3JvbGxpbmcgPSBmYWxzZVxuICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICBjb25zb2xlLmVycm9yKCdFcnJvciBkdXJpbmcgc2Nyb2xsIHN0b3AgaGFuZGxpbmc6JywgZXJyb3IpXG4gICAgfVxuICB9XG5cbiAgbGV0IHNjcm9sbFV1aWQgPSAnJ1xuICBsZXQgc2Nyb2xsVGltZXN0YW1wID0gJydcbiAgLy8gRXZlbnQgbGlzdGVuZXIgZm9yIHNjcm9sbCBldmVudHNcbiAgZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcignc2Nyb2xsJywgYXN5bmMgKGV2ZW50KSA9PiB7XG4gICAgY29uc29sZS5sb2coJ3Njcm9sbCBldmVudCcpXG5cbiAgICBpZiAoZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3JlYXNvbi1tb2RhbCcpKSB7XG4gICAgICByZXR1cm5cbiAgICB9XG4gICAgaWYgKFxuICAgICAgZXZlbnQudGFyZ2V0ICE9PSB3aW5kb3cgJiZcbiAgICAgIGV2ZW50LnRhcmdldCAhPT0gZG9jdW1lbnQgJiZcbiAgICAgIGV2ZW50LnRhcmdldCAhPT0gZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50XG4gICAgKSB7XG4gICAgICBjb25zb2xlLmxvZygnU2Nyb2xsIGV2ZW50IGlnbm9yZWQgZnJvbSBhIG5lc3RlZCBzY3JvbGxhYmxlIGNvbnRhaW5lcicpXG4gICAgICByZXR1cm5cbiAgICB9XG5cbiAgICBpZiAoIWlzU2Nyb2xsaW5nKSB7XG4gICAgICBpc1Njcm9sbGluZyA9IHRydWVcbiAgICAgIHNjcm9sbFN0YXJ0VG9wID0gd2luZG93LnNjcm9sbFkgfHwgZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50LnNjcm9sbFRvcFxuICAgICAgc2Nyb2xsVXVpZCA9IHV1aWR2NCgpXG4gICAgICBzY3JvbGxUaW1lc3RhbXAgPSBuZXcgRGF0ZSgpLnRvSVNPU3RyaW5nKClcbiAgICAgIGF3YWl0IGhhbmRsZUZpcnN0U2Nyb2xsKHNjcm9sbFV1aWQsIHNjcm9sbFRpbWVzdGFtcClcbiAgICB9XG5cbiAgICAvLyBDbGVhciB0aGUgZXhpc3RpbmcgdGltZW91dCBhbmQgc2V0IGEgbmV3IG9uZVxuICAgIHdpbmRvdy5jbGVhclRpbWVvdXQoc2Nyb2xsVGltZW91dClcbiAgICBzY3JvbGxUaW1lb3V0ID0gd2luZG93LnNldFRpbWVvdXQoXG4gICAgICAoKSA9PiBoYW5kbGVTY3JvbGxTdG9wKHNjcm9sbFV1aWQsIHNjcm9sbFRpbWVzdGFtcCksXG4gICAgICBzY3JvbGxfdGhyZXNob2xkXG4gICAgKSAvLyBUaHJlc2hvbGQgb2YgMzAwbXNcbiAgfSlcblxuICAvLyBkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKFxuICAvLyAgICdibHVyJyxcbiAgLy8gICBhc3luYyAoZXZlbnQpID0+IHtcbiAgLy8gICAgIGNvbnN0IHRhcmdldCA9IGV2ZW50LnRhcmdldCBhcyBIVE1MRWxlbWVudFxuICAvLyAgICAgaWYgKGlzRnJvbVBvcHVwKHRhcmdldCkpIHJldHVyblxuICAvLyAgICAgaWYgKFxuICAvLyAgICAgICB0YXJnZXQgJiZcbiAgLy8gICAgICAgKCh0YXJnZXQudGFnTmFtZSA9PT0gJ0lOUFVUJyAmJiAodGFyZ2V0IGFzIEhUTUxJbnB1dEVsZW1lbnQpLnR5cGUgPT09ICd0ZXh0JykgfHxcbiAgLy8gICAgICAgICB0YXJnZXQudGFnTmFtZSA9PT0gJ1RFWFRBUkVBJylcbiAgLy8gICAgICkge1xuICAvLyAgICAgICBjb25zdCB0aW1lc3RhbXAgPSBuZXcgRGF0ZSgpLnRvSVNPU3RyaW5nKClcbiAgLy8gICAgICAgY29uc3QgdXVpZCA9IHV1aWR2NCgpXG4gIC8vICAgICAgIGF3YWl0IGNhcHR1cmVTY3JlZW5zaG90KHRpbWVzdGFtcCwgdXVpZClcbiAgLy8gICAgICAgYXdhaXQgY2FwdHVyZUludGVyYWN0aW9uKCdpbnB1dCcsIHRhcmdldCwgdGltZXN0YW1wLCB1dWlkKVxuICAvLyAgICAgfVxuICAvLyAgIH0sXG4gIC8vICAgdHJ1ZVxuICAvLyApXG5cbiAgZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcignRE9NQ29udGVudExvYWRlZCcsICgpID0+IHtcbiAgICAvLyBIYW5kbGUgYWxsIHR5cGVzIG9mIG9yZGVyIGJ1dHRvbnNcbiAgICBjb25zdCBwbGFjZU9yZGVyQnV0dG9ucyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoXG4gICAgICAnaW5wdXRbaWQ9XCJwbGFjZU9yZGVyXCJdLCBpbnB1dFtpZD1cInR1cmJvLWNoZWNrb3V0LXB5by1idXR0b25cIl0nXG4gICAgKVxuICAgIGNvbnN0IGJ1eU5vd0J1dHRvbiA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJ2lucHV0W2lkPVwiYnV5LW5vdy1idXR0b25cIl0nKVxuICAgIGNvbnN0IHNldHVwTm93QnV0dG9uID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcbiAgICAgICdidXR0b25baWQ9XCJyY3gtc3Vic2NyaWJlLXN1Ym1pdC1idXR0b24tYW5ub3VuY2VcIl0nXG4gICAgKVxuICAgIGNvbnN0IHByb2NlZWRUb0NoZWNrb3V0QnV0dG9uID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignaW5wdXRbbmFtZT1cInByb2NlZWRUb1JldGFpbENoZWNrb3V0XCJdJylcblxuICAgIC8vIEhhbmRsZSBCdXkgTm93IGFuZCBTZXQgVXAgTm93IGJ1dHRvbnMgaWYgcHJlc2VudFxuICAgIDtbYnV5Tm93QnV0dG9uLCBzZXR1cE5vd0J1dHRvbl0uZm9yRWFjaCgoYnV0dG9uKSA9PiB7XG4gICAgICBpZiAoYnV0dG9uKSB7XG4gICAgICAgIGJ1dHRvbi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIGFzeW5jICgpID0+IHtcbiAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgY29uc3QgcHJvZHVjdEluZm8gPSB7XG4gICAgICAgICAgICAgIHRpdGxlOiAoZG9jdW1lbnQucXVlcnlTZWxlY3RvcignI3RpdGxlJykgYXMgSFRNTEVsZW1lbnQpPy5pbm5lclRleHQ/LnRyaW0oKSB8fCAnJyxcbiAgICAgICAgICAgICAgcHJpY2U6XG4gICAgICAgICAgICAgICAgKFxuICAgICAgICAgICAgICAgICAgZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcbiAgICAgICAgICAgICAgICAgICAgJ3NwYW4uYS1wcmljZS5hb2stYWxpZ24tY2VudGVyLnJlaW52ZW50UHJpY2VQcmljZVRvUGF5TWFyZ2luLnByaWNlVG9QYXknXG4gICAgICAgICAgICAgICAgICApIGFzIEhUTUxFbGVtZW50XG4gICAgICAgICAgICAgICAgKT8uaW5uZXJUZXh0Py50cmltKCkgfHwgJycsXG4gICAgICAgICAgICAgIGFzaW46IChkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCdpbnB1dCNBU0lOJykgYXMgSFRNTElucHV0RWxlbWVudCk/LnZhbHVlIHx8ICcnLFxuICAgICAgICAgICAgICBvcHRpb25zOiB7fVxuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAvLyBHZXQgYWxsIG9wdGlvbiBzZWxlY3Rpb25zXG4gICAgICAgICAgICBjb25zdCBvcHRpb25Sb3dzID0gQXJyYXkuZnJvbShcbiAgICAgICAgICAgICAgZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbChcbiAgICAgICAgICAgICAgICAnI3R3aXN0ZXIgZGl2LmEtcm93OmhhcyhsYWJlbC5hLWZvcm0tbGFiZWwpOmhhcyhzcGFuLnNlbGVjdGlvbiknXG4gICAgICAgICAgICAgIClcbiAgICAgICAgICAgIClcbiAgICAgICAgICAgIG9wdGlvblJvd3MuZm9yRWFjaCgocm93KSA9PiB7XG4gICAgICAgICAgICAgIGNvbnN0IGxhYmVsID1cbiAgICAgICAgICAgICAgICAocm93LnF1ZXJ5U2VsZWN0b3IoJ2xhYmVsLmEtZm9ybS1sYWJlbCcpIGFzIEhUTUxFbGVtZW50KT8uaW5uZXJUZXh0Py5yZXBsYWNlKFxuICAgICAgICAgICAgICAgICAgJzogJyxcbiAgICAgICAgICAgICAgICAgICcnXG4gICAgICAgICAgICAgICAgKSB8fCAnJ1xuICAgICAgICAgICAgICBjb25zdCB2YWx1ZSA9IChyb3cucXVlcnlTZWxlY3Rvcignc3Bhbi5zZWxlY3Rpb24nKSBhcyBIVE1MRWxlbWVudCk/LmlubmVyVGV4dCB8fCAnJ1xuICAgICAgICAgICAgICBpZiAobGFiZWwgJiYgdmFsdWUpIHtcbiAgICAgICAgICAgICAgICA7KHByb2R1Y3RJbmZvLm9wdGlvbnMgYXMgYW55KVtsYWJlbF0gPSB2YWx1ZVxuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9KVxuXG4gICAgICAgICAgICBjb25zb2xlLmxvZyhgJHtidXR0b24uaWR9IGNsaWNrZWQgLSBQcm9kdWN0IEluZm86YCwgcHJvZHVjdEluZm8pXG5cbiAgICAgICAgICAgIGF3YWl0IGNocm9tZS5ydW50aW1lLnNlbmRNZXNzYWdlKHtcbiAgICAgICAgICAgICAgYWN0aW9uOiAnc2F2ZU9yZGVyJyxcbiAgICAgICAgICAgICAgZGF0YToge1xuICAgICAgICAgICAgICAgIHRpbWVzdGFtcDogbmV3IERhdGUoKS50b0lTT1N0cmluZygpLFxuICAgICAgICAgICAgICAgIG5hbWU6IHByb2R1Y3RJbmZvLnRpdGxlLFxuICAgICAgICAgICAgICAgIHByaWNlOiBwYXJzZUZsb2F0KHByb2R1Y3RJbmZvLnByaWNlLnJlcGxhY2UoL1teMC05Ll0vZywgJycpKSxcbiAgICAgICAgICAgICAgICBhc2luOiBwcm9kdWN0SW5mby5hc2luLFxuICAgICAgICAgICAgICAgIG9wdGlvbnM6IHByb2R1Y3RJbmZvLm9wdGlvbnNcbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSlcbiAgICAgICAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgICAgICAgY29uc29sZS5lcnJvcihgRXJyb3IgY2FwdHVyaW5nICR7YnV0dG9uLmlkfSBwcm9kdWN0IGluZm86YCwgZXJyb3IpXG4gICAgICAgICAgfVxuICAgICAgICB9KVxuICAgICAgfVxuICAgIH0pXG4gICAgaWYgKHByb2NlZWRUb0NoZWNrb3V0QnV0dG9uKSB7XG4gICAgICBwcm9jZWVkVG9DaGVja291dEJ1dHRvbi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIGFzeW5jIChldmVudCkgPT4ge1xuICAgICAgICB0cnkge1xuICAgICAgICAgIGNvbnN0IHNlbGVjdGVkSXRlbXMgPSBbXVxuICAgICAgICAgIGNvbnN0IGNhcnRJdGVtcyA9IEFycmF5LmZyb20oZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnW2lkXj1cInNjLWFjdGl2ZS1cIl0nKSkuZmlsdGVyKFxuICAgICAgICAgICAgKGl0ZW0pID0+IGl0ZW0uaWQgIT09ICdzYy1hY3RpdmUtY2FydCdcbiAgICAgICAgICApXG4gICAgICAgICAgZm9yIChjb25zdCBpdGVtIG9mIGNhcnRJdGVtcykge1xuICAgICAgICAgICAgY29uc3QgY2hlY2tib3ggPSBpdGVtLnF1ZXJ5U2VsZWN0b3IoJ2lucHV0W3R5cGU9XCJjaGVja2JveFwiXScpIGFzIEhUTUxJbnB1dEVsZW1lbnRcbiAgICAgICAgICAgIGlmIChjaGVja2JveCAmJiBjaGVja2JveC5jaGVja2VkKSB7XG4gICAgICAgICAgICAgIGNvbnN0IHByb2R1Y3RMaW5rID0gaXRlbS5xdWVyeVNlbGVjdG9yKCcuc2MtaXRlbS1wcm9kdWN0LXRpdGxlLWNvbnQgLnNjLXByb2R1Y3QtbGluaycpXG4gICAgICAgICAgICAgIGlmIChwcm9kdWN0TGluaykge1xuICAgICAgICAgICAgICAgIGNvbnN0IGZ1bGxOYW1lRWxlbWVudCA9IHByb2R1Y3RMaW5rLnF1ZXJ5U2VsZWN0b3IoJy5hLXRydW5jYXRlLWZ1bGwnKVxuICAgICAgICAgICAgICAgIGNvbnN0IG5hbWUgPSBmdWxsTmFtZUVsZW1lbnQ/LnRleHRDb250ZW50Py50cmltKCkgfHwgJydcblxuICAgICAgICAgICAgICAgIGNvbnN0IGhyZWYgPSBwcm9kdWN0TGluay5nZXRBdHRyaWJ1dGUoJ2hyZWYnKSB8fCAnJ1xuICAgICAgICAgICAgICAgIGNvbnN0IGFzaW4gPSBocmVmLm1hdGNoKC9wcm9kdWN0XFwvKFtBLVowLTldezEwfSkvKT8uWzFdIHx8ICcnXG5cbiAgICAgICAgICAgICAgICBjb25zdCBwcmljZUVsZW1lbnQgPSBpdGVtLnF1ZXJ5U2VsZWN0b3IoJy5zYy1pdGVtLXByaWNlLWJsb2NrIC5hLW9mZnNjcmVlbicpXG4gICAgICAgICAgICAgICAgY29uc3QgcHJpY2UgPSBwcmljZUVsZW1lbnRcbiAgICAgICAgICAgICAgICAgID8gcGFyc2VGbG9hdChwcmljZUVsZW1lbnQudGV4dENvbnRlbnQ/LnJlcGxhY2UoL1teMC05Ll0vZywgJycpIHx8ICcwJylcbiAgICAgICAgICAgICAgICAgIDogMFxuXG4gICAgICAgICAgICAgICAgY29uc3Qgb3B0aW9uczogeyBba2V5OiBzdHJpbmddOiBzdHJpbmcgfSA9IHt9XG4gICAgICAgICAgICAgICAgY29uc3QgdmFyaWF0aW9uRWxlbWVudHMgPSBpdGVtLnF1ZXJ5U2VsZWN0b3JBbGwoJy5zYy1wcm9kdWN0LXZhcmlhdGlvbicpXG4gICAgICAgICAgICAgICAgdmFyaWF0aW9uRWxlbWVudHMuZm9yRWFjaCgodmFyaWF0aW9uKSA9PiB7XG4gICAgICAgICAgICAgICAgICBjb25zdCBsYWJlbCA9XG4gICAgICAgICAgICAgICAgICAgIHZhcmlhdGlvbi5xdWVyeVNlbGVjdG9yKCcuYS10ZXh0LWJvbGQnKT8udGV4dENvbnRlbnQ/LnRyaW0oKS5yZXBsYWNlKCc6JywgJycpIHx8XG4gICAgICAgICAgICAgICAgICAgICcnXG4gICAgICAgICAgICAgICAgICBjb25zdCB2YWx1ZSA9XG4gICAgICAgICAgICAgICAgICAgIHZhcmlhdGlvblxuICAgICAgICAgICAgICAgICAgICAgIC5xdWVyeVNlbGVjdG9yKCcuYS1zaXplLXNtYWxsOm5vdCguYS10ZXh0LWJvbGQpJylcbiAgICAgICAgICAgICAgICAgICAgICA/LnRleHRDb250ZW50Py50cmltKCkgfHwgJydcbiAgICAgICAgICAgICAgICAgIGlmIChsYWJlbCAmJiB2YWx1ZSkge1xuICAgICAgICAgICAgICAgICAgICBvcHRpb25zW2xhYmVsXSA9IHZhbHVlXG4gICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfSlcblxuICAgICAgICAgICAgICAgIHNlbGVjdGVkSXRlbXMucHVzaCh7XG4gICAgICAgICAgICAgICAgICB0aW1lc3RhbXA6IG5ldyBEYXRlKCkudG9JU09TdHJpbmcoKSxcbiAgICAgICAgICAgICAgICAgIG5hbWUsXG4gICAgICAgICAgICAgICAgICBhc2luLFxuICAgICAgICAgICAgICAgICAgcHJpY2UsXG4gICAgICAgICAgICAgICAgICBvcHRpb25zXG4gICAgICAgICAgICAgICAgfSlcbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgIH1cbiAgICAgICAgICBpZiAoc2VsZWN0ZWRJdGVtcy5sZW5ndGggPiAwKSB7XG4gICAgICAgICAgICBhd2FpdCBjaHJvbWUucnVudGltZS5zZW5kTWVzc2FnZSh7IGFjdGlvbjogJ3NhdmVPcmRlcicsIGRhdGE6IHNlbGVjdGVkSXRlbXMgfSlcbiAgICAgICAgICB9XG4gICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICAgICAgY29uc29sZS5lcnJvcignRXJyb3IgY2FwdHVyaW5nIHNlbGVjdGVkIGNhcnQgaXRlbXM6JywgZXJyb3IpXG4gICAgICAgIH1cbiAgICAgIH0pXG4gICAgfVxuICB9KVxuXG4gIGNocm9tZS5ydW50aW1lLm9uTWVzc2FnZS5hZGRMaXN0ZW5lcihcbiAgICAobWVzc2FnZSwgc2VuZGVyLCBzZW5kUmVzcG9uc2U6IChyZXNwb25zZT86IGFueSkgPT4gdm9pZCkgPT4ge1xuICAgICAgY29uc29sZS5sb2coJ21lc3NhZ2UnLCBtZXNzYWdlKVxuICAgICAgaWYgKG1lc3NhZ2UuYWN0aW9uID09PSAnZ2V0SFRNTCcpIHtcbiAgICAgICAgY29uc3Qgc2ltcGxpZmllZEhUTUwgPSBwcm9jZXNzUmVjaXBlKClcbiAgICAgICAgY29uc3QgbWFya2VkRG9jID0gZ2V0Q2xpY2thYmxlRWxlbWVudHNJblZpZXdwb3J0KClcbiAgICAgICAgY29uc3QgaHRtbENvbnRlbnQgPSBtYXJrZWREb2MuZG9jdW1lbnRFbGVtZW50Lm91dGVySFRNTFxuICAgICAgICBjb25zdCBwYWdlTWV0YSA9IGZpbmRQYWdlTWV0YSgpXG4gICAgICAgIHNlbmRSZXNwb25zZSh7IGh0bWw6IGh0bWxDb250ZW50LCBwYWdlTWV0YTogcGFnZU1ldGEsIHNpbXBsaWZpZWRIVE1MOiBzaW1wbGlmaWVkSFRNTCB9KVxuICAgICAgfVxuICAgICAgaWYgKG1lc3NhZ2UuYWN0aW9uID09PSAnc2hvd19wb3B1cCcpIHtcbiAgICAgICAgY29uc29sZS5sb2coJ3Nob3dfcG9wdXAnLCBtZXNzYWdlKVxuICAgICAgICAvLyBhc3NlcnQgdGhlcmUgaXNuJ3QgYWxyZWFkeSBhIHBvcHVwXG4gICAgICAgIGlmIChkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgncmVhc29uLW1vZGFsJykpIHtcbiAgICAgICAgICBzZW5kUmVzcG9uc2UoeyBzdWNjZXNzOiBmYWxzZSwgbWVzc2FnZTogJ3BvcHVwIGFscmVhZHkgZXhpc3RzJyB9KVxuICAgICAgICAgIHJldHVyblxuICAgICAgICB9XG4gICAgICAgIGNyZWF0ZU1vZGFsKG1lc3NhZ2UucXVlc3Rpb24sIHNlbmRSZXNwb25zZSlcbiAgICAgICAgcmV0dXJuIHRydWUgLy8gV2lsbCByZXNwb25kIGFzeW5jaHJvbm91c2x5XG4gICAgICB9XG4gICAgfVxuICApXG5cbiAgZnVuY3Rpb24gY3JlYXRlTW9kYWwocXVlc3Rpb246IHN0cmluZywgc2VuZFJlc3BvbnNlOiAocmVzcG9uc2U/OiBhbnkpID0+IHZvaWQpIHtcbiAgICBjb25zdCBtb2RhbEh0bWwgPSBgXG4gICAgICAgIDxkaXYgaWQ9XCJyZWFzb24tbW9kYWxcIiBzdHlsZT1cIlxuICAgICAgICAgICAgcG9zaXRpb246IGZpeGVkO1xuICAgICAgICAgICAgdG9wOiAwO1xuICAgICAgICAgICAgbGVmdDogMDtcbiAgICAgICAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgICAgICAgaGVpZ2h0OiAxMDAlO1xuICAgICAgICAgICAgYmFja2dyb3VuZDogcmdiYSgwLCAwLCAwLCAwLjUpO1xuICAgICAgICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgICAgICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICAgICAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICAgICAgICAgIHotaW5kZXg6IDEwMDAwO1xuICAgICAgICBcIj5cbiAgICAgICAgICAgIDxkaXYgc3R5bGU9XCJcbiAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kOiB3aGl0ZTtcbiAgICAgICAgICAgICAgICBwYWRkaW5nOiAyMHB4O1xuICAgICAgICAgICAgICAgIGJvcmRlci1yYWRpdXM6IDhweDtcbiAgICAgICAgICAgICAgICB3aWR0aDogNDAwcHg7XG4gICAgICAgICAgICBcIj5cbiAgICAgICAgICAgICAgICA8aDM+JHtxdWVzdGlvbn08L2gzPlxuICAgICAgICAgICAgICAgIDx0ZXh0YXJlYSBpZD1cInJlYXNvbi1pbnB1dFwiIHN0eWxlPVwiXG4gICAgICAgICAgICAgICAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgICAgICAgICAgICAgICBoZWlnaHQ6IDEwMHB4O1xuICAgICAgICAgICAgICAgICAgICBtYXJnaW46IDEwcHggMDtcbiAgICAgICAgICAgICAgICBcIj48L3RleHRhcmVhPlxuICAgICAgICAgICAgICAgIDxkaXYgaWQ9XCJlcnJvci1tZXNzYWdlXCIgc3R5bGU9XCJcbiAgICAgICAgICAgICAgICAgICAgY29sb3I6IHJlZDtcbiAgICAgICAgICAgICAgICAgICAgZGlzcGxheTogbm9uZTtcbiAgICAgICAgICAgICAgICAgICAgZm9udC1zaXplOiAxMnB4O1xuICAgICAgICAgICAgICAgICAgICBtYXJnaW4tdG9wOiA1cHg7XG4gICAgICAgICAgICAgICAgXCI+XG4gICAgICAgICAgICAgICAgICAgIFBsZWFzZSBlbnRlciBhIHZhbGlkIHJlYXNvbi5cbiAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICA8ZGl2IHN0eWxlPVwiXG4gICAgICAgICAgICAgICAgICAgIHRleHQtYWxpZ246IHJpZ2h0O1xuICAgICAgICAgICAgICAgICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgICAgICAgICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtZW5kO1xuICAgICAgICAgICAgICAgICAgICBnYXA6IDEwcHg7XG4gICAgICAgICAgICAgICAgXCI+XG4gICAgICAgICAgICAgICAgICAgIDxidXR0b24gaWQ9XCJyZWFzb24tc2tpcFwiPlNraXA8L2J1dHRvbj5cbiAgICAgICAgICAgICAgICAgICAgPGJ1dHRvbiBpZD1cInJlYXNvbi1zdWJtaXRcIj5TdWJtaXQ8L2J1dHRvbj5cbiAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICA8L2Rpdj5cbiAgICBgXG5cbiAgICBjb25zdCBtb2RhbENvbnRhaW5lciA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpXG4gICAgbW9kYWxDb250YWluZXIuaW5uZXJIVE1MID0gbW9kYWxIdG1sXG4gICAgLy8gaWYgYXR0YWNoLWRlc2t0b3Atc2lkZVNoZWV0IGV4aXN0c1xuICAgIGlmIChkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuYXR0YWNoLWRlc2t0b3Atc2lkZVNoZWV0Om5vdCguYW9rLWhpZGRlbiknKSkge1xuICAgICAgZG9jdW1lbnRcbiAgICAgICAgLnF1ZXJ5U2VsZWN0b3IoJy5hdHRhY2gtZGVza3RvcC1zaWRlU2hlZXQ6bm90KC5hb2staGlkZGVuKScpXG4gICAgICAgIC5hcHBlbmRDaGlsZChtb2RhbENvbnRhaW5lcilcbiAgICB9IGVsc2Uge1xuICAgICAgZG9jdW1lbnQuYm9keS5hcHBlbmRDaGlsZChtb2RhbENvbnRhaW5lcilcbiAgICB9XG5cbiAgICAvLyBBZGQgZXZlbnQgbGlzdGVuZXJzXG4gICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3JlYXNvbi1zdWJtaXQnKS5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsICgpID0+IHtcbiAgICAgIGNvbnN0IGlucHV0ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3JlYXNvbi1pbnB1dCcpIGFzIEhUTUxUZXh0QXJlYUVsZW1lbnRcbiAgICAgIGNvbnN0IGVycm9yTWVzc2FnZSA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdlcnJvci1tZXNzYWdlJykgYXMgSFRNTEVsZW1lbnRcbiAgICAgIGNvbnN0IHZhbHVlID0gaW5wdXQudmFsdWVcblxuICAgICAgaWYgKCFpc1ZhbGlkUmVhc29uKHZhbHVlKSkge1xuICAgICAgICBlcnJvck1lc3NhZ2Uuc3R5bGUuZGlzcGxheSA9ICdibG9jaycgLy8gU2hvdyB0aGUgZXJyb3IgbWVzc2FnZVxuICAgICAgICByZXR1cm4gLy8gUHJldmVudCBzdWJtaXNzaW9uIGlmIHRoZSByZWFzb24gaXMgaW52YWxpZFxuICAgICAgfSBlbHNlIHtcbiAgICAgICAgZXJyb3JNZXNzYWdlLnN0eWxlLmRpc3BsYXkgPSAnbm9uZScgLy8gSGlkZSB0aGUgZXJyb3IgbWVzc2FnZVxuICAgICAgfVxuXG4gICAgICBtb2RhbENvbnRhaW5lci5yZW1vdmUoKVxuICAgICAgc2VuZFJlc3BvbnNlKHsgaW5wdXQ6IHZhbHVlIH0pXG4gICAgfSlcbiAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgncmVhc29uLXNraXAnKS5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsICgpID0+IHtcbiAgICAgIGNvbnN0IGlucHV0ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3JlYXNvbi1pbnB1dCcpIGFzIEhUTUxUZXh0QXJlYUVsZW1lbnRcbiAgICAgIG1vZGFsQ29udGFpbmVyLnJlbW92ZSgpXG4gICAgICBzZW5kUmVzcG9uc2UoeyBpbnB1dDogbnVsbCB9KVxuICAgIH0pXG4gIH1cbn1cbnNob3VsZEV4Y2x1ZGUod2luZG93LmxvY2F0aW9uLmhyZWYpLnRoZW4oKHJlc3VsdCkgPT4ge1xuICBjb25zb2xlLmxvZygnY29udGVudCBzY3JpcHQsIHNob3VsZEV4Y2x1ZGUnLCByZXN1bHQpXG4gIGlmICghcmVzdWx0KSB7XG4gICAgd29yaygpXG4gIH1cbn0pXG4iXSwibmFtZXMiOlsiYmFzZV91cmwiLCJ1cmxfaW5jbHVkZXMiLCJmaWx0ZXJfdXJsIiwiY29uY2F0IiwibmF2Iiwic2VsZWN0b3IiLCJuYW1lIiwiY2hpbGRyZW4iLCJjbGlja2FibGUiLCJnZW5lcmF0ZV9tZXRhZGF0YSIsImVtIiwiZGF0YSIsInRlcm0iLCJ2YWx1ZSIsInRleHRfc2VsZWN0b3IiLCJhZGRfdGV4dCIsInByb2R1Y3RfZmFjdHMiLCJjbGFzcyIsInByb2R1Y3RfZGVsaXZlcnkiLCJxdWFudGl0eV9zZWxlY3RvciIsInVzZV9yb290IiwidGV4dF9mb3JtYXQiLCJhZGRfdG9fY2FydF9idXR0b24iLCJidXlfbm93X2J1dHRvbiIsImJ1eV9ib3hfd2l0aF9hY2NvcmRpb24iLCJidXlfYm94X3dpdGhvdXRfYWNjb3JkaW9uX2RlbGl2ZXJ5IiwiY2FydCIsInRleHRfanMiLCJlbGVtZW50IiwiaGFzQXR0cmlidXRlIiwiZ2V0QXR0cmlidXRlIiwiX2VtJHBhcmVudEVsZW1lbnQiLCJfcHJpY2VFbSRpbm5lclRleHQiLCJhc2luIiwicGFyZW50RWxlbWVudCIsInByaWNlRW0iLCJxdWVyeVNlbGVjdG9yIiwicHJpY2UiLCJpbm5lclRleHQiLCJyZXBsYWNlIiwidGl0bGVFbSIsInRpdGxlIiwidXJsRW0iLCJ1cmwiLCJkZWxpdmVyeUVtIiwiZGVsaXZlcnkiLCJxdWFudGl0eUVtIiwicXVhbnRpdHkiLCJzZWxlY3RlZEVtIiwic2VsZWN0ZWQiLCJyZWNpcGVzIiwibWF0Y2giLCJtYXRjaF9tZXRob2QiLCJtYXRjaF93aXRoX3JlZiIsInRleHQiLCJhQ2hpbGQiLCJ0cmltIiwiZSIsImNvbnNvbGUiLCJsb2ciLCJkaXJlY3RfY2hpbGQiLCJfZWxlbWVudCRjbG9zZXN0IiwiX25hbWVFbSRpbm5lclRleHQiLCJfdGV4dDIiLCJfdGV4dCIsIm5hbWVFbSIsImNsb3Nlc3QiLCJmaXJzdEVsZW1lbnRDaGlsZCIsInRvTG93ZXJDYXNlIiwiX2VsZW1lbnQkY2xvc2VzdDIiLCJfbmFtZUVtJGlubmVyVGV4dDIiLCJfdGV4dDQiLCJfdGV4dDMiLCJfZW0kaW5uZXJUZXh0IiwiX2VtJGlubmVyVGV4dDIiLCJfZW0kaW5uZXJUZXh0MyIsInJhbmdlIiwia2VlcF9hdHRyIiwib3ZlcnJpZGVfYXR0ciIsInN0ZXBfdmFsdWVzIiwiZm9ybUVtIiwicHJvcCIsIkpTT04iLCJwYXJzZSIsInN0ZXBMYWJlbHMiLCJjdXJyZW50X3ZhbHVlIiwiTnVtYmVyIiwicGFyc2VJbnQiLCJhc2luRW0iLCJpbnNlcnRfc3BsaXRfbWFya2VyIiwiaW5zZXJ0X3NwbGl0X21hcmtlcl9ldmVyeSIsImNsaWNrX3NlbGVjdG9yIiwibWF0Y2hfdGV4dCIsIl9lbSRpbm5lclRleHQ0IiwiX2VtJGlubmVyVGV4dDUiLCJfZW0kcXVlcnlTZWxlY3RvciIsIl9lbSRxdWVyeVNlbGVjdG9yMiIsImxhYmVsIiwiaW5uZXJIVE1MIiwidW5kZWZpbmVkIiwiX2VtJHF1ZXJ5U2VsZWN0b3IzIiwib3B0aW9ucyIsInF1ZXJ5U2VsZWN0b3JBbGwiLCJfc3RlcCIsIl9pdGVyYXRvciIsIl9jcmVhdGVGb3JPZkl0ZXJhdG9ySGVscGVyIiwicyIsIm4iLCJkb25lIiwib3B0aW9uIiwiZXJyIiwiZiIsImltZ0NoaWxkIiwiYWx0IiwiX2VtJHF1ZXJ5U2VsZWN0b3I0IiwiX2VtJHF1ZXJ5U2VsZWN0b3I1IiwiX2VtJHF1ZXJ5U2VsZWN0b3I2IiwiX3N0ZXAyIiwiX2l0ZXJhdG9yMiIsInRleHRFbSIsIm5leHRFbGVtZW50U2libGluZyIsIl9lbSRxdWVyeVNlbGVjdG9yNyIsIl9lbSRxdWVyeVNlbGVjdG9yOCIsIl9lbSRpbm5lclRleHQ2IiwiYnVsbGV0X2xpc3QiLCJfZW0kcGFyZW50RWxlbWVudDIiLCJfcHJpY2VFbSRpbm5lclRleHQyIiwidGVybWluYXRlIiwiYXJndW1lbnRzIiwidGVybWluYXRlX2NhbGxiYWNrIiwiX2VtJGNsb3Nlc3QiLCJfbmFtZUVtJGlubmVyVGV4dDMiLCJpbnB1dCIsImNoZWNrZWQiLCJfcHJpY2VFbSRpbm5lclRleHQzIiwiX2VtJHBhcmVudEVsZW1lbnQzIiwiX3ByaWNlRW0kaW5uZXJUZXh0NCIsIl9lbSRwYXJlbnRFbGVtZW50NCIsIl9lbSRwYXJlbnRFbGVtZW50NSIsIl9lbSRwYXJlbnRFbGVtZW50NiIsIl9hc2luRW0yIiwiX3ByaWNlRW0kaW5uZXJUZXh0NSIsIl9lbSRwYXJlbnRFbGVtZW50NyIsIl9lbSRwYXJlbnRFbGVtZW50OCIsIl9hc2luRW0zIiwiX2VtJGNsb3Nlc3QyIiwiX3BhcmVudFRpdGxlRW0kaW5uZXJUIiwiX3ByaWNlRW0kaW5uZXJUZXh0NiIsInBhcmVudFRpdGxlRW0iLCJwYXJlbnRUaXRsZSIsIl9yZWdlbmVyYXRvclJ1bnRpbWUiLCJ0IiwiciIsIk9iamVjdCIsInByb3RvdHlwZSIsImhhc093blByb3BlcnR5IiwibyIsImRlZmluZVByb3BlcnR5IiwiaSIsIlN5bWJvbCIsImEiLCJpdGVyYXRvciIsImMiLCJhc3luY0l0ZXJhdG9yIiwidSIsInRvU3RyaW5nVGFnIiwiZGVmaW5lIiwiZW51bWVyYWJsZSIsImNvbmZpZ3VyYWJsZSIsIndyaXRhYmxlIiwid3JhcCIsIkdlbmVyYXRvciIsImNyZWF0ZSIsIkNvbnRleHQiLCJtYWtlSW52b2tlTWV0aG9kIiwidHJ5Q2F0Y2giLCJ0eXBlIiwiYXJnIiwiY2FsbCIsImgiLCJsIiwieSIsIkdlbmVyYXRvckZ1bmN0aW9uIiwiR2VuZXJhdG9yRnVuY3Rpb25Qcm90b3R5cGUiLCJwIiwiZCIsImdldFByb3RvdHlwZU9mIiwidiIsInZhbHVlcyIsImciLCJkZWZpbmVJdGVyYXRvck1ldGhvZHMiLCJmb3JFYWNoIiwiX2ludm9rZSIsIkFzeW5jSXRlcmF0b3IiLCJpbnZva2UiLCJfdHlwZW9mIiwicmVzb2x2ZSIsIl9fYXdhaXQiLCJ0aGVuIiwiY2FsbEludm9rZVdpdGhNZXRob2RBbmRBcmciLCJFcnJvciIsIm1ldGhvZCIsImRlbGVnYXRlIiwibWF5YmVJbnZva2VEZWxlZ2F0ZSIsInNlbnQiLCJfc2VudCIsImRpc3BhdGNoRXhjZXB0aW9uIiwiYWJydXB0IiwiVHlwZUVycm9yIiwicmVzdWx0TmFtZSIsIm5leHQiLCJuZXh0TG9jIiwicHVzaFRyeUVudHJ5IiwidHJ5TG9jIiwiY2F0Y2hMb2MiLCJmaW5hbGx5TG9jIiwiYWZ0ZXJMb2MiLCJ0cnlFbnRyaWVzIiwicHVzaCIsInJlc2V0VHJ5RW50cnkiLCJjb21wbGV0aW9uIiwicmVzZXQiLCJpc05hTiIsImxlbmd0aCIsImRpc3BsYXlOYW1lIiwiaXNHZW5lcmF0b3JGdW5jdGlvbiIsImNvbnN0cnVjdG9yIiwibWFyayIsInNldFByb3RvdHlwZU9mIiwiX19wcm90b19fIiwiYXdyYXAiLCJhc3luYyIsIlByb21pc2UiLCJrZXlzIiwicmV2ZXJzZSIsInBvcCIsInByZXYiLCJjaGFyQXQiLCJzbGljZSIsInN0b3AiLCJydmFsIiwiaGFuZGxlIiwiY29tcGxldGUiLCJmaW5pc2giLCJkZWxlZ2F0ZVlpZWxkIiwiYXN5bmNHZW5lcmF0b3JTdGVwIiwicHJvY2Vzc0VsZW1lbnQiLCJyZWNpcGUiLCJwYXJlbnROYW1lIiwibnRoQ2hpbGQiLCJ0YWdOYW1lIiwidGFnX25hbWUiLCJlbmRzV2l0aCIsIm5ld0VsZW1lbnQiLCJkb2N1bWVudCIsImNyZWF0ZUVsZW1lbnQiLCJlbGVtZW50VGV4dCIsInRleHRFbGVtZW50IiwidGV4dENvbnRlbnQiLCJlbGVtZW50TmFtZSIsInRvU3RyaW5nIiwic2V0QXR0cmlidXRlIiwibWV0YW9iaiIsIm1ldGFkYXRhIiwic3RyaW5naWZ5IiwibWV0YW5hbWUiLCJjbGlja19lbGVtZW50Iiwid2luZG93IiwiY2xpY2thYmxlX3JlY2lwZXMiLCJpbnB1dFR5cGUiLCJpbmNsdWRlcyIsImlucHV0X3JlY2lwZXMiLCJfZWxlbWVudCRwYXJlbnRFbGVtZW4iLCJzZWxlY3RJZCIsInRhZyIsIm5ld1RhZyIsImFwcGVuZENoaWxkIiwiX3JlZiIsIl9jYWxsZWUiLCJvcHRpb25WYWx1ZSIsIm9wdGlvbk5hbWUiLCJuZXdPcHRpb24iLCJfY29udGV4dCIsImFwcGx5IiwiX25leHQiLCJfdGhyb3ciLCJfeCIsImF0dHIiLCJrZXkiLCJfbG9vcCIsImNoaWxkRWxlbWVudHMiLCJjaGlsZFJlY2lwZSIsImNoaWxkRWxlbWVudCIsImluZGV4IiwiY2hpbGROb2RlIiwic3BsaXRNYXJrZXIiLCJlbXB0eV9tZXNzYWdlIiwiZW1wdHlUZXh0Tm9kZSIsImNyZWF0ZVRleHROb2RlIiwiX2FycmF5TGlrZVRvQXJyYXkiLCJBcnJheSIsImZpbmRQYWdlTWV0YSIsImFsbF9lbGVtZW50X3dpdGhfbWV0YV9kYXRhIiwiZ3JvdXBlZFJlc3VsdCIsIm1ldGFOYW1lIiwibWV0YURhdGEiLCJnZXRDbGlja2FibGVFbGVtZW50c0luVmlld3BvcnQiLCJkb2N1bWVudENvcHkiLCJjbG9uZU5vZGUiLCJyZWN0IiwiZ2V0Qm91bmRpbmdDbGllbnRSZWN0IiwidG9wIiwibGVmdCIsImJvdHRvbSIsImlubmVySGVpZ2h0IiwiZG9jdW1lbnRFbGVtZW50IiwiY2xpZW50SGVpZ2h0IiwicmlnaHQiLCJpbm5lcldpZHRoIiwiY2xpZW50V2lkdGgiLCJfc2hvdWxkRXhjbHVkZSIsIl9jYWxsZWUyIiwiX2FyZ3MyIiwiX2NvbnRleHQyIiwiY2hyb21lIiwic3RvcmFnZSIsImxvY2FsIiwiZ2V0IiwidXNlcklkIiwiaGFuZGxlTWVzc2FnZSIsImV2ZW50IiwicmVtb3ZlRXZlbnRMaXN0ZW5lciIsImFkZEV2ZW50TGlzdGVuZXIiLCJwb3N0TWVzc2FnZSIsInNvbWUiLCJpbmNsdWRlVXJsIiwiZXhjbHVkZVVybCIsImdlbmVyYXRlSHRtbFNuYXBzaG90SWQiLCJ0aW1lc3RhbXAiLCJ1dWlkIiwibG9jYXRpb24iLCJocmVmIiwic3RyIiwiaGFzaCIsImNoYXJDb2RlQXQiLCJoYXNoQ29kZSIsInByb2Nlc3NSZWNpcGUiLCJwYXRoIiwiVVJMIiwicGF0aG5hbWUiLCJpc0FycmF5IiwiZnJvbSIsInRlc3QiLCJfdW5zdXBwb3J0ZWRJdGVyYWJsZVRvQXJyYXkiLCJfbiIsIkYiLCJtYXRjaE1ldGhvZCIsIl9lbGVtZW50JHRleHRDb250ZW50JCIsIl9lbGVtZW50JHRleHRDb250ZW50IiwiZXJyb3IiLCJzdGFydHNXaXRoIiwic2VsZWN0UmVjaXBlIiwicm9vdEVsZW1lbnQiLCJvdXRlckhUTUwiLCJyYW5kb21VVUlEIiwiY3J5cHRvIiwiYmluZCIsImdldFJhbmRvbVZhbHVlcyIsInJuZHM4IiwiVWludDhBcnJheSIsInJuZyIsImJ5dGVUb0hleCIsImJ1ZiIsIm9mZnNldCIsInJuZHMiLCJyYW5kb20iLCJhcnIiLCJ1bnNhZmVTdHJpbmdpZnkiLCJvd25LZXlzIiwiZ2V0T3duUHJvcGVydHlTeW1ib2xzIiwiZmlsdGVyIiwiZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yIiwiX29iamVjdFNwcmVhZCIsIl9kZWZpbmVQcm9wZXJ0eSIsImdldE93blByb3BlcnR5RGVzY3JpcHRvcnMiLCJkZWZpbmVQcm9wZXJ0aWVzIiwidG9QcmltaXRpdmUiLCJTdHJpbmciLCJfdG9QcmltaXRpdmUiLCJfdG9Qcm9wZXJ0eUtleSIsIl9hc3luY1RvR2VuZXJhdG9yIiwiY2FwdHVyZVNjcmVlbnNob3QiLCJfeDIiLCJfY2FwdHVyZVNjcmVlbnNob3QiLCJfY2FsbGVlOCIsInJlc3BvbnNlIiwiX2NvbnRleHQ5IiwicnVudGltZSIsInNlbmRNZXNzYWdlIiwiYWN0aW9uIiwic3VjY2VzcyIsIm1lc3NhZ2UiLCJ0MCIsInJlc3VsdCIsImRhdGFGb3JCYWNrZ3JvdW5kIiwicmVzcG9uc2UyIiwic291cmNlIiwiX3gzIiwic2hvdWxkRXhjbHVkZSIsImNhcHR1cmVJbnRlcmFjdGlvbiIsIl94NCIsIl94NSIsIl94NiIsIl94NyIsIl94OCIsIl9jYXB0dXJlSW50ZXJhY3Rpb24iLCJfY2FsbGVlNSIsImV2ZW50VHlwZSIsInRhcmdldCIsInNjcm9sbERpc3RhbmNlIiwiY3VycmVudFNuYXBzaG90SWQiLCJzaW1wbGlmaWVkSFRNTCIsIm1hcmtlZERvYyIsInBhZ2VNZXRhIiwiX2NvbnRleHQ2IiwiaHRtbFNuYXBzaG90SWQiLCJodG1sQ29udGVudCIsImlkIiwic2Nyb2xsVGltZW91dCIsImlzU2Nyb2xsaW5nIiwic2Nyb2xsU3RhcnRUb3AiLCJzY3JvbGxZIiwic2Nyb2xsVG9wIiwiYWNjdW11bGF0ZWRTY3JvbGxEaXN0YW5jZSIsImhhbmRsZUZpcnN0U2Nyb2xsIiwiX3g5IiwiX3gxMCIsIl9oYW5kbGVGaXJzdFNjcm9sbCIsIl9jYWxsZWU2Iiwic2Nyb2xsVXVpZCIsInNjcm9sbFRpbWVzdGFtcCIsIl9jb250ZXh0NyIsImhhbmRsZVNjcm9sbFN0b3AiLCJfeDExIiwiX3gxMiIsIl9oYW5kbGVTY3JvbGxTdG9wIiwiX2NhbGxlZTciLCJjdXJyZW50U2Nyb2xsVG9wIiwiX2NvbnRleHQ4IiwiX3JlZjIiLCJnZXRFbGVtZW50QnlJZCIsInV1aWR2NCIsIkRhdGUiLCJ0b0lTT1N0cmluZyIsImNsZWFyVGltZW91dCIsInNldFRpbWVvdXQiLCJfeDEzIiwiYnV5Tm93QnV0dG9uIiwic2V0dXBOb3dCdXR0b24iLCJwcm9jZWVkVG9DaGVja291dEJ1dHRvbiIsImJ1dHRvbiIsIl9jYWxsZWUzIiwiX2RvY3VtZW50JHF1ZXJ5U2VsZWN0IiwiX2RvY3VtZW50JHF1ZXJ5U2VsZWN0MiIsIl9kb2N1bWVudCRxdWVyeVNlbGVjdDMiLCJwcm9kdWN0SW5mbyIsIl9jb250ZXh0MyIsInJvdyIsIl9yb3ckcXVlcnlTZWxlY3RvciIsIl9yb3ckcXVlcnlTZWxlY3RvcjIiLCJwYXJzZUZsb2F0IiwiX3JlZjQiLCJfY2FsbGVlNCIsInNlbGVjdGVkSXRlbXMiLCJjYXJ0SXRlbXMiLCJfY29udGV4dDUiLCJpdGVtIiwiY2hlY2tib3giLCJwcm9kdWN0TGluayIsIl9mdWxsTmFtZUVsZW1lbnQkdGV4dCIsIl9ocmVmJG1hdGNoIiwiX3ByaWNlRWxlbWVudCR0ZXh0Q29uIiwiZnVsbE5hbWVFbGVtZW50IiwicHJpY2VFbGVtZW50IiwiX2NvbnRleHQ0IiwidmFyaWF0aW9uIiwiX3ZhcmlhdGlvbiRxdWVyeVNlbGVjIiwiX3ZhcmlhdGlvbiRxdWVyeVNlbGVjMiIsInQxIiwidDIiLCJfeDE0Iiwib25NZXNzYWdlIiwiYWRkTGlzdGVuZXIiLCJzZW5kZXIiLCJzZW5kUmVzcG9uc2UiLCJodG1sIiwicXVlc3Rpb24iLCJtb2RhbEh0bWwiLCJtb2RhbENvbnRhaW5lciIsImJvZHkiLCJlcnJvck1lc3NhZ2UiLCJyZWFzb24iLCJfaSIsIl9tZWFuaW5nbGVzc1BhdHRlcm5zIiwiaXNWYWxpZFJlYXNvbiIsInN0eWxlIiwiZGlzcGxheSIsInJlbW92ZSIsImNyZWF0ZU1vZGFsIiwid29yayJdLCJzb3VyY2VSb290IjoiIn0=
