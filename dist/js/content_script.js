(()=>{"use strict";const e=["www.amazon.com"],t=["https://www.amazon.com/checkout/","https://www.amazon.com/gp/buy/","https://www.amazon.com/a/addresses","https://www.amazon.com/cpe/yourpayments/","https://www.amazon.com/ap/signin","https://www.amazon.com/ap/cvf/","https://www.amazon.com/ap/profile/","https://www.amazon.com/ax/account/","https://www.amazon.com/gp/product/handle-buy-box/","https://www.amazon.com/gp/checkoutportal/","https://www.amazon.com/gp/cart/desktop/","https://www.amazon.com/gp/primecentral/editPaymentPreference"],a={selector:"#navbar-main",name:"nav_bar",children:[{selector:"#nav-search-bar-form",children:[{selector:"input#twotabsearchtextbox",name:"search_input",clickable:!0,generate_metadata:e=>({name:"search_term",data:{term:null==e?void 0:e.value}})},{selector:"#nav-search-submit-button",clickable:!0,name:"search_button"}]},{selector:"#nav-link-accountList",text_selector:"#nav-link-accountList span.nav-line-2",add_text:!0,clickable:!0,name:"account_and_list_button"},{selector:"#nav-orders",add_text:!0,clickable:!0,name:"order_button"},{selector:"#nav-cart",text_selector:"#nav-cart .nav-line-2",add_text:!0,clickable:!0,name:"cart_button"},{selector:"#nav-flyout-searchAjax",name:"suggested_terms",children:[{selector:"div.s-suggestion-ellipsis-direction",name:"from_text",add_text:!0,clickable:!0}]}]},r={selector:"#nav-flyout-ewc",name:"cart_side_bar",children:[{selector:"div.ewc-cart-header",add_text:!0},{selector:"div.ewc-compact-actions a",add_text:!0,clickable:!0,name:"go_to_cart"},{selector:"#ewc-compact-body ul",name:"product_list",children:[{selector:"li div[id^='sc-item']",name:"from_text",text_js:e=>{const t=e.querySelector("div.ewc-item-image a.sc-product-link img:not(.ewc-sfl-image-small)");return(null==t?void 0:t.alt)||""},children:[{selector:"div.ewc-item-image a.sc-product-link img:not(.ewc-sfl-image-small)",name:"product_image",clickable:!0,add_text:!0,text_format:"Product Image"},{selector:"span.ewc-unit-price",add_text:!0},{selector:"select",name:"drop_down_list"},{selector:'div[data-action="a-dropdown-button"], span[data-action="a-dropdown-button"]',name:"drop_down_list",clickable:!0,add_text:!0},{selector:"div.ewc-delete-icon-container button",name:"delete",add_text:!0,text_format:"delete",clickable:!0}],generate_metadata:e=>{var t;const a=e.getAttribute("data-asin"),r=e.querySelector("span.ewc-unit-price"),n=null===(t=null==r?void 0:r.innerText)||void 0===t?void 0:t.replace(/[\n]/g,"").trim(),i=e.querySelector("div.ewc-item-image a.sc-product-link img:not(.ewc-sfl-image-small)"),l=null==i?void 0:i.alt,o=null==i?void 0:i.parentElement,c=null==o?void 0:o.getAttribute("href"),d=e.querySelector('div[data-action="a-dropdown-button"], span[data-action="a-dropdown-button"]');return{name:"cart_items",data:{title:l,asin:a,price:n,url:c,quantity:null==d?void 0:d.innerText}}}}]}]},n={selector:"#productFactsDesktopExpander",add_text:!0,class:"product-facts"},i={selector:"div.mir-layout-DELIVERY_BLOCK-slot-PRIMARY_DELIVERY_MESSAGE_LARGE",add_text:!0,class:"product-delivery"},l={selector:'#selectQuantity, div[id^="qs-widget-button-container-atfc"]',name:"quantity_selector",children:[{selector:"label",add_text:!0},{selector:"span.a-dropdown-prompt",add_text:!0,generate_metadata:e=>({name:"product_quantity",data:{quantity:e.innerText}})},{selector:"select",name:"drop_down_list"},{selector:"button",name:"drop_down_list",clickable:!0,add_text:!0},{selector:'div.qs-widget-dropdown-wrapper span[data-action="qs-widget-dropdown-decl"]',add_text:!0,clickable:!0,use_root:!0,name:"from_text",text_format:"Drop Down Option {}"}]},o={selector:"input[name='submit.add-to-cart'], input[name='submit.add-to-cart-ubb'], #freshAddToCartButton input",add_text:!0,clickable:!0,name:"add_to_cart",class:"product-add-to-cart"},c={selector:"input[name='submit.buy-now']",add_text:!0,clickable:!0,name:"buy_now",class:"product-buy-now"},d={selector:"#buyBoxAccordion > div.a-box.celwidget",name:"from_text",text_selector:"div.accordion-caption > span",children:[{selector:"div[data-csa-c-content-id='offer_display_desktop_accordion_header'], div[data-csa-c-content-id='offer_display_mobile_accordion_header']",name:"accordion_selector",add_text:!0,clickable:!0,text_selector:"h5 span.a-text-bold"},{selector:"div.a-accordion-inner.accordion-row-content",name:"purchase_form",children:[n,i,l,{selector:"#replenishmentFrequency_feature_div",name:"delivery_frequency_selector",text_selector:"div.a-section.a-spacing-micro > span",add_text:!0,children:[{selector:"#rcxOrdFreqOnmlWrapper span.a-dropdown-prompt",add_text:!0},{selector:"#rcxOrdFreqOnmlWrapper select",name:"drop_down_list"}]},{selector:"#rcx-subscribe-submit-button-announce",add_text:!0,clickable:!0,name:"set_up_now",class:"product-set-up-now"},o,c]}]},s={selector:"#gsod_singleOfferDisplay_Desktop",children:[{selector:"#addToCart",name:"purchase_form",children:[n,i,l,o,c]}]},u=[a,{selector:"#sc-collapsed-carts-container",name:"cart",children:[{selector:"div.sc-localmarket-text-logo",add_text:!0},{selector:'div[data-name="collapsed_item_list"]',clickable:!0,name:"item_list"},{selector:'div.sc-buy-box-inner-box input[name^="proceedToALMCheckout"]',clickable:!0,name:"check_out",add_text:!0},{selector:"div.sc-buy-box-inner-box a",clickable:!0,name:"from_text",add_text:!0}]},{selector:"div[data-name='Active Items']",name:"active_item_list",children:[{selector:"div.sc-list-item-content",text_selector:"div.sc-item-content-group ul > li > span.a-list-item > a.sc-product-title span.a-truncate-full",name:"from_text",children:[{selector:"div.sc-item-check-checkbox-selector label",clickable:!0,name:"checkbox"},{selector:"div.sc-image-wrapper a",clickable:!0,name:"product_image",add_text:!0,text_format:"Product Image"},{selector:"div.sc-item-content-group ul > li > span.a-list-item > a.sc-product-title",clickable:!0,text_selector:"span.a-truncate-full",add_text:!0,name:"product_detail"},{selector:"li.sc-delivery-messaging",add_text:!0},{selector:"div.sc-badge-price-to-pay span.sc-product-price span:not(.a-offscreen)",add_text:!0},{selector:"li.sc-product-variation",add_text:!0},{selector:"div.sc-item-content-group span.sc-quantity-stepper",children:[{selector:"button[aria-label='Decrease quantity by one']",add_text:!0,text_js:function(e){return e.hasAttribute("aria-label")?e.getAttribute("aria-label"):""},clickable:!0,name:"decrease_quantity_by_one"},{selector:"div[role='spinbutton']",add_text:!0,text_format:"Current Quantity: {}"},{selector:"button[aria-label='Increase quantity by one']",add_text:!0,text_js:function(e){return e.hasAttribute("aria-label")?e.getAttribute("aria-label"):""},clickable:!0,name:"increase_quantity_by_one"}]},{selector:"div.sc-item-content-group input[data-action='delete']",add_text:!0,clickable:!0,name:"delete"},{selector:"div.sc-item-content-group input[data-action='save-for-later']",add_text:!0,clickable:!0,name:"save_for_later"}],generate_metadata:e=>{var t,a;const r=null===(t=e.parentElement)||void 0===t?void 0:t.getAttribute("data-asin"),n=e.querySelector("div.sc-badge-price-to-pay span.sc-product-price span:not(.a-offscreen)"),i=null===(a=null==n?void 0:n.innerText)||void 0===a?void 0:a.replace(/[\n]/g,""),l=e.querySelector("div.sc-item-content-group ul > li > span.a-list-item > a.sc-product-title span.a-truncate-full"),o=null==l?void 0:l.innerText,c=e.querySelector("div.sc-item-content-group ul > li > span.a-list-item > a.sc-product-title"),d=null==c?void 0:c.getAttribute("href"),s=e.querySelector("li.sc-delivery-messaging"),u=null==s?void 0:s.innerText.replace(/[\n]/g," "),m=e.querySelector("div.sc-item-content-group span.sc-quantity-stepper div[role='spinbutton']"),p=null==m?void 0:m.innerText,_=e.querySelector("div.sc-item-check-checkbox-selector input"),v=null!==(null==_?void 0:_.getAttribute("checked")),b=e.querySelectorAll("li.sc-product-variation > span"),h=[];for(const e of b){const t=null==e?void 0:e.querySelector("span.a-text-bold"),a=null==e?void 0:e.querySelector("span:not(.a-text-bold)"),r=null==t?void 0:t.innerText.replace(/[:\n]/g,"").trim(),n=null==a?void 0:a.innerText.replace(/[:\n]/g,"").trim(),i={[r]:n};h.push(i)}return{name:"active_items",data:{title:o,asin:r,price:i,url:d,delivery:u,quantity:p,selected:v,options:h}}}}]},{selector:"#sc-buy-box-ptc-button input",add_text:!0,clickable:!0,name:"check_out"}],m={selector:'li.a-carousel-card, div[id^="gridElement"]',name:"from_text",text_selector:"span.a-truncate-full",children:[{selector:"a:has(div.a-image-container)",name:"product_image",add_text:!0,text_format:"Product Image",clickable:!0},{selector:"span[id^='qs-widget-atc-button']",name:"add_to_cart",add_text:!0,text_format:"Add To Cart",clickable:!0},{selector:'div[id^="qs-widget-button-container-atfc"]',name:"quantity_selector",children:[{selector:"input[aria-label^='Remove']",add_text:!0,text_format:"Decrease quantity by 1",name:"from_text",clickable:!0},{selector:"button[id^='qs-widget-button-atfc']",add_text:!0},{selector:"input[aria-label^='Add']",add_text:!0,text_format:"Increase quantity by 1",name:"from_text",clickable:!0}]},{selector:"a > span > span > span.a-truncate-full",add_text:!0,name:"product_detail",clickable:!0},{selector:"div > span > span > span.a-truncate-full",add_text:!0},{selector:'div[class*="priceToPay"] span.a-offscreen',add_text:!0},{selector:"li.a-carousel-card a.a-size-mini",name:"from_text",clickable:!0,add_text:!0}],generate_metadata:e=>{var t,a;const r=e.querySelector('div[data-csa-c-item-id^="amzn1.asin"]'),n=null===(t=null==r?void 0:r.getAttribute("data-csa-c-item-id"))||void 0===t?void 0:t.split(":")[0].split(".").pop(),i=e.querySelector('div[class*="priceToPay"] span.a-offscreen'),l=null===(a=null==i?void 0:i.innerText)||void 0===a?void 0:a.replace(/[\n]/g,""),o=e.querySelector("span.a-truncate-full"),c=null==o?void 0:o.innerText,d=e.querySelector("a:has(span.a-truncate-full)"),s=null==d?void 0:d.getAttribute("href"),u=e.querySelector('div[id^="qs-widget-button-container-atfc"] button[id^="qs-widget-button-atfc"]');return{name:"promotion_items",data:{title:c,asin:n,price:l,url:s,quantity:null==u?void 0:u.innerText}}}},p=[{match:"/",match_method:"url",match_with_ref:!0,selector:"html",children:[{selector:"head",children:[{selector:"title",add_text:!0}]},{selector:"body",children:[a,r]}]},{match:"/fmc/storefront",match_method:"url",match_with_ref:!0,selector:"html",children:[{selector:"head",children:[{selector:"title",add_text:!0}]},{selector:"body",children:[a,r]}]},{match:"/s",match_method:"url",selector:"html",children:[{selector:"head",children:[{selector:"title",add_text:!0}]},{selector:"body",children:[a,r,{selector:"#s-refinements",name:"refinements",children:[{selector:"#topRefinements\\/0",name:"top_refinements",add_text:"true",text_format:"Recently used filters",children:[{selector:"li",add_text:!0,name:"from_text",clickable:!0,text_js:function(e){try{let t="";if(!e)return t;const a=e.querySelector("a.a-link-normal.s-navigation-item");if(e.innerText&&e.innerText.trim())t+=e.innerText.trim(),a&&a.hasAttribute("title")&&(t+=" ",t+=a.getAttribute("title"));else{const a=e.querySelector("a.a-link-normal.s-navigation-item");a&&a.hasAttribute("title")&&(t+=a.getAttribute("title"))}return t}catch(e){return console.log(e),""}},children:[{selector:"input[type='checkbox']"}]}]},{selector:"div.a-section.a-spacing-none:not(:has(#n-title)):has(span.a-size-base.a-color-base.puis-bold-weight-text):has(ul span.a-declarative > span > li):not(#reviewsRefinements):not(#departments):not(#priceRefinements):not(#filters)",name:"from_text",text_selector:"span.a-size-base.a-color-base.puis-bold-weight-text",children:[{selector:"span.a-size-base.a-color-base.puis-bold-weight-text",add_text:!0,class:"refinement-title"},{selector:"a.s-navigation-clear-link",add_text:!0,name:"clear_selection",clickable:!0},{selector:"ul > span.a-declarative > span > li:has(a.a-link-normal.s-navigation-item)",add_text:!0,name:"from_text",clickable:!0,direct_child:!0,text_js:function(e){try{let t="";if(!e)return t;const a=e.querySelector("a.a-link-normal.s-navigation-item");if(e.innerText&&e.innerText.trim())t+=e.innerText.trim(),a&&a.hasAttribute("title")&&(t+=" ",t+=a.getAttribute("title"));else{const a=e.querySelector("a.a-link-normal.s-navigation-item");a&&a.hasAttribute("title")&&(t+=a.getAttribute("title"))}return a&&a.getAttribute("aria-current"),t}catch(e){return console.log(e),""}},generate_metadata:e=>{var t,a,r;let n="";const i=e.querySelector("a.a-link-normal.s-navigation-item");if(e.innerText&&e.innerText.trim())n+=e.innerText.trim(),i&&i.hasAttribute("title")&&(n+="_",n+=i.getAttribute("title"));else{const t=e.querySelector("a.a-link-normal.s-navigation-item");t&&t.hasAttribute("title")&&(n+=t.getAttribute("title"))}const l=null===(a=null===(t=e.closest("ul"))||void 0===t?void 0:t.parentElement)||void 0===a?void 0:a.firstElementChild,o=null===(r=null==l?void 0:l.innerText)||void 0===r?void 0:r.replace(/[ ]/g,"_").toLowerCase().trim();let c="";return i&&i.hasAttribute("href")&&(c=i.getAttribute("href")),i&&"true"===i.getAttribute("aria-current")?{name:"refinements."+o,data:{title:(null==n?void 0:n.trim())||"",selected:!0,url:c}}:{name:"refinements."+o,data:{title:(null==n?void 0:n.trim())||"",selected:!1,url:c}}},children:[{selector:"input[type='checkbox']"}]},{selector:"ul > span.a-declarative > li > span > div[data-a-expander-name='filter-content-expander']",name:"more_options",children:[{selector:"a[data-csa-c-func-deps='aui-da-a-expander-toggle']",name:"toggle_expansion",add_text:!0},{selector:"li",add_text:!0,name:"from_text",clickable:!0,text_js:function(e){try{let t="";if(!e)return t;const a=e.querySelector("a.a-link-normal.s-navigation-item");if(e.innerText&&e.innerText.trim())t+=e.innerText.trim(),a&&a.hasAttribute("title")&&(t+=" ",t+=a.getAttribute("title"));else{const a=e.querySelector("a.a-link-normal.s-navigation-item");a&&a.hasAttribute("title")&&(t+=a.getAttribute("title"))}return a&&a.getAttribute("aria-current"),t}catch(e){return console.log(e),""}},generate_metadata:e=>{var t,a,r,n,i;let l="";const o=e.querySelector("a.a-link-normal.s-navigation-item");if(e.innerText&&e.innerText.trim())l+=e.innerText.trim(),o&&o.hasAttribute("title")&&(l+="_",l+=o.getAttribute("title"));else{const t=e.querySelector("a.a-link-normal.s-navigation-item");t&&t.hasAttribute("title")&&(l+=t.getAttribute("title"))}const c=null===(n=null===(r=null===(a=null===(t=e.closest("ul"))||void 0===t?void 0:t.parentElement)||void 0===a?void 0:a.closest("ul"))||void 0===r?void 0:r.parentElement)||void 0===n?void 0:n.firstElementChild,d=null===(i=null==c?void 0:c.innerText)||void 0===i?void 0:i.replace(/[ ]/g,"_").toLowerCase().trim();let s="";return o&&o.hasAttribute("href")&&(s=o.getAttribute("href")),o&&"true"===o.getAttribute("aria-current")?{name:"refinements."+d,data:{title:(null==l?void 0:l.trim())||"",selected:!0,url:s}}:{name:"refinements."+d,data:{title:(null==l?void 0:l.trim())||"",selected:!1,url:s}}},children:[{selector:"input[type='checkbox']"}]}]}]},{selector:"#departments",name:"departments",add_text:!0,text_format:"Department",children:[{selector:"li a",add_text:!0,name:"from_text",clickable:!0,generate_metadata:e=>{const t=null==e?void 0:e.getAttribute("aria-current"),a=null==e?void 0:e.innerText,r=null==e?void 0:e.getAttribute("href");return t&&"true"==t?{name:"refinements.departments",data:{title:a,selected:!0,url:r}}:{name:"refinements.departments",data:{title:a,selected:!1,url:r}}}}]},{selector:"#reviewsRefinements",name:"reviews_refinements",add_text:!0,text_format:"Customer Reviews",children:[{selector:"a.s-navigation-clear-link",add_text:!0,name:"clear_selection",clickable:!0},{selector:"li a[aria-current='true']",add_text:!0,name:"from_text",clickable:!0,generate_metadata:e=>{var t;return{name:"refinements.reviews",data:{title:null===(t=null==e?void 0:e.innerText)||void 0===t?void 0:t.replace(/\n/g," "),selected:!0,url:null==e?void 0:e.getAttribute("href")}}}},{selector:"li a[aria-current='false']",add_text:!0,name:"from_text",clickable:!0,generate_metadata:e=>{var t;return{name:"refinements.reviews",data:{title:null===(t=null==e?void 0:e.innerText)||void 0===t?void 0:t.replace(/\n/g," "),selected:!1,url:null==e?void 0:e.getAttribute("href")}}}}]},{selector:"#priceRefinements",name:"price_refinements",children:[{selector:"#p_36-title, div.sf-refinement-heading span",add_text:!0,name:"price_heading"},{selector:"div[aria-labelledby='p_36-title'] > a",add_text:!0,name:"clear_price_selection",clickable:!0},{selector:"ul[aria-labelledby='p_36-title'] a[aria-current='true']",add_text:!0,name:"from_text",clickable:!0,generate_metadata:e=>({name:"refinements.price",data:{title:null==e?void 0:e.innerText,selected:!0,url:null==e?void 0:e.getAttribute("href")}})},{selector:"ul[aria-labelledby='p_36-title'] a[aria-current='false']",add_text:!0,name:"from_text",clickable:!0,generate_metadata:e=>({name:"refinements.price",data:{title:null==e?void 0:e.innerText,selected:!1,url:null==e?void 0:e.getAttribute("href")}})},{selector:"div.sf-range-slider-row:nth-of-type(1)",add_text:!0,generate_metadata:e=>{var t;return{name:"refinements.price",data:{title:"price_range",range:null===(t=null==e?void 0:e.innerText)||void 0===t?void 0:t.replace(/\n/g,"")}}}},{selector:"div.sf-range-slider-row:nth-of-type(2) div.s-lower-bound input",name:"price_min_value",add_text:!0,clickable:!0,keep_attr:["min","max","step"],override_attr:{step_values:e=>{const t=e.closest("form");if(t){const e=t.getAttribute("data-slider-props");if(e)return JSON.parse(e).stepLabels}return""},current_value:e=>{const t=Number.parseInt(e.getAttribute("value"));if(null!==t){const a=e.closest("form");if(a){const e=a.getAttribute("data-slider-props");if(e)return JSON.parse(e).stepLabels[t]}}return""}}},{selector:"div.sf-range-slider-row:nth-of-type(2) div.s-upper-bound input",name:"price_max_value",add_text:!0,clickable:!0,keep_attr:["min","max","step"],override_attr:{step_values:e=>{const t=e.closest("form");if(t){const e=t.getAttribute("data-slider-props");if(e)return JSON.parse(e).stepLabels}return""},current_value:e=>{const t=Number.parseInt(e.getAttribute("value"));if(null!==t){const a=e.closest("form");if(a){const e=a.getAttribute("data-slider-props");if(e)return JSON.parse(e).stepLabels[t]}}return""}}},{selector:"div.sf-submit-range-button input",name:"submit_price_range",add_text:!0,text_format:"Go",clickable:!0},{selector:"div.sf-reset-range-link a",name:"reset_price_selection",add_text:!0,clickable:!0},{selector:"#p_n_deal_type-title",add_text:!0,name:"deals_discounts_heading"},{selector:"div[aria-labelledby='p_n_deal_type-title'] > a",add_text:!0,name:"clear_deals_discount_selection",clickable:!0},{selector:"ul[aria-labelledby='p_n_deal_type-title'] a[aria-current='true']",add_text:!0,name:"from_text",clickable:!0,generate_metadata:e=>({name:"refinements.price",data:{title:null==e?void 0:e.innerText,selected:!0,url:null==e?void 0:e.getAttribute("href")}})},{selector:"ul[aria-labelledby='p_n_deal_type-title'] a[aria-current='false']",add_text:!0,name:"from_text",clickable:!0,generate_metadata:e=>({name:"refinements.price",data:{title:null==e?void 0:e.innerText,selected:!1,url:null==e?void 0:e.getAttribute("href")}})}]}]},{selector:"div.s-main-slot.s-result-list.s-search-results",name:"search_results",children:[{selector:"div.AdHolder",name:"ads",children:[{selector:"div[data-asin]",name:"from_text",add_text:!0,clickable:!0,text_js:e=>{const t=e.querySelector("img");return(null==t?void 0:t.getAttribute("alt")).trim()||""},generate_metadata:e=>{const t=null==e?void 0:e.getAttribute("data-asin"),a=e.querySelector("img"),r=null==a?void 0:a.getAttribute("alt"),n=e.querySelector("a[data-type='productTitle']");return{name:"ads",data:{title:r,asin:t,url:null==n?void 0:n.getAttribute("href")}}}}]},{insert_split_marker:!0,insert_split_marker_every:4,selector:'div[data-component-type="s-search-result"]',text_selector:"span.a-color-base.a-text-normal, h2.a-color-base.a-text-normal span",name:"from_text",class:"search-result",children:[{selector:"div[data-cy='title-recipe'] a.a-link-normal.s-link-style.a-text-normal",add_text:!0,class:"product-name",clickable:!0,name:"product_name"},{selector:"div.s-product-image-container",add_text:!0,name:"product_image",clickable:!0,text_format:"Product Image"},{selector:"div.s-color-swatch-container",name:"available_colors",children:[{selector:"div.s-color-swatch-pad",name:"from_text",clickable:!0,add_text:!0,text_js:e=>{const t=e.querySelector("a");return t&&t.getAttribute("aria-label")||""}},{selector:"div[data-csa-c-type='link'] a",direct_child:!0,name:"from_text",clickable:!0,add_text:!0}]},{selector:"div.s-variations-options-elevated, div.s-variations-options-justify-content",name:"options",add_text:!0,clickable:!0,click_selector:"a"},{selector:"div[data-cy='reviews-block']",class:"product-review",children:[{selector:"span.a-icon-alt",add_text:!0,class:"product-rating"},{selector:"span.a-size-base.s-underline-text",add_text:!0,text_format:"{} reviews",class:"product-rating-count",name:"product_rating_count",clickable:!0}]},{selector:"div[data-cy='price-recipe']",class:"product-price",children:[{selector:"a.a-link-normal > span.a-price > span.a-offscreen",add_text:!0}]},{selector:"div[data-cy='delivery-recipe']",add_text:!0,class:"product-delivery"},{selector:"div[data-cy='add-to-cart'] button, span[id*='add-to-cart'] input",add_text:!0,clickable:!0,name:"add_to_cart"},{selector:"div[data-csa-c-content-id='s-search-see-details-button'] a",add_text:!0,clickable:!0,name:"see_options"},{selector:'div[name="ax-qs"]',children:[{selector:"button[aria-label='Decrease quantity by one']",add_text:!0,text_js:function(e){return e.hasAttribute("aria-label")?e.getAttribute("aria-label"):""},clickable:!0,name:"decrease_quantity_by_one"},{selector:"div[role='spinbutton']",add_text:!0,text_format:"Current Quantity: {}"},{selector:"button[aria-label='Increase quantity by one']",add_text:!0,text_js:function(e){return e.hasAttribute("aria-label")?e.getAttribute("aria-label"):""},clickable:!0,name:"increase_quantity_by_one"}]}],generate_metadata:e=>{const t=e.getAttribute("data-asin"),a=e.querySelector("div[data-cy='price-recipe'] a.a-link-normal > span.a-price > span.a-offscreen"),r=null==a?void 0:a.innerText,n=e.querySelector("span.a-color-base.a-text-normal, h2.a-color-base.a-text-normal span"),i=null==n?void 0:n.innerText,l=e.querySelector("div[data-cy='title-recipe'] a.a-link-normal.s-link-style.a-text-normal"),o=null==l?void 0:l.getAttribute("href"),c=e.querySelector("div[data-cy='delivery-recipe']");return{name:"search_results",data:{title:i,asin:t,price:r,url:o,delivery:null==c?void 0:c.innerText.replace(/[\n]/g," ")}}}}]},{selector:"span.s-pagination-strip",name:"pagination",children:[{selector:".s-pagination-item",add_text:!0,name:"from_text",clickable:!0}]},{selector:"div.a-popover-wrapper",name:"popover",children:[{selector:"header.a-popover-header button",add_text:!0,clickable:!0,name:"close",text_format:"Close"},{selector:"div.a-popover-inner div.puis-atc-size-variation",children:[{selector:"div.a-row:nth-of-type(1)",direct_child:!0,children:[{selector:"span[data-component-type='s-product-image'] a",name:"product_image",add_text:!0,clickable:!0,text_format:"Product Image"},{selector:"div.puis-size-variation-title a",name:"product_title",add_text:!0,clickable:!0},{selector:"div.puis-size-variation-product-spec",name:"product_specification",add_text:!0,clickable:!0,click_selector:"a"}]},{selector:"div.a-row:nth-of-type(2)",direct_child:!0,children:[{selector:"div.puis-size-variation-product-options",name:"from_text",text_selector:"span.a-size-base.a-color-secondary",children:[{selector:"span.a-size-base.a-color-secondary",add_text:!0},{selector:"span.a-dropdown-prompt",add_text:!0},{selector:"select",name:"drop_down_list"}]},{selector:"div.puis-size-variation-price a.a-text-normal",name:"price",clickable:!0,add_text:!0,text_selector:"span[aria-hidden='true']"},{selector:"div.puis-size-variation-delivery",add_text:!0,name:"delivery"}]},{selector:"div.a-row:nth-of-type(3)",direct_child:!0,children:[{selector:"span.s-no-js-hide input",name:"cancel",clickable:!0,add_text:!0,text_format:"Cancel"},{selector:"div.puis-atcb-add-container button",name:"add_to_cart",clickable:!0,add_text:!0}]}]}],generate_metadata:e=>{var t,a;const r=null===(t=e.querySelector("div[data-asin]"))||void 0===t?void 0:t.getAttribute("data-asin"),n=e.querySelector('div.a-popover-inner div.puis-atc-size-variation div.a-row:nth-of-type(2) div.puis-size-variation-price a.a-text-normal span[aria-hidden="true"]'),i=null===(a=null==n?void 0:n.innerText)||void 0===a?void 0:a.replace(/[\n]/g,""),l=e.querySelector("div.a-popover-inner div.puis-atc-size-variation div.a-row:nth-of-type(1) div.puis-size-variation-title a"),o=null==l?void 0:l.innerText,c=null==l?void 0:l.getAttribute("href"),d=(e.querySelector('div[data-action="a-dropdown-button"]'),e.querySelectorAll("div.a-popover-inner div.puis-atc-size-variation div.a-row:nth-of-type(1) div.puis-size-variation-product-spec, div.a-popover-inner div.puis-atc-size-variation div.a-row:nth-of-type(2) div.puis-size-variation-product-options")),s=[];for(const e of d){const t=null==e?void 0:e.querySelector("span.a-size-base.a-color-secondary"),a=null==e?void 0:e.querySelector("span.a-size-base.a-color-base, span.a-dropdown-prompt"),r=null==t?void 0:t.innerText.replace(/[:\n]/g,"").trim(),n=null==a?void 0:a.innerText.replace(/[:\n]/g,"").trim(),i={[r]:n};s.push(i)}return{name:"popover_item",data:{title:o,asin:r,price:i,url:c,options:s}}}}]}]},{match:"#productTitle",match_text:"",selector:"html",children:[{selector:"head",children:[{selector:"title",add_text:!0}]},{selector:"body",children:[a,r,{selector:"#centerCol",class:"product-card",children:[{selector:"#title",add_text:!0,keep_attr:["id"],generate_metadata:e=>({name:"product_details",data:{title:(null==e?void 0:e.innerText)||""}})},{selector:"#averageCustomerReviews",class:"review",children:[{selector:"span.a-icon-alt",add_text:!0},{selector:"#acrCustomerReviewText",add_text:!0}]},{selector:'#apex_desktop > div[data-csa-c-slot-id="apex_dp_center_column"] > div[class="offersConsistencyEnabled"] > div:not([style="display:none;"]):not([style="display: none;"]) #corePriceDisplay_desktop_feature_div:has(#sns-base-price) #sns-base-price span.a-price.aok-align-center.reinventPricePriceToPayMargin.priceToPay, #apex_desktop > div[data-csa-c-slot-id="apex_dp_center_column"] > div[class="offersConsistencyEnabled"] > div:not([style="display:none;"]):not([style="display: none;"]) #corePriceDisplay_desktop_feature_div:not(:has(#sns-base-price)) span.a-price.aok-align-center.reinventPricePriceToPayMargin.priceToPay, #apex_desktop > div[data-csa-c-slot-id="apex_dp_center_column"] > div[data-csa-c-content-id="apex_with_rio_cx"] #corePriceDisplay_desktop_feature_div span.a-price.aok-align-center.reinventPricePriceToPayMargin.priceToPay',add_text:!0,text_format:"Price: {}",class:"product-price",generate_metadata:e=>{var t;return{name:"product_details",data:{price:(null===(t=null==e?void 0:e.innerText)||void 0===t?void 0:t.replace(/\n/g,""))||""}}},text_js:e=>{var t;return(null===(t=null==e?void 0:e.innerText)||void 0===t?void 0:t.replace(/\n/g,""))||""}},{selector:"#twister",class:"product-options",name:"product_options",children:[{selector:"div.a-section",text_selector:"div.a-row:has(label.a-form-label) > label.a-form-label",name:"from_text",direct_child:!0,generate_metadata:e=>{var t,a,r;const n=null===(t=e.querySelector("div.a-row:has(label.a-form-label) label.a-form-label"))||void 0===t?void 0:t.innerHTML.replace(/[:\n]/g,"").trim();let i=null===(a=e.querySelector("div.a-row:has(label.a-form-label) span.selection"))||void 0===a?void 0:a.innerHTML;if(void 0===i||""===i){const t=null===(r=e.querySelector("select"))||void 0===r?void 0:r.querySelectorAll("option");if(t)for(const e of t)e&&null!==e.getAttribute("selected")&&(i=e.innerHTML.trim())}return{name:"product_options",data:{[n]:i.trim()}}},children:[{selector:"div.a-row:has(label.a-form-label)",children:[{selector:"label.a-form-label",add_text:!0},{selector:"span.selection",add_text:!0}]},{selector:"select",add_text:!0,name:"drop_down_list"},{selector:"ul",name:"button_list",children:[{selector:"li button",add_text:!0,clickable:!0,name:"from_text",text_js:function(e){let t="";if(e.innerText.trim()){t+=e.innerText.trim();const a=e.querySelector("img");a&&a.alt&&(t+=" ",t+=a.alt)}else{const a=e.querySelector("img");a&&a.alt&&(t+=a.alt)}return t.trim()}}]}]}]},{selector:"#twister-plus-inline-twister",class:"product-options",name:"product_options",children:[{selector:"div.inline-twister-row",text_selector:"div.inline-twister-dim-title-value-truncate-expanded span.a-size-base.a-color-secondary",name:"from_text",direct_child:!0,generate_metadata:e=>{var t,a,r;const n=null===(t=e.querySelector("div.inline-twister-dim-title-value-truncate-expanded span.a-size-base.a-color-secondary"))||void 0===t?void 0:t.innerHTML.replace(/[:\n]/g,"").trim();let i=null===(a=e.querySelector("div.inline-twister-dim-title-value-truncate-expanded span.inline-twister-dim-title-value"))||void 0===a?void 0:a.innerHTML;if(void 0===i||""===i){const t=null===(r=e.querySelector("select"))||void 0===r?void 0:r.querySelectorAll("option");if(t)for(const e of t)e&&null!==e.getAttribute("selected")&&(i=e.innerHTML.trim())}return{name:"product_options",data:{[n]:i.trim()}}},children:[{selector:"div.inline-twister-dim-title-value-truncate-expanded",children:[{selector:"span.a-size-base.a-color-secondary",add_text:!0},{selector:"span.inline-twister-dim-title-value",add_text:!0}]},{selector:"select",add_text:!0,name:"drop_down_list"},{selector:"ul",name:"button_list",children:[{selector:"li span:not(.aok-hidden) input",add_text:!0,clickable:!0,name:"from_text",text_js:function(e){const t=e.nextElementSibling;let a="";if(t.innerText.trim()){a+=t.innerText.trim();const e=t.querySelector("img");e&&e.alt&&(a+=" ",a+=e.alt)}else{const e=t.querySelector("img");e&&e.alt&&(a+=e.alt)}return a.trim()}}]}]},{selector:"div.inline-twister-singleton-header",text_selector:"span.a-size-base.a-color-secondary",name:"from_text",children:[{selector:"span.a-size-base.a-color-secondary",add_text:!0},{selector:"span.inline-twister-dim-title-value-truncate",add_text:!0}],generate_metadata:e=>{var t,a;const r=null===(t=e.querySelector("span.a-size-base.a-color-secondary"))||void 0===t?void 0:t.innerHTML.replace(/[:\n]/g,"").trim(),n=null===(a=e.querySelector("span.inline-twister-dim-title-value-truncate"))||void 0===a?void 0:a.innerHTML;return{name:"product_options",data:{[r]:n.trim()}}}}]},{selector:"#productFactsDesktopExpander ul.a-unordered-list, #featurebullets_feature_div ul.a-unordered-list",add_text:!0,name:"about_this_item",text_format:"About this item: ",children:[{selector:"li",add_text:!0}],generate_metadata:e=>{var t;return{name:"product_details",data:{bullet_list:(null===(t=null==e?void 0:e.innerText)||void 0===t?void 0:t.replace(/\n/g," "))||""}}}}]},{selector:"#buybox:has(div.a-tab-container):not(:has(#partialState_buybox_desktop))",name:"buybox",children:[{selector:"#tab_heading_desktop_buybox_group_1 a",name:"deliver_tab",clickable:!0,add_text:!0},{selector:"#tab_heading_desktop_buybox_group_2 a",name:"pick_up_tab",clickable:!0,add_text:!0},{selector:"#tab_desktop_buybox_group_1",name:"delivery",add_text:!0,text_format:"Delivery",children:[d,s]},{selector:"#tab_desktop_buybox_group_2",name:"pick_up",add_text:!0,text_format:"Pick Up",children:[{selector:"#gsod_singleOfferDisplay_group_2_Desktop",children:[{selector:"#pickUpOfferDisplay",name:"purchase_form",children:[n,i,l,o,c]}]}]}],generate_metadata:e=>{const t=e.querySelector("input#ASIN");return{name:"product_details",data:{asin:(null==t?void 0:t.value)||""}}}},{selector:"#buybox:not(:has(div.a-tab-container)):not(:has(#partialState_buybox_desktop))",name:"buybox",children:[d,s],generate_metadata:e=>{const t=e.querySelector("input#ASIN");return{name:"product_details",data:{asin:(null==t?void 0:t.value)||""}}}},{selector:"#partialState_buybox_desktop",children:[{selector:"#partialStateBuybox div.a-section.a-text-center.a-spacing-small",add_text:!0}],generate_metadata:e=>{const t=e.querySelector("input#ASIN");return{name:"product_details",data:{asin:(null==t?void 0:t.value)||""}}}},{selector:"#attach-warranty-pane #attach-warranty-display",name:"warranty-box",children:[{selector:"div.attach-warranty-box",text_selector:"#attach-warranty-card-display-title",name:"from_text",children:[{selector:"i.a-icon-checkbox",name:"select",clickable:!0},{selector:"#attach-warranty-card-display-title",add_text:!0},{selector:"#attach-warranty-card-price",add_text:!0}]},{selector:"div.a-section.attach-warranty-button-row",children:[{selector:"input[aria-labelledby='attachSiAddCoverage-announce']",name:"add_protection",clickable:!0,add_text:!0,text_format:"Add Protection"},{selector:"input[aria-labelledby='attachSiNoCoverage-announce']",name:"no_protection",clickable:!0,add_text:!0,text_format:"No Thanks"}]}]}]}]},{match:"/cart/add-to-cart",match_method:"url",selector:"html",match_with_ref:!0,children:[{selector:"head",children:[{selector:"title",add_text:!0}]},{selector:"body",children:[a,r,{selector:"#sw-atc-buy-box",children:[{selector:"#sw-subtotal",children:[{selector:"#sw-subtotal-item-count",add_text:!0},{selector:"span[aria-hidden='true']",add_text:!0}]},{selector:"#sc-buy-box-ptc-button span.a-button-inner input",add_text:!0,text_selector:"div.sc-without-multicart",clickable:!0,name:"check_out",fetch_url:"/cart"},{selector:"#sw-gtc a",add_text:!0,clickable:!0,name:"go_to_cart"}]}]}]},{match:"/cart/smart-wagon",match_method:"url",selector:"html",children:[{selector:"head",children:[{selector:"title",add_text:!0}]},{selector:"body",children:[a,r,{selector:"#sw-atc-buy-box",children:[{selector:"#sw-subtotal",children:[{selector:"#sw-subtotal-item-count",add_text:!0},{selector:"span[aria-hidden='true']",add_text:!0}]},{selector:"#sc-buy-box-ptc-button span.a-button-inner input",add_text:!0,text_selector:"div.sc-without-multicart",clickable:!0,name:"check_out",fetch_url:"/cart"},{selector:"#sw-gtc a",add_text:!0,clickable:!0,name:"go_to_cart"}]}]}]},{match:"/gp/cart/view.html",match_method:"url",selector:"html",children:[{selector:"head",children:[{selector:"title",add_text:!0}]},{selector:"body",children:u}]},{match:"/cart",match_method:"url",match_with_ref:!0,selector:"html",children:[{selector:"head",children:[{selector:"title",add_text:!0}]},{selector:"body",children:u}]},{match:"/cart/localmarket",match_method:"url",match_with_ref:!0,selector:"html",children:[{selector:"head",children:[{selector:"title",add_text:!0}]},{selector:"body",children:[a,{selector:"div[data-name='Active Items']",name:"active_item_list",children:[{selector:"div.sc-list-item-content",text_selector:"ul > li > span.a-list-item > a.sc-product-title span.a-truncate-full",name:"from_text",children:[{selector:"div.sc-product-image-desktop a img",clickable:!0,name:"product_image",add_text:!0,text_format:"Product Image"},{selector:"ul > li > span.a-list-item > a.sc-product-title",clickable:!0,text_selector:"span.a-truncate-full",add_text:!0,name:"product_detail"},{selector:"div.sc-badge-price-to-pay span.sc-price",add_text:!0},{selector:"div.sc-action-links",children:[{selector:"div.qs-widget-container",children:[{selector:"input[aria-label='Remove']",add_text:!0,text_js:function(e){return e.hasAttribute("aria-label")?e.getAttribute("aria-label"):""},clickable:!0,name:"decrease_quantity_by_one"},{selector:"div.qs-widget-dropdown-flex-wrapper button",add_text:!0,clickable:!0,name:"quantity_drop_down_list",text_format:"Current Quantity: {}"},{selector:'div.qs-widget-dropdown-wrapper span[data-action="qs-widget-dropdown-decl"]',add_text:!0,clickable:!0,use_root:!0,name:"from_text",text_format:"Drop Down Option {}"},{selector:'div[id^="qs-widget-quantity-container-atfc"] span[data-action="qs-widget-quantity-changelink-decl"]',add_text:!0,clickable:!0,use_root:!0,name:"from_text"},{selector:'div[id^="qs-widget-summary-container-atfc"] span[id^="qs-widget-summary-atc-atfc"]',add_text:!0,clickable:!0,use_root:!0,name:"from_text"},{selector:"input[aria-label='Add']",add_text:!0,text_js:function(e){return e.hasAttribute("aria-label")?e.getAttribute("aria-label"):""},clickable:!0,name:"increase_quantity_by_one"}]}]},{selector:"input[data-action='delete']",add_text:!0,clickable:!0,name:"delete"}],generate_metadata:e=>{var t,a;const r=null===(t=e.parentElement)||void 0===t?void 0:t.getAttribute("data-asin"),n=e.querySelector("div.sc-badge-price-to-pay span.sc-price"),i=null===(a=null==n?void 0:n.innerText)||void 0===a?void 0:a.replace(/[\n]/g,""),l=e.querySelector("ul > li > span.a-list-item > a.sc-product-title span.a-truncate-full"),o=null==l?void 0:l.innerText,c=e.querySelector("ul > li > span.a-list-item > a.sc-product-title"),d=null==c?void 0:c.getAttribute("href"),s=e.querySelector("div.sc-action-links div.qs-widget-dropdown-flex-wrapper button");return{name:"active_items",data:{title:o,asin:r,price:i,url:d,quantity:null==s?void 0:s.innerText}}}}]},m,{selector:'div.sc-buy-box-inner-box input[name^="proceedToALMCheckout"]',clickable:!0,name:"check_out",add_text:!0},{selector:"div.sc-buy-box-inner-box a",clickable:!0,name:"from_text",add_text:!0},{selector:"#sc-cart-above-actions button, #sc-cart-above-actions a",clickable:!0,name:"from_text",add_text:!0}]}]},{match:"/alm/byg",match_method:"url",selector:"html",children:[{selector:"head",children:[{selector:"title",add_text:!0}]},{selector:"body",children:[{selector:'a[name="proceedToCheckout"]',name:"check_out",add_text:!0,clickable:!0},m]}]},{match:"/alm/substitution",match_method:"url",selector:"html",children:[{selector:"head",children:[{selector:"title",add_text:!0}]},{selector:"body",children:[{selector:"#subsContinueButton input",name:"check_out",add_text:!0,clickable:!0,text_format:"Continue"},{selector:"div.subs-cart-item",name:"from_text",text_selector:"div.a-spacing-top-base span.a-size-base",children:[{selector:"div.a-spacing-top-base span.a-size-base",add_text:!0},{selector:"div.a-spacing-top-mini span.a-color-price",add_text:!0}],generate_metadata:e=>{const t=e.querySelector("div[data-cart-item-asin]"),a=null==t?void 0:t.getAttribute("data-cart-item-asin"),r=e.querySelector("div.a-spacing-top-base span.a-size-base"),n=null==r?void 0:r.innerText,i=e.querySelector("div.a-spacing-top-mini span.a-color-price");return{name:"active_items",data:{asin:a,title:n,price:null==i?void 0:i.innerText}}}}]}]},{match:"/ap/signin",match_method:"url",terminate:function(){return!!arguments[0]},terminate_callback:function(){return arguments[0]},selector:"html"},{match:"/gp/buy/spc/handlers/display.html",match_method:"url",terminate:function(){return!!arguments[0]},terminate_callback:function(){return arguments[0]},selector:"html"},{match:"/gp/buyagain",match_method:"url",match_with_ref:!0,selector:"html",children:[{selector:"head",children:[{selector:"title",add_text:!0}]},{selector:"body",children:[a,r,{selector:"div.a-section:has(div.filter-container)",name:"filters",children:[{selector:"div.filter-container",text_selector:"span#filter-container-header",name:"from_text",children:[{selector:"span#filter-container-header",add_text:!0},{selector:"label",add_text:!0,clickable:!0,name:"from_text",generate_metadata:e=>{var t,a;const r=e.innerText,n=null===(t=e.closest("div.filter-container"))||void 0===t?void 0:t.querySelector("#filter-container-header"),i=null===(a=null==n?void 0:n.innerText)||void 0===a?void 0:a.replace(/[ ]/g,"_").toLowerCase().trim(),l=e.querySelector("input");return l&&l.checked?{name:"filters."+i,data:{title:(null==r?void 0:r.trim())||"",selected:!0}}:{name:"filters."+i,data:{title:(null==r?void 0:r.trim())||"",selected:!1}}}}]}]},{selector:"div.alm-grid-desktop-grid-container",name:"product_list",children:[{selector:'div[id^="gridCell"]',name:"from_text",text_selector:"div[id^='closedCard'] a[id^='title'] span.a-truncate-full",children:[{selector:"div[id^='gridElement']",name:"product_card",children:[{selector:"div[id^='closedCard']",name:"closed_product_card",children:[{selector:"div[id^='info']",name:"open_product_card",clickable:!0,text_format:"Open Product Card"},{selector:"form span.a-button-inner",name:"add_to_cart",clickable:!0,add_text:!0},{selector:'div[id^="seeBuyingOptionsWrapper"] a',name:"see_buying_options",clickable:!0,add_text:!0}]},{selector:'div[name="ax-qs"]',children:[{selector:"button[aria-label='Decrease quantity by one']",add_text:!0,text_js:function(e){return e.hasAttribute("aria-label")?e.getAttribute("aria-label"):""},clickable:!0,name:"decrease_quantity_by_one"},{selector:"div[role='spinbutton']",add_text:!0,text_format:"Current Quantity: {}"},{selector:"button[aria-label='Increase quantity by one']",add_text:!0,text_js:function(e){return e.hasAttribute("aria-label")?e.getAttribute("aria-label"):""},clickable:!0,name:"increase_quantity_by_one"}]},{selector:"div[id^='expandedImage']",name:"close_product_card",clickable:!0,add_text:!0,text_format:"Close Product Card"}]}],generate_metadata:e=>{var t;const a=e.querySelector("div[id^='closedCard'] div[id^='info']"),r=null==a?void 0:a.getAttribute("data-asin"),n=e.querySelector('div[id^="closedCard"] div[id^="info"] span[class*="priceBlockWithMarginRight"] span.a-price > span:not(.a-offscreen)'),i=null===(t=null==n?void 0:n.innerText)||void 0===t?void 0:t.replace(/[\n]/g,""),l=e.querySelector("div[id^='closedCard'] a[id^='title'] span.a-truncate-full"),o=null==l?void 0:l.innerText,c=e.querySelector('div[id^="closedCard"] div[id^="info"] #udmDeliveryMessageComponent');return{name:"active_items_closed",data:{title:o,asin:r,price:i,delivery:null==c?void 0:c.innerText.replace(/[\n]/g," ")}}}},{selector:'div[id^="featured"]',name:"from_text",text_selector:"a[id^='title'] span.a-truncate-full",children:[{selector:'div[id^="detailContentWrapper"] div[id^="detailContent"]',name:"detailed_content",children:[{selector:"div:has(> img)",clickable:!0,name:"product_image",add_text:!0,text_format:"Product Image"},{selector:"a[id^='title']",clickable:!0,name:"product_title",add_text:!0,text_selector:"span.a-truncate-full"},{selector:"div[class*='multiOfferPillContainer'] a",clickable:!0,name:"from_text",add_text:!0},{selector:"div[data-buyingoptiontype='NEW'], div[class*='asinDetailInfoColumns']:has(input[name='submit.addToCart']",name:"one_time_purchase",children:[{selector:'span[class*="priceBlockWithMarginRight"] span.a-price > span:not(.a-offscreen)',add_text:!0,name:"price"},{selector:"#udmDeliveryMessageComponent",add_text:!0,name:"delivery"},{selector:'div[class*="actionButtonsRow"], div[class*="asinDetailActionsRow"]',name:"buttons",children:[{selector:'input[name="submit.addToCart"]',add_text:!0,name:"add_to_cart",clickable:!0},{selector:'input[id^="buy-now"]',add_text:!0,name:"buy_now",clickable:!0},{selector:'div[id^="feedbackButtonSection"] input',add_text:!0,name:"remove_item",clickable:!0},{selector:'div[name="ax-qs"]',children:[{selector:"button[aria-label='Decrease quantity by one']",add_text:!0,text_js:function(e){return e.hasAttribute("aria-label")?e.getAttribute("aria-label"):""},clickable:!0,name:"decrease_quantity_by_one"},{selector:"div[role='spinbutton']",add_text:!0,text_format:"Current Quantity: {}"},{selector:"button[aria-label='Increase quantity by one']",add_text:!0,text_js:function(e){return e.hasAttribute("aria-label")?e.getAttribute("aria-label"):""},clickable:!0,name:"increase_quantity_by_one"}]}]}],generate_metadata:e=>{var t,a,r,n,i;const l=e.closest("div[data-asin]"),o=null==l?void 0:l.getAttribute("data-asin"),c=e.querySelector('span[class*="priceBlockWithMarginRight"] span.a-price > span:not(.a-offscreen)'),d=null===(t=null==c?void 0:c.innerText)||void 0===t?void 0:t.replace(/[\n]/g,""),s=null===(r=null===(a=e.parentElement)||void 0===a?void 0:a.parentElement)||void 0===r?void 0:r.querySelector("a[id^='title'] span.a-truncate-full"),u=null==s?void 0:s.innerText,m=null===(i=null===(n=e.parentElement)||void 0===n?void 0:n.parentElement)||void 0===i?void 0:i.querySelector("a[id^='title']"),p=null==m?void 0:m.getAttribute("href"),_=e.querySelector("#udmDeliveryMessageComponent"),v=null==_?void 0:_.innerText.replace(/[\n]/g," "),b=e.querySelector('div[name="ax-qs"] div[role="spinbutton"]');return{name:"active_items_opened_purchase",data:{title:u,asin:o,price:d,url:p,delivery:v,quantity:(null==b?void 0:b.innerText)||"1"}}}},{selector:"div[data-buyingoptiontype='SNS'], div[class*='snsUpsellBlockContainer']",name:"subscribe_and_save",children:[{selector:'span[class*="priceBlockWithMarginRight"] span.a-price > span:not(.a-offscreen)',add_text:!0,name:"price"},{selector:"#udmDeliveryMessageComponent",add_text:!0,name:"delivery"},{selector:'div[class*="actionButtonsRow"]',name:"buttons",children:[{selector:'input[name="submit.addToCart"]',add_text:!0,name:"add_to_cart",clickable:!0},{selector:'span[class*="snsButton"] input',add_text:!0,name:"subscribe_and_save",clickable:!0},{selector:'div[id^="feedbackButtonSection"] input',add_text:!0,name:"remove_item",clickable:!0}]},{selector:'span[class*="subscriptionButton"] input',add_text:!0,name:"set_up_subscription",clickable:!0}],generate_metadata:e=>{var t,a,r,n,i;const l=e.closest("div[data-asin]"),o=null==l?void 0:l.getAttribute("data-asin"),c=e.querySelector('span[class*="priceBlockWithMarginRight"] span.a-price > span:not(.a-offscreen)'),d=null===(t=null==c?void 0:c.innerText)||void 0===t?void 0:t.replace(/[\n]/g,""),s=null===(r=null===(a=e.parentElement)||void 0===a?void 0:a.parentElement)||void 0===r?void 0:r.querySelector("a[id^='title'] span.a-truncate-full"),u=null==s?void 0:s.innerText,m=null===(i=null===(n=e.parentElement)||void 0===n?void 0:n.parentElement)||void 0===i?void 0:i.querySelector("a[id^='title']"),p=null==m?void 0:m.getAttribute("href"),_=e.querySelector("#udmDeliveryMessageComponent");return{name:"active_items_opened_sns",data:{title:u,asin:o,price:d,url:p,delivery:null==_?void 0:_.innerText.replace(/[\n]/g," ")}}}}]},{selector:"div[id^='detail-view-similar-items']",name:"similar_items",children:[{selector:"li.a-carousel-card",name:"from_text",text_selector:"a[id^='title'] span.a-truncate-full",children:[{selector:"div.a-image-container:has(> img)",clickable:!0,name:"product_image",add_text:!0,text_format:"Product Image"},{selector:"a[id^='title']",clickable:!0,name:"product_title",add_text:!0,text_selector:"span.a-truncate-full"},{selector:'span[class*="priceBlockWithMarginRight"] span.a-price > span:not(.a-offscreen)',add_text:!0,name:"price"},{selector:"#udmDeliveryMessageComponent",add_text:!0,name:"delivery"},{selector:'input[name="submit.addToCart"], input[name^="atfcShim"], button[aria-label="Add to Cart. Click to change quantity"]',add_text:!0,name:"add_to_cart",clickable:!0},{selector:'div[id^="seeBuyingOptionsWrapper"] a',name:"see_buying_options",clickable:!0,add_text:!0},{selector:'div[name="ax-qs"]',children:[{selector:"button[aria-label='Decrease quantity by one']",add_text:!0,text_js:function(e){return e.hasAttribute("aria-label")?e.getAttribute("aria-label"):""},clickable:!0,name:"decrease_quantity_by_one"},{selector:"div[role='spinbutton']",add_text:!0,text_format:"Current Quantity: {}"},{selector:"button[aria-label='Increase quantity by one']",add_text:!0,text_js:function(e){return e.hasAttribute("aria-label")?e.getAttribute("aria-label"):""},clickable:!0,name:"increase_quantity_by_one"}]},{selector:"div.qs-widget-container",children:[{selector:"input[aria-label='Remove']",add_text:!0,text_js:function(e){return e.hasAttribute("aria-label")?e.getAttribute("aria-label"):""},clickable:!0,name:"decrease_quantity_by_one"},{selector:"div.qs-widget-dropdown-flex-wrapper button",add_text:!0,clickable:!0,name:"drop_down_list",text_format:"Current Quantity: {}"},{selector:'div.qs-widget-dropdown-wrapper span[data-action="qs-widget-dropdown-decl"]',add_text:!0,clickable:!0,use_root:!0,name:"from_text",text_format:"Drop Down Option {}"},{selector:'div[id^="qs-widget-quantity-container-atfc"] span[data-action="qs-widget-quantity-changelink-decl"]',add_text:!0,clickable:!0,use_root:!0,name:"from_text"},{selector:'div[id^="qs-widget-summary-container-atfc"] span[id^="qs-widget-summary-atc-atfc"]',add_text:!0,clickable:!0,use_root:!0,name:"from_text"},{selector:"input[aria-label='Add']",add_text:!0,text_js:function(e){return e.hasAttribute("aria-label")?e.getAttribute("aria-label"):""},clickable:!0,name:"increase_quantity_by_one"}]}],generate_metadata:e=>{var t,a,r;const n=null===(t=e.closest('div[id^="featured"]'))||void 0===t?void 0:t.querySelector('div[id^="detailContentWrapper"] a[id^="title"] span.a-truncate-full'),i=null===(a=null==n?void 0:n.innerText)||void 0===a?void 0:a.toLowerCase().replace(/[^\w]+/g,"_"),l=e.querySelector('div[class*="delightFaceout"]'),o=null==l?void 0:l.getAttribute("data-asin"),c=e.querySelector('span[class*="priceBlockWithMarginRight"] span.a-price > span:not(.a-offscreen)'),d=null===(r=null==c?void 0:c.innerText)||void 0===r?void 0:r.replace(/[\n]/g,""),s=e.querySelector("a[id^='title'] span.a-truncate-full"),u=null==s?void 0:s.innerText,m=e.querySelector("a[id^='title']"),p=null==m?void 0:m.getAttribute("href"),_=e.querySelector("#udmDeliveryMessageComponent");return{name:i+".similar_items",data:{title:u,asin:o,price:d,url:p,delivery:null==_?void 0:_.innerText.replace(/[\n]/g," ")}}}}]}]}]},{selector:"#snsUpsellModal",name:"subscribe_and_save_popover",children:[{selector:'div[class*="modalHeader"]',children:[{selector:'span[class*="modalHeaderText"]',add_text:!0},{selector:'span[data-action="a-popover-close"]',add_text:!0,clickable:!0,text_format:"Close",name:"from_text"}]},{selector:'div[class*="modalContent"]',direct_child:!0,children:[{selector:'div:not([class*="buttonContainer"]):not(:has(select))',add_text:!0},{selector:"select",name:"drop_down_list"},{selector:'div[class*="buttonContainer"]',children:[{selector:'div[class*="cancelButtonContainer"] input',add_text:!0,text_format:"Cancel",clickable:!0,name:"from_text"},{selector:'div[class*="subscriptionButtonContainer"] input[name="submit.addToCart"]',add_text:!0,text_format:"Add Subscription to Cart",clickable:!0,name:"from_text"}]}]}],generate_metadata:e=>{var t,a;const r=e.querySelector('div[class*="modalContent"]');return{name:"popover_item",data:{asin:null===(a=null===(t=null==r?void 0:r.id)||void 0===t?void 0:t.split("-")[1])||void 0===a?void 0:a.trim()}}}}]}]}];var _=function(e,t,a,r){return new(a||(a=Promise))((function(n,i){function l(e){try{c(r.next(e))}catch(e){i(e)}}function o(e){try{c(r.throw(e))}catch(e){i(e)}}function c(e){var t;e.done?n(e.value):(t=e.value,t instanceof a?t:new a((function(e){e(t)}))).then(l,o)}c((r=r.apply(e,t||[])).next())}))};function v(e,t,a="",r=0,n=globalThis.document,i=globalThis.window){var l;let o=t.tag_name||e.tagName.toLowerCase();o.endsWith("_")&&(o=o.slice(0,-1));const c=n.createElement(o);let d="";if(t.text_selector){const a=e.querySelector(t.text_selector);a&&(d=a.innerText||a.textContent||"")}else t.text_js?d=t.text_js(e):t.add_text&&(d=e.innerText||e.textContent||"");d=d.replace(/\s+/g," ").trim(),t.text_format?d=t.text_format.replace("{}",d):t.text_format&&(d=t.text_format),d&&t.add_text&&(c.textContent=d);let s="";if(t.name&&("from_text"===t.name?(s=a?a+".":"",d?s+=d.toLowerCase().replace(/[^\w]+/g,"_"):s=""):"from_nth_child"===t.name?(s=a?a+".":"",s+=r.toString()):(s=a?a+".":"",s+=t.name),c.setAttribute("name",s),a=s),t.generate_metadata){const a=t.generate_metadata(e),r=JSON.stringify(a.data),n=a.name;e.setAttribute("data-element-meta-name",n),e.setAttribute("data-element-meta-data",r)}if(t.clickable){if(!t.name)throw new Error("clickable element must have a name");let a;a=t.click_selector?e.querySelector(t.click_selector):e,a&&a.setAttribute("data-clickable-id",s),i.clickable_recipes||(i.clickable_recipes={}),i.clickable_recipes[s]=t}if(t.fetch_url&&e.setAttribute("data-fetch-url",t.fetch_url),"input"===o){const a=e.getAttribute("type");["text","number"].includes(a)?(c.setAttribute("value",e.value),e.setAttribute("data-input-id",s)):"checkbox"===a?c.setAttribute("checked",e.checked.toString()):"radio"===a&&(c.setAttribute("checked",e.checked.toString()),e.setAttribute("data-clickable-id",s)),i.input_recipes||(i.input_recipes={}),i.input_recipes[s]=t}if("select"===o){e.setAttribute("data-select-id",s);const t=e.getAttribute("id"),a=(e.getAttribute("name"),null===(l=e.parentElement)||void 0===l?void 0:l.querySelector("span.a-button-dropdown span.a-button-text")),r=n.createElement("span");r.textContent=a.textContent;const i=s+".open_drop_down_list";r.setAttribute("name",i),a.setAttribute("data-clickable-id",i),c.appendChild(r),n.querySelectorAll('a[id^="'+t+'"]').forEach((e=>_(this,void 0,void 0,(function*(){const t=e.textContent.trim()||e.querySelector("input").value,a=s+"."+t,r=n.createElement("a");r.textContent=e.textContent,r.setAttribute("value",t),r.setAttribute("name",a),r.setAttribute("selected",e.getAttribute("aria-selected")),e.setAttribute("data-clickable-id",a),c.appendChild(r)}))))}if(["alt","title","type","value","role","aria-label","aria-hidden","aria-selected"].forEach((t=>{const a=e.getAttribute(t);a&&c.setAttribute(t,a)})),t.keep_attr)for(const a of t.keep_attr){const t=e.getAttribute(a);t&&c.setAttribute(a,t)}if(t.class&&c.setAttribute("class",t.class),t.id&&c.setAttribute("id",t.id),t.override_attr)for(const a in t.override_attr)c.setAttribute(a,t.override_attr[a](e));if(t.children&&t.children.length>0)for(const r of t.children){const t=r.direct_child?`:scope > ${r.selector}`:r.selector;let l;l=r.use_root?n.querySelectorAll(t):e.querySelectorAll(t),l.forEach(((e,t)=>{const l=v(e,r,a,t,n,i);if(c.appendChild(l),r.insert_split_marker&&t%(r.insert_split_marker_every||1)==0){const e=n.createElement("split-marker");c.appendChild(e)}if(r.insert_split_marker){const e=n.createElement("split-marker");c.appendChild(e)}}))}if(t.empty_message&&0===c.children.length){const e=n.createTextNode(t.empty_message);c.appendChild(e)}return c}function b(e=null,t=globalThis.document){let a;a=e?e.querySelectorAll("[data-element-meta-name]"):t.querySelectorAll("[data-element-meta-name]");const r={};return a.forEach((e=>{const t=e.getAttribute("data-element-meta-name"),a=e.getAttribute("data-element-meta-data");r[t]||(r[t]=[]),r[t].push(JSON.parse(a))})),r}function h(){document.querySelectorAll('a, button, [onclick], input[type="button"], input[type="submit"]').forEach((e=>{const t=e.getBoundingClientRect(),a=t.top>=0&&t.left>=0&&t.bottom<=(window.innerHeight||document.documentElement.clientHeight)&&t.right<=(window.innerWidth||document.documentElement.clientWidth);e.setAttribute("visible-clickable-element-marker",a?"true":"false")}))}function x(e=null,t=null,a=globalThis.document,r=globalThis.window){console.log("start process recipe");try{const n=function(e=null,t=globalThis.document,a=globalThis.window){var r,n;let i;i=e?new URL(e):new URL(a.location.href);let l=i.pathname;l="/"!==l?l.replace(/\/+$/,""):l;for(const e of p){const a=e.match_method||"text";if("text"===a)try{const a=t.querySelector(e.match);if(a&&(!e.match_text||null!==(n=null===(r=a.textContent)||void 0===r?void 0:r.toLowerCase().includes(e.match_text.toLowerCase()))&&void 0!==n&&n))return console.log("matched with recipe ",e.match),e}catch(e){console.error("Error checking text match:",e)}else if("url"===a){if(e.match===l)return console.log("matched with recipe ",e.match),e;if(e.match_with_ref&&(l.startsWith(e.match+"/ref=")||l.startsWith(e.match+"ref=")))return console.log("matched with recipe ",e.match),e}}throw new Error(`No matching recipe found for path: ${l}`)}(t,a,r);let i;if(i=e||a.querySelector(n.selector),i){return v(i,n,"",0,a,r).outerHTML}}catch(e){console.error("Error processing recipe:",e)}}const f={randomUUID:"undefined"!=typeof crypto&&crypto.randomUUID&&crypto.randomUUID.bind(crypto)};let g;const y=new Uint8Array(16);function w(){if(!g){if("undefined"==typeof crypto||!crypto.getRandomValues)throw new Error("crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported");g=crypto.getRandomValues.bind(crypto)}return g(y)}const k=[];for(let e=0;e<256;++e)k.push((e+256).toString(16).slice(1));const q=function(e,t,a){if(f.randomUUID&&!t&&!e)return f.randomUUID();const r=(e=e||{}).random||(e.rng||w)();if(r[6]=15&r[6]|64,r[8]=63&r[8]|128,t){a=a||0;for(let e=0;e<16;++e)t[a+e]=r[e];return t}return function(e,t=0){return(k[e[t+0]]+k[e[t+1]]+k[e[t+2]]+k[e[t+3]]+"-"+k[e[t+4]]+k[e[t+5]]+"-"+k[e[t+6]]+k[e[t+7]]+"-"+k[e[t+8]]+k[e[t+9]]+"-"+k[e[t+10]]+k[e[t+11]]+k[e[t+12]]+k[e[t+13]]+k[e[t+14]]+k[e[t+15]]).toLowerCase()}(r)};var S=function(e,t,a,r){return new(a||(a=Promise))((function(n,i){function l(e){try{c(r.next(e))}catch(e){i(e)}}function o(e){try{c(r.throw(e))}catch(e){i(e)}}function c(e){var t;e.done?n(e.value):(t=e.value,t instanceof a?t:new a((function(e){e(t)}))).then(l,o)}c((r=r.apply(e,t||[])).next())}))};function A(e,t){return S(this,void 0,void 0,(function*(){try{const a=yield chrome.runtime.sendMessage({action:"captureScreenshot",timestamp:e,uuid:t});if(!a.success)throw new Error(a.message||"Screenshot capture failed");window.postMessage({type:"SCREENSHOT_COMPLETE",timestamp:e,success:!0},"*")}catch(t){console.error("Error capturing screenshot in content script:",t),window.postMessage({type:"SCREENSHOT_COMPLETE",timestamp:e,success:!1,error:t.message},"*")}}))}window.addEventListener("message",(e=>S(void 0,void 0,void 0,(function*(){if(e.source===window){if(e.data.type&&"GET_USER_ID"===e.data.type){const e=(yield chrome.storage.local.get("userId")).userId;window.postMessage({type:"GET_USER_ID_RESPONSE",userId:e},"*")}if(e.data.type&&"CAPTURE_SCREENSHOT"===e.data.type&&(yield A(e.data.timestamp,e.data.uuid)),e.data.type&&"SAVE_INTERACTION_DATA"===e.data.type)try{const t=Object.assign({},e.data.data),a=yield chrome.runtime.sendMessage({action:"saveData",data:t});if(!a.success)throw new Error(a.message||"interaction capture failed");window.postMessage({type:"INTERACTION_COMPLETE",timestamp:e.data.data.timestamp,success:!0},"*")}catch(t){console.error("Error saving interaction data:",t),window.postMessage({type:"INTERACTION_COMPLETE",success:!1,error:t.message,timestamp:e.data.data.timestamp},"*")}}}))));const T=()=>{document.addEventListener("DOMContentLoaded",(()=>{console.log("DOMContentLoaded event triggered"),h(),x()}));let e,t=!1,a=window.scrollY||document.documentElement.scrollTop,r=0,n=window.scrollX||document.documentElement.scrollLeft,i=0;function l(e,l){return S(this,void 0,void 0,(function*(){try{console.log("scroll stop uuid",e);const o=window.scrollY||document.documentElement.scrollTop;r+=o-a;const c=window.scrollX||document.documentElement.scrollLeft;i+=c-n;const d={width:window.innerWidth,height:window.innerHeight};0===r&&0===i||(yield function(e,t,a,r,n,i,l,o,c){return S(this,void 0,void 0,(function*(){try{const d=function(e,t){return`html_${function(e){let t=0;for(let a=0;a<e.length;a++)t=(t<<5)-t+e.charCodeAt(a),t|=0;return console.log("Hash value before return:",t),t.toString()}(window.location.href)}_${e}_${t}`}(a,r),s=x();h();const u=b();let m={uuid:r,eventType:e,timestamp:a,htmlSnapshotId:d,pageMeta:u||"",htmlContent:document.documentElement.outerHTML,simplifiedHTML:s};m.windowSize=n,m.scrollDistance_Y=i,m.scrollCurrentTop=l,m.scrollCurrentLeft=o,m.scrollDistance_X=c,m.target=t,yield chrome.runtime.sendMessage({action:"saveData",data:m})}catch(t){console.error(`Error during ${e} event handling:`,t)}}))}("scroll",window.location.href,l,e,d,r,o,i,c),r=0,i=0,a=o,n=c),t=!1}catch(e){console.error("Error during scroll stop handling:",e)}}))}let o="",c="";document.addEventListener("scroll",(r=>S(void 0,void 0,void 0,(function*(){console.log("scroll event"),document.getElementById("reason-modal")||(r.target===window||r.target===document||r.target===document.documentElement?(t||(t=!0,a=window.scrollY||document.documentElement.scrollTop,o=q(),c=(new Date).toISOString(),yield function(e,t){return S(this,void 0,void 0,(function*(){try{console.log("First scroll event"),A(t,e),x()}catch(e){console.error("Error during first scroll handling:",e)}}))}(o,c)),window.clearTimeout(e),e=window.setTimeout((()=>l(o,c)),300)):console.log("Scroll event ignored from a nested scrollable container"))})))),document.addEventListener("DOMContentLoaded",(()=>{document.querySelectorAll('input[id="placeOrder"], input[id="turbo-checkout-pyo-button"]');const e=document.querySelector('input[id="buy-now-button"]'),t=document.querySelector('button[id="rcx-subscribe-submit-button-announce"]'),a=document.querySelector('input[name="proceedToRetailCheckout"]');[e,t].forEach((e=>{e&&e.addEventListener("click",(()=>S(void 0,void 0,void 0,(function*(){var t,a,r,n,i;try{const l={title:(null===(a=null===(t=document.querySelector("#title"))||void 0===t?void 0:t.innerText)||void 0===a?void 0:a.trim())||"",price:(null===(n=null===(r=document.querySelector("span.a-price.aok-align-center.reinventPricePriceToPayMargin.priceToPay"))||void 0===r?void 0:r.innerText)||void 0===n?void 0:n.trim())||"",asin:(null===(i=document.querySelector("input#ASIN"))||void 0===i?void 0:i.value)||"",options:{}};Array.from(document.querySelectorAll("#twister div.a-row:has(label.a-form-label):has(span.selection)")).forEach((e=>{var t,a,r;const n=(null===(a=null===(t=e.querySelector("label.a-form-label"))||void 0===t?void 0:t.innerText)||void 0===a?void 0:a.replace(": ",""))||"",i=(null===(r=e.querySelector("span.selection"))||void 0===r?void 0:r.innerText)||"";n&&i&&(l.options[n]=i)})),console.log(`${e.id} clicked - Product Info:`,l),yield chrome.runtime.sendMessage({action:"saveOrder",data:{timestamp:(new Date).toISOString(),name:l.title,price:parseFloat(l.price.replace(/[^0-9.]/g,"")),asin:l.asin,options:l.options}})}catch(t){console.error(`Error capturing ${e.id} product info:`,t)}}))))})),a&&a.addEventListener("click",(e=>S(void 0,void 0,void 0,(function*(){var e,t,a;try{const r=[],n=Array.from(document.querySelectorAll('[id^="sc-active-"]')).filter((e=>"sc-active-cart"!==e.id));for(const i of n){const n=i.querySelector('input[type="checkbox"]');if(n&&n.checked){const n=i.querySelector(".sc-item-product-title-cont .sc-product-link");if(n){const l=n.querySelector(".a-truncate-full"),o=(null===(e=null==l?void 0:l.textContent)||void 0===e?void 0:e.trim())||"",c=(null===(t=(n.getAttribute("href")||"").match(/product\/([A-Z0-9]{10})/))||void 0===t?void 0:t[1])||"",d=i.querySelector(".sc-item-price-block .a-offscreen"),s=d?parseFloat((null===(a=d.textContent)||void 0===a?void 0:a.replace(/[^0-9.]/g,""))||"0"):0,u={};i.querySelectorAll(".sc-product-variation").forEach((e=>{var t,a,r,n;const i=(null===(a=null===(t=e.querySelector(".a-text-bold"))||void 0===t?void 0:t.textContent)||void 0===a?void 0:a.trim().replace(":",""))||"",l=(null===(n=null===(r=e.querySelector(".a-size-small:not(.a-text-bold)"))||void 0===r?void 0:r.textContent)||void 0===n?void 0:n.trim())||"";i&&l&&(u[i]=l)})),r.push({timestamp:(new Date).toISOString(),name:o,asin:c,price:s,options:u})}}}r.length>0&&(yield chrome.runtime.sendMessage({action:"saveOrder",data:r}))}catch(e){console.error("Error capturing selected cart items:",e)}}))))})),chrome.runtime.onMessage.addListener(((e,t,a)=>{if(console.log("message",e),"getHTML"===e.action){const e=x();h(),a({html:document.documentElement.outerHTML,pageMeta:b(),simplifiedHTML:e,windowSize:{width:window.innerWidth,height:window.innerHeight}})}if("show_popup"===e.action)return console.log("show_popup",e),document.getElementById("reason-modal")?void a({success:!1,message:"popup already exists"}):(function(e,t,a){const r=`\n        <div id="reason-modal" style="\n            position: fixed;\n            top: 0;\n            left: 0;\n            width: 100%;\n            height: 100%;\n            background: rgba(0, 0, 0, 0.5);\n            display: flex;\n            justify-content: center;\n            align-items: center;\n            z-index: 10000;\n        ">\n            <div style="\n                background: white;\n                padding: 20px;\n                border-radius: 8px;\n                width: 400px;\n            ">\n                <style>\n                    .highlight-question {\n                        padding: 0px 6px;\n                        border-radius: 3px;\n                        display: inline-block;\n                        color: rgb(24, 160, 88);\n                        border: 1px solid rgba(24, 160, 88, 0.3);\n                        background: rgba(24, 160, 88, 0.1);\n                        transition: 0.3s cubic-bezier(0.4, 0, 0.2, 1);\n                    }\n                </style>\n                <h3>${e}</h3>\n                <textarea id="reason-input" placeholder="${t}" style="\n                    width: 100%;\n                    height: 100px;\n                    margin: 10px 0;\n                "></textarea>\n                <div id="error-message" style="\n                    color: red;\n                    display: none;\n                    font-size: 12px;\n                    margin-top: 5px;\n                ">\n                    Please enter a valid reason.\n                </div>\n                <div style="\n                    text-align: right;\n                    display: flex;\n                    justify-content: flex-end;\n                    gap: 10px;\n                ">\n                    <button id="reason-skip">Skip</button>\n                    <button id="reason-submit">Submit</button>\n                </div>\n            </div>\n        </div>\n    `,n=document.createElement("div");n.innerHTML=r,document.querySelector(".attach-desktop-sideSheet:not(.aok-hidden)")?document.querySelector(".attach-desktop-sideSheet:not(.aok-hidden)").appendChild(n):document.body.appendChild(n),document.getElementById("reason-submit").addEventListener("click",(()=>{const e=document.getElementById("reason-input"),t=document.getElementById("error-message"),r=e.value;!function(e){if(!e||0===e.trim().length)return!1;if(e.trim().length<2||e.length<5)return!1;const t=[/^(.)\1{3,}$/,/^[^a-zA-Z0-9]+$/];for(const a of t)if(a.test(e.toLowerCase().replace(/\s+/g,"")))return!1;return!0}(r)?t.style.display="block":(t.style.display="none",n.remove(),a({input:r,success:!0}))})),document.getElementById("reason-skip").addEventListener("click",(()=>{document.getElementById("reason-input"),n.remove(),a({input:null,success:!1})}))}(e.question,e.placeholder,a),!0);if("showReminder"===e.action){console.log("showReminder");const t=e.data;alert(`Thank you for participating!\nYou have contributed ${t.on_date} rationales this week\nYou have contributed ${t.all_time} rationales in total. `)}}))};(function(a,r=!1){return n=this,i=void 0,o=function*(){if(!r)if(chrome.storage){if(!(yield chrome.storage.local.get("userId")).userId)return console.log("no user id"),!0}else if(!(yield new Promise((e=>{const t=a=>{"GET_USER_ID_RESPONSE"===a.data.type&&(window.removeEventListener("message",t),e(a.data.userId))};window.addEventListener("message",t),window.postMessage({type:"GET_USER_ID"},"*")}))))return!0;return!a||!e.some((e=>a.includes(e)))||t.some((e=>a.includes(e)))},new((l=void 0)||(l=Promise))((function(e,t){function a(e){try{c(o.next(e))}catch(e){t(e)}}function r(e){try{c(o.throw(e))}catch(e){t(e)}}function c(t){var n;t.done?e(t.value):(n=t.value,n instanceof l?n:new l((function(e){e(n)}))).then(a,r)}c((o=o.apply(n,i||[])).next())}));var n,i,l,o})(window.location.href).then((e=>{console.log("content script, shouldExclude",e),e||T()}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
