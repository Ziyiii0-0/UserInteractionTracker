/*! For license information please see content_script.js.LICENSE.txt */
(()=>{"use strict";var e="http://userdatacollect.hailab.io",t=["www.amazon.com"],r=("".concat(e,"/interactions_record_status"),"".concat(e,"/check_user_id"),["https://www.amazon.com/checkout/","https://www.amazon.com/gp/buy/","https://www.amazon.com/a/addresses","https://www.amazon.com/cpe/yourpayments/"]);function n(e,t){var r="undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(!r){if(Array.isArray(e)||(r=function(e,t){if(e){if("string"==typeof e)return a(e,t);var r={}.toString.call(e).slice(8,-1);return"Object"===r&&e.constructor&&(r=e.constructor.name),"Map"===r||"Set"===r?Array.from(e):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?a(e,t):void 0}}(e))||t&&e&&"number"==typeof e.length){r&&(e=r);var n=0,i=function(){};return{s:i,n:function(){return n>=e.length?{done:!0}:{done:!1,value:e[n++]}},e:function(e){throw e},f:i}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var o,c=!0,l=!1;return{s:function(){r=r.call(e)},n:function(){var e=r.next();return c=e.done,e},e:function(e){l=!0,o=e},f:function(){try{c||null==r.return||r.return()}finally{if(l)throw o}}}}function a(e,t){(null==t||t>e.length)&&(t=e.length);for(var r=0,n=Array(t);r<t;r++)n[r]=e[r];return n}var i={selector:"#navbar-main",name:"nav_bar",children:[{selector:"#nav-search-bar-form",children:[{selector:"input#twotabsearchtextbox",name:"search_input",generate_metadata:function(e){return{name:"search_term",data:{term:null==e?void 0:e.value}}}},{selector:"#nav-search-submit-button",clickable:!0,name:"search_button"}]},{selector:"#nav-link-accountList",text_selector:"#nav-link-accountList span.nav-line-2",add_text:!0,clickable:!0,name:"account_and_list_button"},{selector:"#nav-orders",add_text:!0,clickable:!0,name:"order_button"},{selector:"#nav-cart",text_selector:"#nav-cart .nav-line-2",add_text:!0,clickable:!0,name:"cart_button"}]},o={selector:"#productFactsDesktopExpander",add_text:!0,class:"product-facts"},c={selector:"div.mir-layout-DELIVERY_BLOCK-slot-PRIMARY_DELIVERY_MESSAGE_LARGE",add_text:!0,class:"product-delivery"},l={selector:"#selectQuantity",name:"quantity_selector",children:[{selector:"label",add_text:!0},{selector:"span.a-dropdown-prompt",add_text:!0},{selector:"select",name:"drop_down_list"}]},s={selector:"input[name='submit.add-to-cart'], input[name='submit.add-to-cart-ubb']",add_text:!0,clickable:!0,name:"add_to_cart",class:"product-add-to-cart"},u={selector:"input[name='submit.buy-now']",add_text:!0,clickable:!0,name:"buy_now",class:"product-buy-now"},d={selector:"#buyBoxAccordion > div.a-box.celwidget",name:"from_text",text_selector:"div.accordion-caption > span",children:[{selector:"div[data-csa-c-content-id='offer_display_desktop_accordion_header']",name:"accordion_selector",add_text:!0,clickable:!0,text_selector:"h5 span.a-text-bold"},{selector:"div.a-accordion-inner.accordion-row-content",name:"purchase_form",children:[o,c,l,{selector:"#replenishmentFrequency_feature_div",name:"delivery_frequency_selector",text_selector:"div.a-section.a-spacing-micro > span",add_text:!0,children:[{selector:"#rcxOrdFreqOnmlWrapper span.a-dropdown-prompt",add_text:!0},{selector:"#rcxOrdFreqOnmlWrapper select",name:"drop_down_list"}]},{selector:"#rcx-subscribe-submit-button-announce",add_text:!0,clickable:!0,name:"set_up_now",class:"product-set-up-now"},s,u]}]},p={selector:"#gsod_singleOfferDisplay_Desktop",children:[{selector:"#addToCart",name:"purchase_form",children:[o,c,l,s,u]}]},m=[i,{selector:"div[data-name='Active Items']",name:"active_item_list",children:[{selector:"div.sc-list-item-content",text_selector:"div.sc-item-content-group ul > li > span.a-list-item > a.sc-product-title span.a-truncate-full",name:"from_text",children:[{selector:"div.sc-item-check-checkbox-selector label",clickable:!0,name:"checkbox"},{selector:"div.sc-image-wrapper a",clickable:!0,name:"product_image",add_text:!0,text_format:"Product Image"},{selector:"div.sc-item-content-group ul > li > span.a-list-item > a.sc-product-title",clickable:!0,text_selector:"span.a-truncate-full",add_text:!0,name:"product_detail"},{selector:"li.sc-delivery-messaging",add_text:!0},{selector:"div.sc-badge-price-to-pay span.sc-product-price span:not(.a-offscreen)",add_text:!0},{selector:"div.sc-item-content-group span.sc-quantity-stepper",children:[{selector:"button[aria-label='Decrease quantity by one']",add_text:!0,text_js:function(e){return e.hasAttribute("aria-label")?e.getAttribute("aria-label"):""},clickable:!0,name:"decrease_quantity_by_one"},{selector:"div[role='spinbutton']",add_text:!0,text_format:"Current Quantity: {}"},{selector:"button[aria-label='Increase quantity by one']",add_text:!0,text_js:function(e){return e.hasAttribute("aria-label")?e.getAttribute("aria-label"):""},clickable:!0,name:"increase_quantity_by_one"}]},{selector:"div.sc-item-content-group input[data-action='delete']",add_text:!0,clickable:!0,name:"delete"},{selector:"div.sc-item-content-group input[data-action='save-for-later']",add_text:!0,clickable:!0,name:"save_for_later"}],generate_metadata:function(e){var t,r,n=null===(t=e.parentElement)||void 0===t?void 0:t.getAttribute("data-asin"),a=e.querySelector("div.sc-badge-price-to-pay span.sc-product-price span:not(.a-offscreen)"),i=null==a||null===(r=a.innerText)||void 0===r?void 0:r.replace(/[\n]/g,""),o=e.querySelector("div.sc-item-content-group ul > li > span.a-list-item > a.sc-product-title span.a-truncate-full"),c=null==o?void 0:o.innerText,l=e.querySelector("div.sc-item-content-group ul > li > span.a-list-item > a.sc-product-title"),s=null==l?void 0:l.getAttribute("href"),u=e.querySelector("li.sc-delivery-messaging"),d=null==u?void 0:u.innerText.replace(/[\n]/g," "),p=e.querySelector("div.sc-item-content-group span.sc-quantity-stepper div[role='spinbutton']"),m=e.querySelector("div.sc-item-check-checkbox-selector input"),f=null==m?void 0:m.selected;return{name:"active_items",data:{title:c,asin:n,price:i,url:s,delivery:d,quantity:null==p?void 0:p.innerText,selected:f}}}}]},{selector:"#sc-buy-box-ptc-button input",add_text:!0,clickable:!0,name:"check_out"}],f=[{match:"/",match_method:"url",selector:"html",children:[{selector:"head",children:[{selector:"title",add_text:!0}]},{selector:"body",children:[i]}]},{match:"/s",match_method:"url",selector:"html",children:[{selector:"head",children:[{selector:"title",add_text:!0}]},{selector:"body",children:[i,{selector:"#s-refinements",name:"refinements",children:[{selector:"#topRefinements\\/0",name:"top_refinements",add_text:"true",text_format:"Recently used filters",children:[{selector:"li",add_text:!0,name:"from_text",clickable:!0,text_js:function(e){try{var t="";if(!e)return t;var r=e.querySelector("a.a-link-normal.s-navigation-item");if(e.innerText&&e.innerText.trim())t+=e.innerText.trim(),r&&r.hasAttribute("title")&&(t+=" ",t+=r.getAttribute("title"));else{var n=e.querySelector("a.a-link-normal.s-navigation-item");n&&n.hasAttribute("title")&&(t+=n.getAttribute("title"))}return t}catch(e){return console.log(e),""}},children:[{selector:"input[type='checkbox']"}]}]},{selector:"div.a-section.a-spacing-none:not(:has(#n-title)):has(span.a-size-base.a-color-base.puis-bold-weight-text):has(ul span.a-declarative > span > li):not(#reviewsRefinements):not(#departments):not(#priceRefinements):not(#filters)",name:"from_text",text_selector:"span.a-size-base.a-color-base.puis-bold-weight-text",children:[{selector:"span.a-size-base.a-color-base.puis-bold-weight-text",add_text:!0,class:"refinement-title"},{selector:"a.s-navigation-clear-link",add_text:!0,name:"clear_selection",clickable:!0},{selector:"ul > span.a-declarative > span > li:has(a.a-link-normal.s-navigation-item)",add_text:!0,name:"from_text",clickable:!0,direct_child:!0,text_js:function(e){try{var t="";if(!e)return t;var r=e.querySelector("a.a-link-normal.s-navigation-item");if(e.innerText&&e.innerText.trim())t+=e.innerText.trim(),r&&r.hasAttribute("title")&&(t+=" ",t+=r.getAttribute("title"));else{var n=e.querySelector("a.a-link-normal.s-navigation-item");n&&n.hasAttribute("title")&&(t+=n.getAttribute("title"))}return r&&r.getAttribute("aria-current"),t}catch(e){return console.log(e),""}},generate_metadata:function(e){var t,r,n,a="",i=e.querySelector("a.a-link-normal.s-navigation-item");if(e.innerText&&e.innerText.trim())a+=e.innerText.trim(),i&&i.hasAttribute("title")&&(a+="_",a+=i.getAttribute("title"));else{var o=e.querySelector("a.a-link-normal.s-navigation-item");o&&o.hasAttribute("title")&&(a+=o.getAttribute("title"))}var c,l=null===(t=e.closest("ul"))||void 0===t||null===(t=t.parentElement)||void 0===t?void 0:t.firstElementChild,s=null==l||null===(r=l.innerText)||void 0===r?void 0:r.replace(/[ ]/g,"_").toLowerCase().trim(),u="";return i&&i.hasAttribute("href")&&(u=i.getAttribute("href")),i&&"true"===i.getAttribute("aria-current")?{name:"refinements."+s,data:{title:(null===(c=a)||void 0===c?void 0:c.trim())||"",selected:!0,url:u}}:{name:"refinements."+s,data:{title:(null===(n=a)||void 0===n?void 0:n.trim())||"",selected:!1,url:u}}},children:[{selector:"input[type='checkbox']"}]},{selector:"ul > span.a-declarative > li > span > div[data-a-expander-name='filter-content-expander']",name:"more_options",children:[{selector:"a[data-csa-c-func-deps='aui-da-a-expander-toggle']",name:"toggle_expansion",add_text:!0},{selector:"li",add_text:!0,name:"from_text",clickable:!0,text_js:function(e){try{var t="";if(!e)return t;var r=e.querySelector("a.a-link-normal.s-navigation-item");if(e.innerText&&e.innerText.trim())t+=e.innerText.trim(),r&&r.hasAttribute("title")&&(t+=" ",t+=r.getAttribute("title"));else{var n=e.querySelector("a.a-link-normal.s-navigation-item");n&&n.hasAttribute("title")&&(t+=n.getAttribute("title"))}return r&&r.getAttribute("aria-current"),t}catch(e){return console.log(e),""}},generate_metadata:function(e){var t,r,n,a="",i=e.querySelector("a.a-link-normal.s-navigation-item");if(e.innerText&&e.innerText.trim())a+=e.innerText.trim(),i&&i.hasAttribute("title")&&(a+="_",a+=i.getAttribute("title"));else{var o=e.querySelector("a.a-link-normal.s-navigation-item");o&&o.hasAttribute("title")&&(a+=o.getAttribute("title"))}var c,l=null===(t=e.closest("ul"))||void 0===t||null===(t=t.parentElement)||void 0===t||null===(t=t.closest("ul"))||void 0===t||null===(t=t.parentElement)||void 0===t?void 0:t.firstElementChild,s=null==l||null===(r=l.innerText)||void 0===r?void 0:r.replace(/[ ]/g,"_").toLowerCase().trim(),u="";return i&&i.hasAttribute("href")&&(u=i.getAttribute("href")),i&&"true"===i.getAttribute("aria-current")?{name:"refinements."+s,data:{title:(null===(c=a)||void 0===c?void 0:c.trim())||"",selected:!0,url:u}}:{name:"refinements."+s,data:{title:(null===(n=a)||void 0===n?void 0:n.trim())||"",selected:!1,url:u}}},children:[{selector:"input[type='checkbox']"}]}]}]},{selector:"#departments",name:"departments",add_text:!0,text_format:"Department",children:[{selector:"li a",add_text:!0,name:"from_text",clickable:!0,generate_metadata:function(e){var t=null==e?void 0:e.getAttribute("aria-current"),r=null==e?void 0:e.innerText,n=null==e?void 0:e.getAttribute("href");return t&&"true"==t?{name:"refinements.departments",data:{title:r,selected:!0,url:n}}:{name:"refinements.departments",data:{title:r,selected:!1,url:n}}}}]},{selector:"#reviewsRefinements",name:"reviews_refinements",add_text:!0,text_format:"Customer Reviews",children:[{selector:"a.s-navigation-clear-link",add_text:!0,name:"clear_selection",clickable:!0},{selector:"li a[aria-current='true']",add_text:!0,name:"from_text",clickable:!0,generate_metadata:function(e){var t;return{name:"refinements.reviews",data:{title:null==e||null===(t=e.innerText)||void 0===t?void 0:t.replace(/\n/g," "),selected:!0,url:null==e?void 0:e.getAttribute("href")}}}},{selector:"li a[aria-current='false']",add_text:!0,name:"from_text",clickable:!0,generate_metadata:function(e){var t;return{name:"refinements.reviews",data:{title:null==e||null===(t=e.innerText)||void 0===t?void 0:t.replace(/\n/g," "),selected:!1,url:null==e?void 0:e.getAttribute("href")}}}}]},{selector:"#priceRefinements",name:"price_refinements",children:[{selector:"#p_36-title, div.sf-refinement-heading span",add_text:!0,name:"price_heading"},{selector:"div[aria-labelledby='p_36-title'] > a",add_text:!0,name:"clear_price_selection",clickable:!0},{selector:"ul[aria-labelledby='p_36-title'] a[aria-current='true']",add_text:!0,name:"from_text",clickable:!0,generate_metadata:function(e){return{name:"refinements.price",data:{title:null==e?void 0:e.innerText,selected:!0,url:null==e?void 0:e.getAttribute("href")}}}},{selector:"ul[aria-labelledby='p_36-title'] a[aria-current='false']",add_text:!0,name:"from_text",clickable:!0,generate_metadata:function(e){return{name:"refinements.price",data:{title:null==e?void 0:e.innerText,selected:!1,url:null==e?void 0:e.getAttribute("href")}}}},{selector:"div.sf-range-slider-row:nth-of-type(1)",add_text:!0,generate_metadata:function(e){var t;return{name:"refinements.price",data:{title:"price_range",range:null==e||null===(t=e.innerText)||void 0===t?void 0:t.replace(/\n/g,"")}}}},{selector:"div.sf-range-slider-row:nth-of-type(2) div.s-lower-bound input",name:"price_min_value",add_text:!0,clickable:!0,keep_attr:["min","max","step"],override_attr:{step_values:function(e){var t=e.closest("form");if(t){var r=t.getAttribute("data-slider-props");if(r)return JSON.parse(r).stepLabels}return""},current_value:function(e){var t=Number.parseInt(e.getAttribute("value"));if(null!==t){var r=e.closest("form");if(r){var n=r.getAttribute("data-slider-props");if(n)return JSON.parse(n).stepLabels[t]}}return""}}},{selector:"div.sf-range-slider-row:nth-of-type(2) div.s-upper-bound input",name:"price_max_value",add_text:!0,clickable:!0,keep_attr:["min","max","step"],override_attr:{step_values:function(e){var t=e.closest("form");if(t){var r=t.getAttribute("data-slider-props");if(r)return JSON.parse(r).stepLabels}return""},current_value:function(e){var t=Number.parseInt(e.getAttribute("value"));if(null!==t){var r=e.closest("form");if(r){var n=r.getAttribute("data-slider-props");if(n)return JSON.parse(n).stepLabels[t]}}return""}}},{selector:"div.sf-submit-range-button input",name:"submit_price_range",add_text:!0,text_format:"Go",clickable:!0},{selector:"div.sf-reset-range-link a",name:"reset_price_selection",add_text:!0,clickable:!0},{selector:"#p_n_deal_type-title",add_text:!0,name:"deals_discounts_heading"},{selector:"div[aria-labelledby='p_n_deal_type-title'] > a",add_text:!0,name:"clear_deals_discount_selection",clickable:!0},{selector:"ul[aria-labelledby='p_n_deal_type-title'] a[aria-current='true']",add_text:!0,name:"from_text",clickable:!0,generate_metadata:function(e){return{name:"refinements.price",data:{title:null==e?void 0:e.innerText,selected:!0,url:null==e?void 0:e.getAttribute("href")}}}},{selector:"ul[aria-labelledby='p_n_deal_type-title'] a[aria-current='false']",add_text:!0,name:"from_text",clickable:!0,generate_metadata:function(e){return{name:"refinements.price",data:{title:null==e?void 0:e.innerText,selected:!1,url:null==e?void 0:e.getAttribute("href")}}}}]}]},{selector:"div.s-main-slot.s-result-list.s-search-results",name:"search_results",children:[{insert_split_marker:!0,insert_split_marker_every:4,selector:'div[data-component-type="s-search-result"]',text_selector:"span.a-color-base.a-text-normal, h2.a-color-base.a-text-normal span",name:"from_text",class:"search-result",children:[{selector:"div[data-cy='title-recipe'] a.a-link-normal.s-link-style.a-text-normal",add_text:!0,class:"product-name",clickable:!0,name:"product_name"},{selector:"div.s-product-image-container",add_text:!0,name:"product_image",clickable:!0,text_format:"Product Image"},{selector:"div.s-color-swatch-container",name:"available_colors",children:[{selector:"div.s-color-swatch-pad",name:"from_text",clickable:!0,add_text:!0,text_js:function(e){var t=e.querySelector("a");return t&&t.getAttribute("aria-label")||""}},{selector:"div[data-csa-c-type='link'] a",direct_child:!0,name:"from_text",clickable:!0,add_text:!0}]},{selector:"div[data-cy='reviews-block']",class:"product-review",children:[{selector:"span.a-icon-alt",add_text:!0,class:"product-rating"},{selector:"span.a-size-base.s-underline-text",add_text:!0,text_format:"{} reviews",class:"product-rating-count"}]},{selector:"div[data-cy='price-recipe']",class:"product-price",children:[{selector:"a.a-link-normal > span.a-price > span.a-offscreen",add_text:!0}]},{selector:"div[data-cy='delivery-recipe']",add_text:!0,class:"product-delivery"},{selector:"div[data-cy='add-to-cart'] button",add_text:!0,clickable:!0,name:"add_to_cart"},{selector:"div[data-csa-c-content-id='s-search-see-details-button'] a",add_text:!0,clickable:!0,name:"see_options"},{selector:'div[name="ax-qs"]',children:[{selector:"button[aria-label='Decrease quantity by one']",add_text:!0,text_js:function(e){return e.hasAttribute("aria-label")?e.getAttribute("aria-label"):""},clickable:!0,name:"decrease_quantity_by_one"},{selector:"div[role='spinbutton']",add_text:!0,text_format:"Current Quantity: {}"},{selector:"button[aria-label='Increase quantity by one']",add_text:!0,text_js:function(e){return e.hasAttribute("aria-label")?e.getAttribute("aria-label"):""},clickable:!0,name:"increase_quantity_by_one"}]}],generate_metadata:function(e){var t=e.getAttribute("data-asin"),r=e.querySelector("div[data-cy='price-recipe'] a.a-link-normal > span.a-price > span.a-offscreen"),n=null==r?void 0:r.innerText,a=e.querySelector("span.a-color-base.a-text-normal, h2.a-color-base.a-text-normal span"),i=null==a?void 0:a.innerText,o=e.querySelector("div[data-cy='title-recipe'] a.a-link-normal.s-link-style.a-text-normal"),c=null==o?void 0:o.getAttribute("href"),l=e.querySelector("div[data-cy='delivery-recipe']");return{name:"search_results",data:{title:i,asin:t,price:n,url:c,delivery:null==l?void 0:l.innerText.replace(/[\n]/g," ")}}}}]},{selector:"span.s-pagination-strip",name:"pagination",children:[{selector:".s-pagination-item",add_text:!0,name:"from_text",clickable:!0}]},{selector:"div.a-popover-wrapper",name:"popover",children:[{selector:"header.a-popover-header button",add_text:!0,clickable:!0,name:"close",text_format:"Close"},{selector:"div.a-popover-inner div.puis-atc-size-variation",children:[{selector:"div.a-row:nth-of-type(1)",direct_child:!0,children:[{selector:"span[data-component-type='s-product-image'] a",name:"product_image",add_text:!0,clickable:!0,text_format:"Product Image"},{selector:"div.puis-size-variation-title a",name:"product_title",add_text:!0,clickable:!0},{selector:"div.puis-size-variation-product-spec",name:"product_specification",add_text:!0,clickable:!0,click_selector:"a"}]},{selector:"div.a-row:nth-of-type(2)",direct_child:!0,children:[{selector:"div.puis-size-variation-product-options",name:"from_text",text_selector:"span.a-size-base.a-color-secondary",children:[{selector:"span.a-size-base.a-color-secondary",add_text:!0},{selector:"span.a-dropdown-prompt",add_text:!0},{selector:"select",name:"drop_down_list"}]},{selector:"div.puis-size-variation-price a.a-text-normal",name:"price",clickable:!0,add_text:!0,text_selector:"span[aria-hidden='true']"},{selector:"div.puis-size-variation-delivery",add_text:!0,name:"delivery"}]},{selector:"div.a-row:nth-of-type(3)",direct_child:!0,children:[{selector:"span.s-no-js-hide input",name:"cancel",clickable:!0,add_text:!0,text_format:"Cancel"},{selector:"div.puis-atcb-add-container button",name:"add_to_cart",clickable:!0,add_text:!0}]}]}]}]}]},{match:"#productTitle",match_text:"",selector:"html",children:[{selector:"head",children:[{selector:"title",add_text:!0}]},{selector:"body",children:[i,{selector:"#centerCol",class:"product-card",children:[{selector:"#title",add_text:!0,keep_attr:["id"],generate_metadata:function(e){return{name:"product_details",data:{title:(null==e?void 0:e.innerText)||""}}}},{selector:"#averageCustomerReviews",class:"review",children:[{selector:"span.a-icon-alt",add_text:!0},{selector:"#acrCustomerReviewText",add_text:!0}]},{selector:'#apex_desktop > div[data-csa-c-slot-id="apex_dp_center_column"] > div[class="offersConsistencyEnabled"] > div:not([style="display:none;"]):not([style="display: none;"]) #corePriceDisplay_desktop_feature_div:has(#sns-base-price) #sns-base-price span.a-price.aok-align-center.reinventPricePriceToPayMargin.priceToPay, #apex_desktop > div[data-csa-c-slot-id="apex_dp_center_column"] > div[class="offersConsistencyEnabled"] > div:not([style="display:none;"]):not([style="display: none;"]) #corePriceDisplay_desktop_feature_div:not(:has(#sns-base-price)) span.a-price.aok-align-center.reinventPricePriceToPayMargin.priceToPay, #apex_desktop > div[data-csa-c-slot-id="apex_dp_center_column"] > div[data-csa-c-content-id="apex_with_rio_cx"] #corePriceDisplay_desktop_feature_div span.a-price.aok-align-center.reinventPricePriceToPayMargin.priceToPay',add_text:!0,text_format:"Price: {}",class:"product-price",generate_metadata:function(e){var t;return{name:"product_details",data:{price:(null==e||null===(t=e.innerText)||void 0===t?void 0:t.replace(/\n/g,""))||""}}},text_js:function(e){var t;return(null==e||null===(t=e.innerText)||void 0===t?void 0:t.replace(/\n/g,""))||""}},{selector:"#twister",class:"product-options",name:"product_options",children:[{selector:"div.a-section",text_selector:"div.a-row:has(label.a-form-label) > label.a-form-label",name:"from_text",direct_child:!0,generate_metadata:function(e){var t,r,a=null===(t=e.querySelector("div.a-row:has(label.a-form-label) label.a-form-label"))||void 0===t?void 0:t.innerHTML.replace(/[:\n]/g,"").trim(),i=null===(r=e.querySelector("div.a-row:has(label.a-form-label) span.selection"))||void 0===r?void 0:r.innerHTML;if(void 0===i||""===i){var o,c=null===(o=e.querySelector("select"))||void 0===o?void 0:o.querySelectorAll("option");if(c){var l,s=n(c);try{for(s.s();!(l=s.n()).done;){var u=l.value;u&&null!==u.getAttribute("selected")&&(i=u.innerHTML.trim())}}catch(e){s.e(e)}finally{s.f()}}}return{name:"product_options",data:{label:a,value:i.trim()}}},children:[{selector:"div.a-row:has(label.a-form-label)",children:[{selector:"label.a-form-label",add_text:!0},{selector:"span.selection",add_text:!0}]},{selector:"select",add_text:!0,name:"drop_down_list"},{selector:"ul",name:"button_list",children:[{selector:"li button",add_text:!0,clickable:!0,name:"from_text",text_js:function(e){var t="";if(e.innerText.trim()){t+=e.innerText.trim();var r=e.querySelector("img");r&&r.alt&&(t+=" ",t+=r.alt)}else{var n=e.querySelector("img");n&&n.alt&&(t+=n.alt)}return t.trim()}}]}]}]},{selector:"#twister-plus-inline-twister",class:"product-options",name:"product_options",children:[{selector:"div.inline-twister-row",text_selector:"div.inline-twister-dim-title-value-truncate-expanded span.a-size-base.a-color-secondary",name:"from_text",direct_child:!0,generate_metadata:function(e){var t,r,a=null===(t=e.querySelector("div.inline-twister-dim-title-value-truncate-expanded span.a-size-base.a-color-secondary"))||void 0===t?void 0:t.innerHTML.replace(/[:\n]/g,"").trim(),i=null===(r=e.querySelector("div.inline-twister-dim-title-value-truncate-expanded span.inline-twister-dim-title-value"))||void 0===r?void 0:r.innerHTML;if(void 0===i||""===i){var o,c=null===(o=e.querySelector("select"))||void 0===o?void 0:o.querySelectorAll("option");if(c){var l,s=n(c);try{for(s.s();!(l=s.n()).done;){var u=l.value;u&&null!==u.getAttribute("selected")&&(i=u.innerHTML.trim())}}catch(e){s.e(e)}finally{s.f()}}}return{name:"product_options",data:{label:a,value:i.trim()}}},children:[{selector:"div.inline-twister-dim-title-value-truncate-expanded",children:[{selector:"span.a-size-base.a-color-secondary",add_text:!0},{selector:"span.inline-twister-dim-title-value",add_text:!0}]},{selector:"select",add_text:!0,name:"drop_down_list"},{selector:"ul",name:"button_list",children:[{selector:"li span:not(.aok-hidden) input",add_text:!0,clickable:!0,name:"from_text",text_js:function(e){var t=e.nextElementSibling,r="";if(t.innerText.trim()){r+=t.innerText.trim();var n=t.querySelector("img");n&&n.alt&&(r+=" ",r+=n.alt)}else{var a=t.querySelector("img");a&&a.alt&&(r+=a.alt)}return r.trim()}}]}]},{selector:"div.inline-twister-singleton-header",text_selector:"span.a-size-base.a-color-secondary",name:"from_text",children:[{selector:"span.a-size-base.a-color-secondary",add_text:!0},{selector:"span.inline-twister-dim-title-value-truncate",add_text:!0}],generate_metadata:function(e){var t,r;return{name:"product_options",data:{label:null===(t=e.querySelector("span.a-size-base.a-color-secondary"))||void 0===t?void 0:t.innerHTML.replace(/[:\n]/g,"").trim(),value:(null===(r=e.querySelector("span.inline-twister-dim-title-value-truncate"))||void 0===r?void 0:r.innerHTML).trim()}}}}]},{selector:"#productFactsDesktopExpander ul.a-unordered-list, #featurebullets_feature_div ul.a-unordered-list",add_text:!0,name:"about_this_item",text_format:"About this item: ",children:[{selector:"li",add_text:!0}],generate_metadata:function(e){var t;return{name:"product_details",data:{bullet_list:(null==e||null===(t=e.innerText)||void 0===t?void 0:t.replace(/\n/g," "))||""}}}}]},{selector:"#buybox:has(div.a-tab-container):not(:has(#partialState_buybox_desktop))",name:"buybox",children:[{selector:"#tab_heading_desktop_buybox_group_1 a",name:"deliver_tab",clickable:!0,add_text:!0},{selector:"#tab_heading_desktop_buybox_group_2 a",name:"pick_up_tab",clickable:!0,add_text:!0},{selector:"#tab_desktop_buybox_group_1",name:"delivery",add_text:!0,text_format:"Delivery",children:[d,p]},{selector:"#tab_desktop_buybox_group_2",name:"pick_up",add_text:!0,text_format:"Pick Up",children:[{selector:"#gsod_singleOfferDisplay_group_2_Desktop",children:[{selector:"#pickUpOfferDisplay",name:"purchase_form",children:[o,c,l,s,u]}]}]}],generate_metadata:function(e){var t=e.querySelector("input#ASIN");return{name:"product_details",data:{asin:(null==t?void 0:t.value)||""}}}},{selector:"#buybox:not(:has(div.a-tab-container)):not(:has(#partialState_buybox_desktop))",name:"buybox",children:[d,p],generate_metadata:function(e){var t=e.querySelector("input#ASIN");return{name:"product_details",data:{asin:(null==t?void 0:t.value)||""}}}},{selector:"#partialState_buybox_desktop",children:[{selector:"#partialStateBuybox div.a-section.a-text-center.a-spacing-small",add_text:!0}],generate_metadata:function(e){var t=e.querySelector("input#ASIN");return{name:"product_details",data:{asin:(null==t?void 0:t.value)||""}}}},{selector:"#attach-warranty-pane #attach-warranty-display",name:"warranty-box",children:[{selector:"div.attach-warranty-box",text_selector:"#attach-warranty-card-display-title",name:"from_text",children:[{selector:"i.a-icon-checkbox",name:"select",clickable:!0},{selector:"#attach-warranty-card-display-title",add_text:!0},{selector:"#attach-warranty-card-price",add_text:!0}]},{selector:"div.a-section.attach-warranty-button-row",children:[{selector:"input[aria-labelledby='attachSiAddCoverage-announce']",name:"add_protection",clickable:!0,add_text:!0,text_format:"Add Protection"},{selector:"input[aria-labelledby='attachSiNoCoverage-announce']",name:"no_protection",clickable:!0,add_text:!0,text_format:"No Thanks"}]}]}]}]},{match:"/cart/add-to-cart",match_method:"url",selector:"html",match_with_ref:!0,children:[{selector:"head",children:[{selector:"title",add_text:!0}]},{selector:"body",children:[i,{selector:"#sw-atc-buy-box",children:[{selector:"#sw-subtotal",children:[{selector:"#sw-subtotal-item-count",add_text:!0},{selector:"span[aria-hidden='true']",add_text:!0}]},{selector:"#sc-buy-box-ptc-button span.a-button-inner input",add_text:!0,text_selector:"div.sc-without-multicart",clickable:!0,name:"check_out"},{selector:"#sw-gtc a",add_text:!0,clickable:!0,name:"go_to_cart"}]}]}]},{match:"/cart/smart-wagon",match_method:"url",selector:"html",children:[{selector:"head",children:[{selector:"title",add_text:!0}]},{selector:"body",children:[i,{selector:"#sw-atc-buy-box",children:[{selector:"#sw-subtotal",children:[{selector:"#sw-subtotal-item-count",add_text:!0},{selector:"span[aria-hidden='true']",add_text:!0}]},{selector:"#sc-buy-box-ptc-button span.a-button-inner input",add_text:!0,text_selector:"div.sc-without-multicart",clickable:!0,name:"check_out"},{selector:"#sw-gtc a",add_text:!0,clickable:!0,name:"go_to_cart"}]}]}]},{match:"/gp/cart/view.html",match_method:"url",selector:"html",children:[{selector:"head",children:[{selector:"title",add_text:!0}]},{selector:"body",children:m}]},{match:"/cart",match_method:"url",match_with_ref:!0,selector:"html",children:[{selector:"head",children:[{selector:"title",add_text:!0}]},{selector:"body",children:m}]},{match:"/ap/signin",match_method:"url",terminate:function(){return!!arguments[0]},terminate_callback:function(){return arguments[0]},selector:"html"},{match:"/gp/buy/spc/handlers/display.html",match_method:"url",terminate:function(){return!!arguments[0]},terminate_callback:function(){return arguments[0]},selector:"html"},{match:"/gp/buyagain",match_method:"url",match_with_ref:!0,selector:"html",children:[{selector:"head",children:[{selector:"title",add_text:!0}]},{selector:"body",children:[i,{selector:"div.a-section:has(div.filter-container)",name:"filters",children:[{selector:"div.filter-container",text_selector:"span#filter-container-header",name:"from_text",children:[{selector:"span#filter-container-header",add_text:!0},{selector:"label",add_text:!0,clickable:!0,name:"from_text",generate_metadata:function(e){var t,r,n=e.innerText,a=null===(t=e.closest("div.filter-container"))||void 0===t?void 0:t.querySelector("#filter-container-header"),i=null==a||null===(r=a.innerText)||void 0===r?void 0:r.replace(/[ ]/g,"_").toLowerCase().trim(),o=e.querySelector("input");return o&&o.checked?{name:"filters."+i,data:{title:(null==n?void 0:n.trim())||"",selected:!0}}:{name:"filters."+i,data:{title:(null==n?void 0:n.trim())||"",selected:!1}}}}]}]},{selector:"div.alm-grid-desktop-grid-container",name:"product_list",children:[{selector:'div[id^="gridCell"]',name:"from_text",text_selector:"div[id^='closedCard'] a[id^='title'] span.a-truncate-full",children:[{selector:"div[id^='gridElement']",name:"product_card",children:[{selector:"div[id^='closedCard']",name:"closed_product_card",children:[{selector:"div[id^='info']",name:"open_product_card",clickable:!0,text_format:"Open Product Card"},{selector:"form span.a-button-inner",name:"add_to_cart",clickable:!0,add_text:!0}]},{selector:'div[name="ax-qs"]',children:[{selector:"button[aria-label='Decrease quantity by one']",add_text:!0,text_js:function(e){return e.hasAttribute("aria-label")?e.getAttribute("aria-label"):""},clickable:!0,name:"decrease_quantity_by_one"},{selector:"div[role='spinbutton']",add_text:!0,text_format:"Current Quantity: {}"},{selector:"button[aria-label='Increase quantity by one']",add_text:!0,text_js:function(e){return e.hasAttribute("aria-label")?e.getAttribute("aria-label"):""},clickable:!0,name:"increase_quantity_by_one"}]},{selector:"div[id^='expandedImage']",name:"close_prodct_card",clickable:!0,add_text:!0,text_format:"Close Product Card"}]}],generate_metadata:function(e){var t,r=e.querySelector("div[id^='closedCard'] div[id^='info']"),n=null==r?void 0:r.getAttribute("data-asin"),a=e.querySelector('div[id^="closedCard"] div[id^="info"] span[class*="priceBlockWithMarginRight"] span.a-price > span:not(.a-offscreen)'),i=null==a||null===(t=a.innerText)||void 0===t?void 0:t.replace(/[\n]/g,""),o=e.querySelector("div[id^='closedCard'] a[id^='title'] span.a-truncate-full"),c=null==o?void 0:o.innerText,l=e.querySelector('div[id^="closedCard"] div[id^="info"] #udmDeliveryMessageComponent');return{name:"active_items",data:{title:c,asin:n,price:i,delivery:null==l?void 0:l.innerText.replace(/[\n]/g," ")}}}},{selector:'div[id^="featured"]',name:"from_text",text_selector:"a[id^='title'] span.a-truncate-full",children:[{selector:'div[id^="detailContentWrapper"] div[id^="detailContent"]',name:"detailed_content",children:[{selector:"div:has(> img)",clickable:!0,name:"product_image",add_text:!0,text_format:"Product Image"},{selector:"a[id^='title']",clickable:!0,name:"product_title",add_text:!0,text_selector:"span.a-truncate-full"},{selector:"div[class*='multiOfferPillContainer'] a",clickable:!0,name:"from_text",add_text:!0},{selector:"div[data-buyingoptiontype='NEW'], div[class*='asinDetailInfoColumns']",name:"one_time_purchase",children:[{selector:'span[class*="priceBlockWithMarginRight"] span.a-price > span:not(.a-offscreen)',add_text:!0,name:"price"},{selector:"#udmDeliveryMessageComponent",add_text:!0,name:"delivery"},{selector:'div[class*="actionButtonsRow"], div[class*="asinDetailActionsRow"]',name:"buttons",children:[{selector:'input[name="submit.addToCart"]',add_text:!0,name:"add_to_cart",clickable:!0},{selector:'input[id^="buy-now"]',add_text:!0,name:"buy_now",clickable:!0},{selector:'div[id^="feedbackButtonSection"] input',add_text:!0,name:"remove_item",clickable:!0},{selector:'div[name="ax-qs"]',children:[{selector:"button[aria-label='Decrease quantity by one']",add_text:!0,text_js:function(e){return e.hasAttribute("aria-label")?e.getAttribute("aria-label"):""},clickable:!0,name:"decrease_quantity_by_one"},{selector:"div[role='spinbutton']",add_text:!0,text_format:"Current Quantity: {}"},{selector:"button[aria-label='Increase quantity by one']",add_text:!0,text_js:function(e){return e.hasAttribute("aria-label")?e.getAttribute("aria-label"):""},clickable:!0,name:"increase_quantity_by_one"}]}]}],generate_metadata:function(e){var t,r,n,a,i=null===(t=e.parentElement)||void 0===t?void 0:t.parentElement,o=null==i?void 0:i.getAttribute("data-asin"),c=e.querySelector('span[class*="priceBlockWithMarginRight"] span.a-price > span:not(.a-offscreen)'),l=null==c||null===(r=c.innerText)||void 0===r?void 0:r.replace(/[\n]/g,""),s=null===(n=e.parentElement)||void 0===n||null===(n=n.parentElement)||void 0===n?void 0:n.querySelector("a[id^='title'] span.a-truncate-full"),u=null==s?void 0:s.innerText,d=null===(a=e.parentElement)||void 0===a||null===(a=a.parentElement)||void 0===a?void 0:a.querySelector("a[id^='title']"),p=null==d?void 0:d.getAttribute("href"),m=e.querySelector("#udmDeliveryMessageComponent");return{name:"active_items",data:{title:u,asin:o,price:l,url:p,delivery:null==m?void 0:m.innerText.replace(/[\n]/g," ")}}}},{selector:"div[data-buyingoptiontype='SNS']",name:"subscribe_and_save",children:[{selector:'span[class*="priceBlockWithMarginRight"] span.a-price > span:not(.a-offscreen)',add_text:!0,name:"price"},{selector:"#udmDeliveryMessageComponent",add_text:!0,name:"delivery"},{selector:'div[class*="actionButtonsRow"]',name:"buttons",children:[{selector:'input[name="submit.addToCart"]',add_text:!0,name:"add_to_cart",clickable:!0},{selector:'span[class*="snsButton"] input',add_text:!0,name:"subscribe_and_save",clickable:!0},{selector:'div[id^="feedbackButtonSection"] input',add_text:!0,name:"remove_item",clickable:!0}]}],generate_metadata:function(e){var t,r,n,a,i=null===(t=e.parentElement)||void 0===t?void 0:t.parentElement,o=null==i?void 0:i.getAttribute("data-asin"),c=e.querySelector('span[class*="priceBlockWithMarginRight"] span.a-price > span:not(.a-offscreen)'),l=null==c||null===(r=c.innerText)||void 0===r?void 0:r.replace(/[\n]/g,""),s=null===(n=e.parentElement)||void 0===n||null===(n=n.parentElement)||void 0===n?void 0:n.querySelector("a[id^='title'] span.a-truncate-full"),u=null==s?void 0:s.innerText,d=null===(a=e.parentElement)||void 0===a||null===(a=a.parentElement)||void 0===a?void 0:a.querySelector("a[id^='title']"),p=null==d?void 0:d.getAttribute("href"),m=e.querySelector("#udmDeliveryMessageComponent");return{name:"active_items",data:{title:u,asin:o,price:l,url:p,delivery:null==m?void 0:m.innerText.replace(/[\n]/g," ")}}}}]},{selector:"div[id^='detail-view-similar-items']",name:"similar_items",children:[{selector:"li.a-carousel-card",name:"from_text",text_selector:"a[id^='title'] span.a-truncate-full",children:[{selector:"div.a-image-container:has(> img)",clickable:!0,name:"product_image",add_text:!0,text_format:"Product Image"},{selector:"a[id^='title']",clickable:!0,name:"product_title",add_text:!0,text_selector:"span.a-truncate-full"},{selector:'span[class*="priceBlockWithMarginRight"] span.a-price > span:not(.a-offscreen)',add_text:!0,name:"price"},{selector:"#udmDeliveryMessageComponent",add_text:!0,name:"delivery"},{selector:'input[name="submit.addToCart"]',add_text:!0,name:"add_to_cart",clickable:!0},{selector:'div[name="ax-qs"]',children:[{selector:"button[aria-label='Decrease quantity by one']",add_text:!0,text_js:function(e){return e.hasAttribute("aria-label")?e.getAttribute("aria-label"):""},clickable:!0,name:"decrease_quantity_by_one"},{selector:"div[role='spinbutton']",add_text:!0,text_format:"Current Quantity: {}"},{selector:"button[aria-label='Increase quantity by one']",add_text:!0,text_js:function(e){return e.hasAttribute("aria-label")?e.getAttribute("aria-label"):""},clickable:!0,name:"increase_quantity_by_one"}]},{selector:"div.qs-widget-container",children:[{selector:"input[aria-label='Remove']",add_text:!0,text_js:function(e){return e.hasAttribute("aria-label")?e.getAttribute("aria-label"):""},clickable:!0,name:"decrease_quantity_by_one"},{selector:"div.qs-widget-dropdown-flex-wrapper button",add_text:!0,clickable:!0,name:"drop_down_list",text_format:"Current Quantity: {}"},{selector:'div.qs-widget-dropdown-wrapper span[data-action="qs-widget-dropdown-decl"]',add_text:!0,clickable:!0,use_root:!0,name:"from_text",text_format:"Drop Down Option {}"},{selector:"input[aria-label='Add']",add_text:!0,text_js:function(e){return e.hasAttribute("aria-label")?e.getAttribute("aria-label"):""},clickable:!0,name:"increase_quantity_by_one"}]}],generate_metadata:function(e){var t,r,n,a=e.querySelector('div[class*="delightFaceout"]'),i=null==a?void 0:a.getAttribute("data-asin"),o=e.querySelector('span[class*="priceBlockWithMarginRight"] span.a-price > span:not(.a-offscreen)'),c=null==o||null===(t=o.innerText)||void 0===t?void 0:t.replace(/[\n]/g,""),l=null===(r=e.parentElement)||void 0===r||null===(r=r.parentElement)||void 0===r?void 0:r.querySelector("a[id^='title'] span.a-truncate-full"),s=null==l?void 0:l.innerText,u=null===(n=e.parentElement)||void 0===n||null===(n=n.parentElement)||void 0===n?void 0:n.querySelector("a[id^='title']"),d=null==u?void 0:u.getAttribute("href"),p=e.querySelector("#udmDeliveryMessageComponent");return{name:"active_items",data:{title:s,asin:i,price:c,url:d,delivery:null==p?void 0:p.innerText.replace(/[\n]/g," ")}}}}]}]}]}]}]}];function h(e){return h="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},h(e)}function v(e,t){var r="undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(!r){if(Array.isArray(e)||(r=function(e,t){if(e){if("string"==typeof e)return y(e,t);var r={}.toString.call(e).slice(8,-1);return"Object"===r&&e.constructor&&(r=e.constructor.name),"Map"===r||"Set"===r?Array.from(e):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?y(e,t):void 0}}(e))||t&&e&&"number"==typeof e.length){r&&(e=r);var n=0,a=function(){};return{s:a,n:function(){return n>=e.length?{done:!0}:{done:!1,value:e[n++]}},e:function(e){throw e},f:a}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var i,o=!0,c=!1;return{s:function(){r=r.call(e)},n:function(){var e=r.next();return o=e.done,e},e:function(e){c=!0,i=e},f:function(){try{o||null==r.return||r.return()}finally{if(c)throw i}}}}function y(e,t){(null==t||t>e.length)&&(t=e.length);for(var r=0,n=Array(t);r<t;r++)n[r]=e[r];return n}function b(){b=function(){return t};var e,t={},r=Object.prototype,n=r.hasOwnProperty,a=Object.defineProperty||function(e,t,r){e[t]=r.value},i="function"==typeof Symbol?Symbol:{},o=i.iterator||"@@iterator",c=i.asyncIterator||"@@asyncIterator",l=i.toStringTag||"@@toStringTag";function s(e,t,r){return Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}),e[t]}try{s({},"")}catch(e){s=function(e,t,r){return e[t]=r}}function u(e,t,r,n){var i=t&&t.prototype instanceof _?t:_,o=Object.create(i.prototype),c=new j(n||[]);return a(o,"_invoke",{value:L(e,r,c)}),o}function d(e,t,r){try{return{type:"normal",arg:e.call(t,r)}}catch(e){return{type:"throw",arg:e}}}t.wrap=u;var p="suspendedStart",m="suspendedYield",f="executing",v="completed",y={};function _(){}function g(){}function x(){}var w={};s(w,o,(function(){return this}));var k=Object.getPrototypeOf,S=k&&k(k(P([])));S&&S!==r&&n.call(S,o)&&(w=S);var E=x.prototype=_.prototype=Object.create(w);function A(e){["next","throw","return"].forEach((function(t){s(e,t,(function(e){return this._invoke(t,e)}))}))}function T(e,t){function r(a,i,o,c){var l=d(e[a],e,i);if("throw"!==l.type){var s=l.arg,u=s.value;return u&&"object"==h(u)&&n.call(u,"__await")?t.resolve(u.__await).then((function(e){r("next",e,o,c)}),(function(e){r("throw",e,o,c)})):t.resolve(u).then((function(e){s.value=e,o(s)}),(function(e){return r("throw",e,o,c)}))}c(l.arg)}var i;a(this,"_invoke",{value:function(e,n){function a(){return new t((function(t,a){r(e,n,t,a)}))}return i=i?i.then(a,a):a()}})}function L(t,r,n){var a=p;return function(i,o){if(a===f)throw Error("Generator is already running");if(a===v){if("throw"===i)throw o;return{value:e,done:!0}}for(n.method=i,n.arg=o;;){var c=n.delegate;if(c){var l=q(c,n);if(l){if(l===y)continue;return l}}if("next"===n.method)n.sent=n._sent=n.arg;else if("throw"===n.method){if(a===p)throw a=v,n.arg;n.dispatchException(n.arg)}else"return"===n.method&&n.abrupt("return",n.arg);a=f;var s=d(t,r,n);if("normal"===s.type){if(a=n.done?v:m,s.arg===y)continue;return{value:s.arg,done:n.done}}"throw"===s.type&&(a=v,n.method="throw",n.arg=s.arg)}}}function q(t,r){var n=r.method,a=t.iterator[n];if(a===e)return r.delegate=null,"throw"===n&&t.iterator.return&&(r.method="return",r.arg=e,q(t,r),"throw"===r.method)||"return"!==n&&(r.method="throw",r.arg=new TypeError("The iterator does not provide a '"+n+"' method")),y;var i=d(a,t.iterator,r.arg);if("throw"===i.type)return r.method="throw",r.arg=i.arg,r.delegate=null,y;var o=i.arg;return o?o.done?(r[t.resultName]=o.value,r.next=t.nextLoc,"return"!==r.method&&(r.method="next",r.arg=e),r.delegate=null,y):o:(r.method="throw",r.arg=new TypeError("iterator result is not an object"),r.delegate=null,y)}function O(e){var t={tryLoc:e[0]};1 in e&&(t.catchLoc=e[1]),2 in e&&(t.finallyLoc=e[2],t.afterLoc=e[3]),this.tryEntries.push(t)}function C(e){var t=e.completion||{};t.type="normal",delete t.arg,e.completion=t}function j(e){this.tryEntries=[{tryLoc:"root"}],e.forEach(O,this),this.reset(!0)}function P(t){if(t||""===t){var r=t[o];if(r)return r.call(t);if("function"==typeof t.next)return t;if(!isNaN(t.length)){var a=-1,i=function r(){for(;++a<t.length;)if(n.call(t,a))return r.value=t[a],r.done=!1,r;return r.value=e,r.done=!0,r};return i.next=i}}throw new TypeError(h(t)+" is not iterable")}return g.prototype=x,a(E,"constructor",{value:x,configurable:!0}),a(x,"constructor",{value:g,configurable:!0}),g.displayName=s(x,l,"GeneratorFunction"),t.isGeneratorFunction=function(e){var t="function"==typeof e&&e.constructor;return!!t&&(t===g||"GeneratorFunction"===(t.displayName||t.name))},t.mark=function(e){return Object.setPrototypeOf?Object.setPrototypeOf(e,x):(e.__proto__=x,s(e,l,"GeneratorFunction")),e.prototype=Object.create(E),e},t.awrap=function(e){return{__await:e}},A(T.prototype),s(T.prototype,c,(function(){return this})),t.AsyncIterator=T,t.async=function(e,r,n,a,i){void 0===i&&(i=Promise);var o=new T(u(e,r,n,a),i);return t.isGeneratorFunction(r)?o:o.next().then((function(e){return e.done?e.value:o.next()}))},A(E),s(E,l,"Generator"),s(E,o,(function(){return this})),s(E,"toString",(function(){return"[object Generator]"})),t.keys=function(e){var t=Object(e),r=[];for(var n in t)r.push(n);return r.reverse(),function e(){for(;r.length;){var n=r.pop();if(n in t)return e.value=n,e.done=!1,e}return e.done=!0,e}},t.values=P,j.prototype={constructor:j,reset:function(t){if(this.prev=0,this.next=0,this.sent=this._sent=e,this.done=!1,this.delegate=null,this.method="next",this.arg=e,this.tryEntries.forEach(C),!t)for(var r in this)"t"===r.charAt(0)&&n.call(this,r)&&!isNaN(+r.slice(1))&&(this[r]=e)},stop:function(){this.done=!0;var e=this.tryEntries[0].completion;if("throw"===e.type)throw e.arg;return this.rval},dispatchException:function(t){if(this.done)throw t;var r=this;function a(n,a){return c.type="throw",c.arg=t,r.next=n,a&&(r.method="next",r.arg=e),!!a}for(var i=this.tryEntries.length-1;i>=0;--i){var o=this.tryEntries[i],c=o.completion;if("root"===o.tryLoc)return a("end");if(o.tryLoc<=this.prev){var l=n.call(o,"catchLoc"),s=n.call(o,"finallyLoc");if(l&&s){if(this.prev<o.catchLoc)return a(o.catchLoc,!0);if(this.prev<o.finallyLoc)return a(o.finallyLoc)}else if(l){if(this.prev<o.catchLoc)return a(o.catchLoc,!0)}else{if(!s)throw Error("try statement without catch or finally");if(this.prev<o.finallyLoc)return a(o.finallyLoc)}}}},abrupt:function(e,t){for(var r=this.tryEntries.length-1;r>=0;--r){var a=this.tryEntries[r];if(a.tryLoc<=this.prev&&n.call(a,"finallyLoc")&&this.prev<a.finallyLoc){var i=a;break}}i&&("break"===e||"continue"===e)&&i.tryLoc<=t&&t<=i.finallyLoc&&(i=null);var o=i?i.completion:{};return o.type=e,o.arg=t,i?(this.method="next",this.next=i.finallyLoc,y):this.complete(o)},complete:function(e,t){if("throw"===e.type)throw e.arg;return"break"===e.type||"continue"===e.type?this.next=e.arg:"return"===e.type?(this.rval=this.arg=e.arg,this.method="return",this.next="end"):"normal"===e.type&&t&&(this.next=t),y},finish:function(e){for(var t=this.tryEntries.length-1;t>=0;--t){var r=this.tryEntries[t];if(r.finallyLoc===e)return this.complete(r.completion,r.afterLoc),C(r),y}},catch:function(e){for(var t=this.tryEntries.length-1;t>=0;--t){var r=this.tryEntries[t];if(r.tryLoc===e){var n=r.completion;if("throw"===n.type){var a=n.arg;C(r)}return a}}throw Error("illegal catch attempt")},delegateYield:function(t,r,n){return this.delegate={iterator:P(t),resultName:r,nextLoc:n},"next"===this.method&&(this.arg=e),y}},t}function _(e,t,r,n,a,i,o){try{var c=e[i](o),l=c.value}catch(e){return void r(e)}c.done?t(l):Promise.resolve(l).then(n,a)}function g(e,t){var r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"",n=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0,a=t.tag_name||e.tagName.toLowerCase();a.endsWith("_")&&(a=a.slice(0,-1));var i=document.createElement(a),o="";if(t.text_selector){var c=e.querySelector(t.text_selector);c&&(o=c.innerText||c.textContent||"")}else t.text_js?o=t.text_js(e):t.add_text&&(o=e.innerText||e.textContent||"");o=o.replace(/\s+/g," ").trim(),t.text_format?o=t.text_format.replace("{}",o):t.text_format&&(o=t.text_format),o&&t.add_text&&(i.textContent=o);var l="";if(t.name&&("from_text"===t.name?(l=r?r+".":"",o?l+=o.toLowerCase().replace(/[^\w]+/g,"_"):l=""):"from_nth_child"===t.name?(l=r?r+".":"",l+=n.toString()):(l=r?r+".":"",l+=t.name),i.setAttribute("name",l),r=l),t.generate_metadata){var s=t.generate_metadata(e),u=JSON.stringify(s.data),d=s.name;e.setAttribute("data-element-meta-name",d),e.setAttribute("data-element-meta-data",u)}if(t.clickable){if(!t.name)throw new Error("clickable element must have a name");var p;(p=t.click_selector?e.querySelector(t.click_selector):e)&&p.setAttribute("data-clickable-id",l),window.clickable_recipes||(window.clickable_recipes={}),window.clickable_recipes[l]=t}if("input"===a){var m=e.getAttribute("type");["text","number"].includes(m)?(i.setAttribute("value",e.value),e.setAttribute("data-input-id",l)):"checkbox"===m?i.setAttribute("checked",e.checked.toString()):"radio"===m&&(i.setAttribute("checked",e.checked.toString()),e.setAttribute("data-clickable-id",l)),window.input_recipes||(window.input_recipes={}),window.input_recipes[l]=t}if("select"===a){var f;e.setAttribute("data-select-id",l);var h=e.getAttribute("id"),y=(e.getAttribute("name"),null===(f=e.parentElement)||void 0===f?void 0:f.querySelector("span.a-button-dropdown span.a-button-text")),x=document.createElement("span");x.textContent=y.textContent;var w=l+".open_drop_down_list";x.setAttribute("name",w),y.setAttribute("data-clickable-id",w),i.appendChild(x),document.querySelectorAll('a[id^="'+h+'"]').forEach(function(){var e,t=(e=b().mark((function e(t){var r,n,a;return b().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:r=t.textContent.trim(),n=l+"."+r,(a=document.createElement("a")).textContent=t.textContent,a.setAttribute("value",r),a.setAttribute("name",n),a.setAttribute("selected",t.getAttribute("aria-selected")),t.setAttribute("data-clickable-id",n),i.appendChild(a);case 9:case"end":return e.stop()}}),e)})),function(){var t=this,r=arguments;return new Promise((function(n,a){var i=e.apply(t,r);function o(e){_(i,n,a,o,c,"next",e)}function c(e){_(i,n,a,o,c,"throw",e)}o(void 0)}))});return function(e){return t.apply(this,arguments)}}())}if(["alt","title","type","value","role","aria-label","aria-hidden","aria-selected"].forEach((function(t){var r=e.getAttribute(t);r&&i.setAttribute(t,r)})),t.keep_attr){var k,S=v(t.keep_attr);try{for(S.s();!(k=S.n()).done;){var E=k.value,A=e.getAttribute(E);A&&i.setAttribute(E,A)}}catch(e){S.e(e)}finally{S.f()}}if(t.class&&i.setAttribute("class",t.class),t.id&&i.setAttribute("id",t.id),t.override_attr)for(var T in t.override_attr)i.setAttribute(T,t.override_attr[T](e));if(t.children&&t.children.length>0){var L,q=v(t.children);try{var O=function(){var t,n=L.value,a=n.direct_child?":scope > ".concat(n.selector):n.selector;n.use_root?(t=document.querySelectorAll(a),console.log("use root for ",t)):t=e.querySelectorAll(a),t.forEach((function(e,t){var a=g(e,n,r,t);if(i.appendChild(a),n.insert_split_marker&&t%(n.insert_split_marker_every||1)==0){var o=document.createElement("split-marker");i.appendChild(o)}if(n.insert_split_marker){var c=document.createElement("split-marker");i.appendChild(c)}}))};for(q.s();!(L=q.n()).done;)O()}catch(e){q.e(e)}finally{q.f()}}if(t.empty_message&&0===i.children.length){var C=document.createTextNode(t.empty_message);i.appendChild(C)}return i}function x(e){return x="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},x(e)}function w(){w=function(){return t};var e,t={},r=Object.prototype,n=r.hasOwnProperty,a=Object.defineProperty||function(e,t,r){e[t]=r.value},i="function"==typeof Symbol?Symbol:{},o=i.iterator||"@@iterator",c=i.asyncIterator||"@@asyncIterator",l=i.toStringTag||"@@toStringTag";function s(e,t,r){return Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}),e[t]}try{s({},"")}catch(e){s=function(e,t,r){return e[t]=r}}function u(e,t,r,n){var i=t&&t.prototype instanceof y?t:y,o=Object.create(i.prototype),c=new j(n||[]);return a(o,"_invoke",{value:L(e,r,c)}),o}function d(e,t,r){try{return{type:"normal",arg:e.call(t,r)}}catch(e){return{type:"throw",arg:e}}}t.wrap=u;var p="suspendedStart",m="suspendedYield",f="executing",h="completed",v={};function y(){}function b(){}function _(){}var g={};s(g,o,(function(){return this}));var k=Object.getPrototypeOf,S=k&&k(k(P([])));S&&S!==r&&n.call(S,o)&&(g=S);var E=_.prototype=y.prototype=Object.create(g);function A(e){["next","throw","return"].forEach((function(t){s(e,t,(function(e){return this._invoke(t,e)}))}))}function T(e,t){function r(a,i,o,c){var l=d(e[a],e,i);if("throw"!==l.type){var s=l.arg,u=s.value;return u&&"object"==x(u)&&n.call(u,"__await")?t.resolve(u.__await).then((function(e){r("next",e,o,c)}),(function(e){r("throw",e,o,c)})):t.resolve(u).then((function(e){s.value=e,o(s)}),(function(e){return r("throw",e,o,c)}))}c(l.arg)}var i;a(this,"_invoke",{value:function(e,n){function a(){return new t((function(t,a){r(e,n,t,a)}))}return i=i?i.then(a,a):a()}})}function L(t,r,n){var a=p;return function(i,o){if(a===f)throw Error("Generator is already running");if(a===h){if("throw"===i)throw o;return{value:e,done:!0}}for(n.method=i,n.arg=o;;){var c=n.delegate;if(c){var l=q(c,n);if(l){if(l===v)continue;return l}}if("next"===n.method)n.sent=n._sent=n.arg;else if("throw"===n.method){if(a===p)throw a=h,n.arg;n.dispatchException(n.arg)}else"return"===n.method&&n.abrupt("return",n.arg);a=f;var s=d(t,r,n);if("normal"===s.type){if(a=n.done?h:m,s.arg===v)continue;return{value:s.arg,done:n.done}}"throw"===s.type&&(a=h,n.method="throw",n.arg=s.arg)}}}function q(t,r){var n=r.method,a=t.iterator[n];if(a===e)return r.delegate=null,"throw"===n&&t.iterator.return&&(r.method="return",r.arg=e,q(t,r),"throw"===r.method)||"return"!==n&&(r.method="throw",r.arg=new TypeError("The iterator does not provide a '"+n+"' method")),v;var i=d(a,t.iterator,r.arg);if("throw"===i.type)return r.method="throw",r.arg=i.arg,r.delegate=null,v;var o=i.arg;return o?o.done?(r[t.resultName]=o.value,r.next=t.nextLoc,"return"!==r.method&&(r.method="next",r.arg=e),r.delegate=null,v):o:(r.method="throw",r.arg=new TypeError("iterator result is not an object"),r.delegate=null,v)}function O(e){var t={tryLoc:e[0]};1 in e&&(t.catchLoc=e[1]),2 in e&&(t.finallyLoc=e[2],t.afterLoc=e[3]),this.tryEntries.push(t)}function C(e){var t=e.completion||{};t.type="normal",delete t.arg,e.completion=t}function j(e){this.tryEntries=[{tryLoc:"root"}],e.forEach(O,this),this.reset(!0)}function P(t){if(t||""===t){var r=t[o];if(r)return r.call(t);if("function"==typeof t.next)return t;if(!isNaN(t.length)){var a=-1,i=function r(){for(;++a<t.length;)if(n.call(t,a))return r.value=t[a],r.done=!1,r;return r.value=e,r.done=!0,r};return i.next=i}}throw new TypeError(x(t)+" is not iterable")}return b.prototype=_,a(E,"constructor",{value:_,configurable:!0}),a(_,"constructor",{value:b,configurable:!0}),b.displayName=s(_,l,"GeneratorFunction"),t.isGeneratorFunction=function(e){var t="function"==typeof e&&e.constructor;return!!t&&(t===b||"GeneratorFunction"===(t.displayName||t.name))},t.mark=function(e){return Object.setPrototypeOf?Object.setPrototypeOf(e,_):(e.__proto__=_,s(e,l,"GeneratorFunction")),e.prototype=Object.create(E),e},t.awrap=function(e){return{__await:e}},A(T.prototype),s(T.prototype,c,(function(){return this})),t.AsyncIterator=T,t.async=function(e,r,n,a,i){void 0===i&&(i=Promise);var o=new T(u(e,r,n,a),i);return t.isGeneratorFunction(r)?o:o.next().then((function(e){return e.done?e.value:o.next()}))},A(E),s(E,l,"Generator"),s(E,o,(function(){return this})),s(E,"toString",(function(){return"[object Generator]"})),t.keys=function(e){var t=Object(e),r=[];for(var n in t)r.push(n);return r.reverse(),function e(){for(;r.length;){var n=r.pop();if(n in t)return e.value=n,e.done=!1,e}return e.done=!0,e}},t.values=P,j.prototype={constructor:j,reset:function(t){if(this.prev=0,this.next=0,this.sent=this._sent=e,this.done=!1,this.delegate=null,this.method="next",this.arg=e,this.tryEntries.forEach(C),!t)for(var r in this)"t"===r.charAt(0)&&n.call(this,r)&&!isNaN(+r.slice(1))&&(this[r]=e)},stop:function(){this.done=!0;var e=this.tryEntries[0].completion;if("throw"===e.type)throw e.arg;return this.rval},dispatchException:function(t){if(this.done)throw t;var r=this;function a(n,a){return c.type="throw",c.arg=t,r.next=n,a&&(r.method="next",r.arg=e),!!a}for(var i=this.tryEntries.length-1;i>=0;--i){var o=this.tryEntries[i],c=o.completion;if("root"===o.tryLoc)return a("end");if(o.tryLoc<=this.prev){var l=n.call(o,"catchLoc"),s=n.call(o,"finallyLoc");if(l&&s){if(this.prev<o.catchLoc)return a(o.catchLoc,!0);if(this.prev<o.finallyLoc)return a(o.finallyLoc)}else if(l){if(this.prev<o.catchLoc)return a(o.catchLoc,!0)}else{if(!s)throw Error("try statement without catch or finally");if(this.prev<o.finallyLoc)return a(o.finallyLoc)}}}},abrupt:function(e,t){for(var r=this.tryEntries.length-1;r>=0;--r){var a=this.tryEntries[r];if(a.tryLoc<=this.prev&&n.call(a,"finallyLoc")&&this.prev<a.finallyLoc){var i=a;break}}i&&("break"===e||"continue"===e)&&i.tryLoc<=t&&t<=i.finallyLoc&&(i=null);var o=i?i.completion:{};return o.type=e,o.arg=t,i?(this.method="next",this.next=i.finallyLoc,v):this.complete(o)},complete:function(e,t){if("throw"===e.type)throw e.arg;return"break"===e.type||"continue"===e.type?this.next=e.arg:"return"===e.type?(this.rval=this.arg=e.arg,this.method="return",this.next="end"):"normal"===e.type&&t&&(this.next=t),v},finish:function(e){for(var t=this.tryEntries.length-1;t>=0;--t){var r=this.tryEntries[t];if(r.finallyLoc===e)return this.complete(r.completion,r.afterLoc),C(r),v}},catch:function(e){for(var t=this.tryEntries.length-1;t>=0;--t){var r=this.tryEntries[t];if(r.tryLoc===e){var n=r.completion;if("throw"===n.type){var a=n.arg;C(r)}return a}}throw Error("illegal catch attempt")},delegateYield:function(t,r,n){return this.delegate={iterator:P(t),resultName:r,nextLoc:n},"next"===this.method&&(this.arg=e),v}},t}function k(e,t){(null==t||t>e.length)&&(t=e.length);for(var r=0,n=Array(t);r<t;r++)n[r]=e[r];return n}function S(e,t,r,n,a,i,o){try{var c=e[i](o),l=c.value}catch(e){return void r(e)}c.done?t(l):Promise.resolve(l).then(n,a)}function E(){var e=document.querySelectorAll("[data-element-meta-name]"),t={};return e.forEach((function(e){var r=e.getAttribute("data-element-meta-name"),n=e.getAttribute("data-element-meta-data");t[r]||(t[r]=[]),t[r].push(JSON.parse(n))})),t}function A(){var e=document.cloneNode(!0);return e.querySelectorAll('a, button, [onclick], input[type="button"], input[type="submit"]').forEach((function(e){var t=e.getBoundingClientRect();t.top>=0&&t.left>=0&&t.bottom<=(window.innerHeight||document.documentElement.clientHeight)&&t.right<=(window.innerWidth||document.documentElement.clientWidth)&&e.setAttribute("visible-clickable-element-marker","true")})),e}function T(){return e=w().mark((function e(n){var a=arguments;return w().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(a.length>1&&void 0!==a[1]&&a[1]){e.next=16;break}if(!chrome.storage){e.next=11;break}return e.next=5,chrome.storage.local.get("userId");case 5:if(e.sent.userId){e.next=9;break}return console.log("no user id"),e.abrupt("return",!0);case 9:e.next=16;break;case 11:return e.next=13,new Promise((function(e){var t=function(r){"GET_USER_ID_RESPONSE"===r.data.type&&(window.removeEventListener("message",t),e(r.data.userId))};window.addEventListener("message",t),window.postMessage({type:"GET_USER_ID"},"*")}));case 13:if(e.sent){e.next=16;break}return e.abrupt("return",!0);case 16:if(n){e.next=18;break}return e.abrupt("return",!0);case 18:return e.abrupt("return",!t.some((function(e){return n.includes(e)}))||r.some((function(e){return n.includes(e)})));case 19:case"end":return e.stop()}}),e)})),T=function(){var t=this,r=arguments;return new Promise((function(n,a){var i=e.apply(t,r);function o(e){S(i,n,a,o,c,"next",e)}function c(e){S(i,n,a,o,c,"throw",e)}o(void 0)}))},T.apply(this,arguments);var e}function L(e,t){var r=window.location.href;return"html_".concat(function(e){for(var t=0,r=0;r<e.length;r++)t=(t<<5)-t+e.charCodeAt(r),t|=0;return console.log("Hash value before return:",t),t.toString()}(r),"_").concat(e,"_").concat(t)}function q(){console.log("start process recipe");try{var e=function(){var e=new URL(window.location.href).pathname;e="/"!==e?e.replace(/\/+$/,""):e;var t,r=function(e,t){var r="undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(!r){if(Array.isArray(e)||(r=function(e,t){if(e){if("string"==typeof e)return k(e,t);var r={}.toString.call(e).slice(8,-1);return"Object"===r&&e.constructor&&(r=e.constructor.name),"Map"===r||"Set"===r?Array.from(e):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?k(e,t):void 0}}(e))||t&&e&&"number"==typeof e.length){r&&(e=r);var n=0,a=function(){};return{s:a,n:function(){return n>=e.length?{done:!0}:{done:!1,value:e[n++]}},e:function(e){throw e},f:a}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var i,o=!0,c=!1;return{s:function(){r=r.call(e)},n:function(){var e=r.next();return o=e.done,e},e:function(e){c=!0,i=e},f:function(){try{o||null==r.return||r.return()}finally{if(c)throw i}}}}(f);try{for(r.s();!(t=r.n()).done;){var n=t.value,a=n.match_method||"text";if("text"===a)try{var i,o,c=document.querySelector(n.match);if(c&&(!n.match_text||null!==(i=null===(o=c.textContent)||void 0===o?void 0:o.toLowerCase().includes(n.match_text.toLowerCase()))&&void 0!==i&&i))return console.log("matched with recipe ",n.match),n}catch(e){console.error("Error checking text match:",e)}else if("url"===a){if(n.match===e)return console.log("matched with recipe ",n.match),n;if(n.match_with_ref&&e.startsWith(n.match+"/ref="))return console.log("matched with recipe ",n.match),n}}}catch(e){r.e(e)}finally{r.f()}throw new Error("No matching recipe found for path: ".concat(e))}(),t=document.querySelector(e.selector);if(t)return g(t,e).outerHTML}catch(e){console.error("Error processing recipe:",e)}}const O={randomUUID:"undefined"!=typeof crypto&&crypto.randomUUID&&crypto.randomUUID.bind(crypto)};let C;const j=new Uint8Array(16);function P(){if(!C){if("undefined"==typeof crypto||!crypto.getRandomValues)throw new Error("crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported");C=crypto.getRandomValues.bind(crypto)}return C(j)}const I=[];for(let e=0;e<256;++e)I.push((e+256).toString(16).slice(1));const M=function(e,t,r){if(O.randomUUID&&!t&&!e)return O.randomUUID();const n=(e=e||{}).random||(e.rng||P)();if(n[6]=15&n[6]|64,n[8]=63&n[8]|128,t){r=r||0;for(let e=0;e<16;++e)t[r+e]=n[e];return t}return function(e,t=0){return(I[e[t+0]]+I[e[t+1]]+I[e[t+2]]+I[e[t+3]]+"-"+I[e[t+4]]+I[e[t+5]]+"-"+I[e[t+6]]+I[e[t+7]]+"-"+I[e[t+8]]+I[e[t+9]]+"-"+I[e[t+10]]+I[e[t+11]]+I[e[t+12]]+I[e[t+13]]+I[e[t+14]]+I[e[t+15]]).toLowerCase()}(n)};function N(e){return N="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},N(e)}function D(e,t){var r="undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(!r){if(Array.isArray(e)||(r=function(e,t){if(e){if("string"==typeof e)return R(e,t);var r={}.toString.call(e).slice(8,-1);return"Object"===r&&e.constructor&&(r=e.constructor.name),"Map"===r||"Set"===r?Array.from(e):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?R(e,t):void 0}}(e))||t&&e&&"number"==typeof e.length){r&&(e=r);var n=0,a=function(){};return{s:a,n:function(){return n>=e.length?{done:!0}:{done:!1,value:e[n++]}},e:function(e){throw e},f:a}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var i,o=!0,c=!1;return{s:function(){r=r.call(e)},n:function(){var e=r.next();return o=e.done,e},e:function(e){c=!0,i=e},f:function(){try{o||null==r.return||r.return()}finally{if(c)throw i}}}}function R(e,t){(null==t||t>e.length)&&(t=e.length);for(var r=0,n=Array(t);r<t;r++)n[r]=e[r];return n}function G(){G=function(){return t};var e,t={},r=Object.prototype,n=r.hasOwnProperty,a=Object.defineProperty||function(e,t,r){e[t]=r.value},i="function"==typeof Symbol?Symbol:{},o=i.iterator||"@@iterator",c=i.asyncIterator||"@@asyncIterator",l=i.toStringTag||"@@toStringTag";function s(e,t,r){return Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}),e[t]}try{s({},"")}catch(e){s=function(e,t,r){return e[t]=r}}function u(e,t,r,n){var i=t&&t.prototype instanceof y?t:y,o=Object.create(i.prototype),c=new O(n||[]);return a(o,"_invoke",{value:A(e,r,c)}),o}function d(e,t,r){try{return{type:"normal",arg:e.call(t,r)}}catch(e){return{type:"throw",arg:e}}}t.wrap=u;var p="suspendedStart",m="suspendedYield",f="executing",h="completed",v={};function y(){}function b(){}function _(){}var g={};s(g,o,(function(){return this}));var x=Object.getPrototypeOf,w=x&&x(x(C([])));w&&w!==r&&n.call(w,o)&&(g=w);var k=_.prototype=y.prototype=Object.create(g);function S(e){["next","throw","return"].forEach((function(t){s(e,t,(function(e){return this._invoke(t,e)}))}))}function E(e,t){function r(a,i,o,c){var l=d(e[a],e,i);if("throw"!==l.type){var s=l.arg,u=s.value;return u&&"object"==N(u)&&n.call(u,"__await")?t.resolve(u.__await).then((function(e){r("next",e,o,c)}),(function(e){r("throw",e,o,c)})):t.resolve(u).then((function(e){s.value=e,o(s)}),(function(e){return r("throw",e,o,c)}))}c(l.arg)}var i;a(this,"_invoke",{value:function(e,n){function a(){return new t((function(t,a){r(e,n,t,a)}))}return i=i?i.then(a,a):a()}})}function A(t,r,n){var a=p;return function(i,o){if(a===f)throw Error("Generator is already running");if(a===h){if("throw"===i)throw o;return{value:e,done:!0}}for(n.method=i,n.arg=o;;){var c=n.delegate;if(c){var l=T(c,n);if(l){if(l===v)continue;return l}}if("next"===n.method)n.sent=n._sent=n.arg;else if("throw"===n.method){if(a===p)throw a=h,n.arg;n.dispatchException(n.arg)}else"return"===n.method&&n.abrupt("return",n.arg);a=f;var s=d(t,r,n);if("normal"===s.type){if(a=n.done?h:m,s.arg===v)continue;return{value:s.arg,done:n.done}}"throw"===s.type&&(a=h,n.method="throw",n.arg=s.arg)}}}function T(t,r){var n=r.method,a=t.iterator[n];if(a===e)return r.delegate=null,"throw"===n&&t.iterator.return&&(r.method="return",r.arg=e,T(t,r),"throw"===r.method)||"return"!==n&&(r.method="throw",r.arg=new TypeError("The iterator does not provide a '"+n+"' method")),v;var i=d(a,t.iterator,r.arg);if("throw"===i.type)return r.method="throw",r.arg=i.arg,r.delegate=null,v;var o=i.arg;return o?o.done?(r[t.resultName]=o.value,r.next=t.nextLoc,"return"!==r.method&&(r.method="next",r.arg=e),r.delegate=null,v):o:(r.method="throw",r.arg=new TypeError("iterator result is not an object"),r.delegate=null,v)}function L(e){var t={tryLoc:e[0]};1 in e&&(t.catchLoc=e[1]),2 in e&&(t.finallyLoc=e[2],t.afterLoc=e[3]),this.tryEntries.push(t)}function q(e){var t=e.completion||{};t.type="normal",delete t.arg,e.completion=t}function O(e){this.tryEntries=[{tryLoc:"root"}],e.forEach(L,this),this.reset(!0)}function C(t){if(t||""===t){var r=t[o];if(r)return r.call(t);if("function"==typeof t.next)return t;if(!isNaN(t.length)){var a=-1,i=function r(){for(;++a<t.length;)if(n.call(t,a))return r.value=t[a],r.done=!1,r;return r.value=e,r.done=!0,r};return i.next=i}}throw new TypeError(N(t)+" is not iterable")}return b.prototype=_,a(k,"constructor",{value:_,configurable:!0}),a(_,"constructor",{value:b,configurable:!0}),b.displayName=s(_,l,"GeneratorFunction"),t.isGeneratorFunction=function(e){var t="function"==typeof e&&e.constructor;return!!t&&(t===b||"GeneratorFunction"===(t.displayName||t.name))},t.mark=function(e){return Object.setPrototypeOf?Object.setPrototypeOf(e,_):(e.__proto__=_,s(e,l,"GeneratorFunction")),e.prototype=Object.create(k),e},t.awrap=function(e){return{__await:e}},S(E.prototype),s(E.prototype,c,(function(){return this})),t.AsyncIterator=E,t.async=function(e,r,n,a,i){void 0===i&&(i=Promise);var o=new E(u(e,r,n,a),i);return t.isGeneratorFunction(r)?o:o.next().then((function(e){return e.done?e.value:o.next()}))},S(k),s(k,l,"Generator"),s(k,o,(function(){return this})),s(k,"toString",(function(){return"[object Generator]"})),t.keys=function(e){var t=Object(e),r=[];for(var n in t)r.push(n);return r.reverse(),function e(){for(;r.length;){var n=r.pop();if(n in t)return e.value=n,e.done=!1,e}return e.done=!0,e}},t.values=C,O.prototype={constructor:O,reset:function(t){if(this.prev=0,this.next=0,this.sent=this._sent=e,this.done=!1,this.delegate=null,this.method="next",this.arg=e,this.tryEntries.forEach(q),!t)for(var r in this)"t"===r.charAt(0)&&n.call(this,r)&&!isNaN(+r.slice(1))&&(this[r]=e)},stop:function(){this.done=!0;var e=this.tryEntries[0].completion;if("throw"===e.type)throw e.arg;return this.rval},dispatchException:function(t){if(this.done)throw t;var r=this;function a(n,a){return c.type="throw",c.arg=t,r.next=n,a&&(r.method="next",r.arg=e),!!a}for(var i=this.tryEntries.length-1;i>=0;--i){var o=this.tryEntries[i],c=o.completion;if("root"===o.tryLoc)return a("end");if(o.tryLoc<=this.prev){var l=n.call(o,"catchLoc"),s=n.call(o,"finallyLoc");if(l&&s){if(this.prev<o.catchLoc)return a(o.catchLoc,!0);if(this.prev<o.finallyLoc)return a(o.finallyLoc)}else if(l){if(this.prev<o.catchLoc)return a(o.catchLoc,!0)}else{if(!s)throw Error("try statement without catch or finally");if(this.prev<o.finallyLoc)return a(o.finallyLoc)}}}},abrupt:function(e,t){for(var r=this.tryEntries.length-1;r>=0;--r){var a=this.tryEntries[r];if(a.tryLoc<=this.prev&&n.call(a,"finallyLoc")&&this.prev<a.finallyLoc){var i=a;break}}i&&("break"===e||"continue"===e)&&i.tryLoc<=t&&t<=i.finallyLoc&&(i=null);var o=i?i.completion:{};return o.type=e,o.arg=t,i?(this.method="next",this.next=i.finallyLoc,v):this.complete(o)},complete:function(e,t){if("throw"===e.type)throw e.arg;return"break"===e.type||"continue"===e.type?this.next=e.arg:"return"===e.type?(this.rval=this.arg=e.arg,this.method="return",this.next="end"):"normal"===e.type&&t&&(this.next=t),v},finish:function(e){for(var t=this.tryEntries.length-1;t>=0;--t){var r=this.tryEntries[t];if(r.finallyLoc===e)return this.complete(r.completion,r.afterLoc),q(r),v}},catch:function(e){for(var t=this.tryEntries.length-1;t>=0;--t){var r=this.tryEntries[t];if(r.tryLoc===e){var n=r.completion;if("throw"===n.type){var a=n.arg;q(r)}return a}}throw Error("illegal catch attempt")},delegateYield:function(t,r,n){return this.delegate={iterator:C(t),resultName:r,nextLoc:n},"next"===this.method&&(this.arg=e),v}},t}function z(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function F(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?z(Object(r),!0).forEach((function(t){B(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):z(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function B(e,t,r){return(t=function(e){var t=function(e){if("object"!=N(e)||!e)return e;var t=e[Symbol.toPrimitive];if(void 0!==t){var r=t.call(e,"string");if("object"!=N(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==N(t)?t:t+""}(t))in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function U(e,t,r,n,a,i,o){try{var c=e[i](o),l=c.value}catch(e){return void r(e)}c.done?t(l):Promise.resolve(l).then(n,a)}function H(e){return function(){var t=this,r=arguments;return new Promise((function(n,a){var i=e.apply(t,r);function o(e){U(i,n,a,o,c,"next",e)}function c(e){U(i,n,a,o,c,"throw",e)}o(void 0)}))}}function W(e,t){return Y.apply(this,arguments)}function Y(){return(Y=H(G().mark((function e(t,r){var n;return G().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.prev=0,e.next=3,chrome.runtime.sendMessage({action:"captureScreenshot",timestamp:t,uuid:r});case 3:if((n=e.sent).success){e.next=6;break}throw new Error(n.message||"Screenshot capture failed");case 6:window.postMessage({type:"SCREENSHOT_COMPLETE",timestamp:t,success:!0},"*"),e.next=13;break;case 9:e.prev=9,e.t0=e.catch(0),console.error("Error capturing screenshot in content script:",e.t0),window.postMessage({type:"SCREENSHOT_COMPLETE",timestamp:t,success:!1,error:e.t0.message},"*");case 13:case"end":return e.stop()}}),e,null,[[0,9]])})))).apply(this,arguments)}window.addEventListener("message",function(){var e=H(G().mark((function e(t){var r,n,a,i;return G().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(t.source===window){e.next=2;break}return e.abrupt("return");case 2:if(!t.data.type||"GET_USER_ID"!==t.data.type){e.next=8;break}return e.next=5,chrome.storage.local.get("userId");case 5:r=e.sent,n=r.userId,window.postMessage({type:"GET_USER_ID_RESPONSE",userId:n},"*");case 8:if(!t.data.type||"CAPTURE_SCREENSHOT"!==t.data.type){e.next=11;break}return e.next=11,W(t.data.timestamp,t.data.uuid);case 11:if(!t.data.type||"SAVE_INTERACTION_DATA"!==t.data.type){e.next=26;break}return e.prev=12,a=F({},t.data.data),e.next=16,chrome.runtime.sendMessage({action:"saveData",data:a});case 16:if((i=e.sent).success){e.next=19;break}throw new Error(i.message||"interaction capture failed");case 19:window.postMessage({type:"INTERACTION_COMPLETE",timestamp:t.data.data.timestamp,success:!0},"*"),e.next=26;break;case 22:e.prev=22,e.t0=e.catch(12),console.error("Error saving interaction data:",e.t0),window.postMessage({type:"INTERACTION_COMPLETE",success:!1,error:e.t0.message,timestamp:t.data.data.timestamp},"*");case 26:case"end":return e.stop()}}),e,null,[[12,22]])})));return function(t){return e.apply(this,arguments)}}());(function(){return T.apply(this,arguments)})(window.location.href).then((function(e){console.log("content script, shouldExclude",e),e||function(){function e(e,r,n,a,i){return t.apply(this,arguments)}function t(){return(t=H(G().mark((function e(t,r,n,a,i){var o,c,l,s,u;return G().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.prev=0,o=L(n,a),c=q(),l=A(),s=E(),u={uuid:a,eventType:t,timestamp:n,htmlSnapshotId:o,pageMeta:s||"",htmlContent:l.documentElement.outerHTML,simplifiedHTML:c},"scroll"===t&&(u.scrollDistance=i,u.target=r),"input"===t&&(u["input-values"]=(null==r?void 0:r.value)||"",u["input-id"]=(null==r?void 0:r.id)||"",u["data-element-meta-name"]=r.getAttribute("data-element-meta-name")||"",u["data-element-meta-data"]=r.getAttribute("data-element-meta-data")||""),e.next=10,chrome.runtime.sendMessage({action:"saveData",data:u});case 10:e.next=15;break;case 12:e.prev=12,e.t0=e.catch(0),console.error("Error during ".concat(t," event handling:"),e.t0);case 15:case"end":return e.stop()}}),e,null,[[0,12]])})))).apply(this,arguments)}document.addEventListener("DOMContentLoaded",(function(){console.log("DOMContentLoaded event triggered"),q()}));var r,n=!1,a=window.scrollY||document.documentElement.scrollTop,i=0;function o(e,t){return c.apply(this,arguments)}function c(){return c=H(G().mark((function e(t,r){return G().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:try{console.log("First scroll event"),W(r,t),q()}catch(e){console.error("Error during first scroll handling:",e)}case 1:case"end":return e.stop()}}),e)}))),c.apply(this,arguments)}function l(e,t){return s.apply(this,arguments)}function s(){return s=H(G().mark((function t(r,o){var c;return G().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:if(t.prev=0,console.log("scroll stop uuid",r),c=window.scrollY||document.documentElement.scrollTop,0===(i+=c-a)){t.next=9;break}return t.next=7,e("scroll",null,o,r,i);case 7:i=0,a=c;case 9:n=!1,t.next=15;break;case 12:t.prev=12,t.t0=t.catch(0),console.error("Error during scroll stop handling:",t.t0);case 15:case"end":return t.stop()}}),t,null,[[0,12]])}))),s.apply(this,arguments)}var u="",d="";document.addEventListener("scroll",function(){var e=H(G().mark((function e(t){return G().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(console.log("scroll event"),!document.getElementById("reason-modal")){e.next=3;break}return e.abrupt("return");case 3:if(t.target===window||t.target===document||t.target===document.documentElement){e.next=6;break}return console.log("Scroll event ignored from a nested scrollable container"),e.abrupt("return");case 6:if(n){e.next=13;break}return n=!0,a=window.scrollY||document.documentElement.scrollTop,u=M(),d=(new Date).toISOString(),e.next=13,o(u,d);case 13:window.clearTimeout(r),r=window.setTimeout((function(){return l(u,d)}),300);case 15:case"end":return e.stop()}}),e)})));return function(t){return e.apply(this,arguments)}}()),document.addEventListener("DOMContentLoaded",(function(){document.querySelectorAll('input[id="placeOrder"], input[id="turbo-checkout-pyo-button"]');var e=document.querySelector('input[id="buy-now-button"]'),t=document.querySelector('button[id="rcx-subscribe-submit-button-announce"]'),r=document.querySelector('input[name="proceedToRetailCheckout"]');[e,t].forEach((function(e){e&&e.addEventListener("click",H(G().mark((function t(){var r,n,a,i;return G().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return t.prev=0,i={title:(null===(r=document.querySelector("#title"))||void 0===r||null===(r=r.innerText)||void 0===r?void 0:r.trim())||"",price:(null===(n=document.querySelector("span.a-price.aok-align-center.reinventPricePriceToPayMargin.priceToPay"))||void 0===n||null===(n=n.innerText)||void 0===n?void 0:n.trim())||"",asin:(null===(a=document.querySelector("input#ASIN"))||void 0===a?void 0:a.value)||"",options:{}},Array.from(document.querySelectorAll("#twister div.a-row:has(label.a-form-label):has(span.selection)")).forEach((function(e){var t,r,n=(null===(t=e.querySelector("label.a-form-label"))||void 0===t||null===(t=t.innerText)||void 0===t?void 0:t.replace(": ",""))||"",a=(null===(r=e.querySelector("span.selection"))||void 0===r?void 0:r.innerText)||"";n&&a&&(i.options[n]=a)})),console.log("".concat(e.id," clicked - Product Info:"),i),t.next=7,chrome.runtime.sendMessage({action:"saveOrder",data:{timestamp:(new Date).toISOString(),name:i.title,price:parseFloat(i.price.replace(/[^0-9.]/g,"")),asin:i.asin,options:i.options}});case 7:t.next=12;break;case 9:t.prev=9,t.t0=t.catch(0),console.error("Error capturing ".concat(e.id," product info:"),t.t0);case 12:case"end":return t.stop()}}),t,null,[[0,9]])}))))})),r&&r.addEventListener("click",function(){var e=H(G().mark((function e(t){var r,n,a,i,o;return G().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:e.prev=0,r=[],n=Array.from(document.querySelectorAll('[id^="sc-active-"]')).filter((function(e){return"sc-active-cart"!==e.id})),a=D(n),e.prev=4,o=G().mark((function e(){var t,n,a,o,c,l,s,u,d,p,m,f,h;return G().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:t=i.value,(n=t.querySelector('input[type="checkbox"]'))&&n.checked&&(a=t.querySelector(".sc-item-product-title-cont .sc-product-link"))&&(s=a.querySelector(".a-truncate-full"),u=(null==s||null===(o=s.textContent)||void 0===o?void 0:o.trim())||"",d=a.getAttribute("href")||"",p=(null===(c=d.match(/product\/([A-Z0-9]{10})/))||void 0===c?void 0:c[1])||"",m=t.querySelector(".sc-item-price-block .a-offscreen"),f=m?parseFloat((null===(l=m.textContent)||void 0===l?void 0:l.replace(/[^0-9.]/g,""))||"0"):0,h={},t.querySelectorAll(".sc-product-variation").forEach((function(e){var t,r,n=(null===(t=e.querySelector(".a-text-bold"))||void 0===t||null===(t=t.textContent)||void 0===t?void 0:t.trim().replace(":",""))||"",a=(null===(r=e.querySelector(".a-size-small:not(.a-text-bold)"))||void 0===r||null===(r=r.textContent)||void 0===r?void 0:r.trim())||"";n&&a&&(h[n]=a)})),r.push({timestamp:(new Date).toISOString(),name:u,asin:p,price:f,options:h}));case 3:case"end":return e.stop()}}),e)})),a.s();case 7:if((i=a.n()).done){e.next=11;break}return e.delegateYield(o(),"t0",9);case 9:e.next=7;break;case 11:e.next=16;break;case 13:e.prev=13,e.t1=e.catch(4),a.e(e.t1);case 16:return e.prev=16,a.f(),e.finish(16);case 19:if(!(r.length>0)){e.next=22;break}return e.next=22,chrome.runtime.sendMessage({action:"saveOrder",data:r});case 22:e.next=27;break;case 24:e.prev=24,e.t2=e.catch(0),console.error("Error capturing selected cart items:",e.t2);case 27:case"end":return e.stop()}}),e,null,[[0,24],[4,13,16,19]])})));return function(t){return e.apply(this,arguments)}}())})),chrome.runtime.onMessage.addListener((function(e,t,r){if(console.log("message",e),"getHTML"===e.action){var n=q();r({html:A().documentElement.outerHTML,pageMeta:E(),simplifiedHTML:n})}if("show_popup"===e.action)return console.log("show_popup",e),document.getElementById("reason-modal")?void r({success:!1,message:"popup already exists"}):(function(e,t){var r='\n        <div id="reason-modal" style="\n            position: fixed;\n            top: 0;\n            left: 0;\n            width: 100%;\n            height: 100%;\n            background: rgba(0, 0, 0, 0.5);\n            display: flex;\n            justify-content: center;\n            align-items: center;\n            z-index: 10000;\n        ">\n            <div style="\n                background: white;\n                padding: 20px;\n                border-radius: 8px;\n                width: 400px;\n            ">\n                <h3>'.concat(e,'</h3>\n                <textarea id="reason-input" style="\n                    width: 100%;\n                    height: 100px;\n                    margin: 10px 0;\n                "></textarea>\n                <div style="\n                    text-align: right;\n                    display: flex;\n                    justify-content: flex-end;\n                    gap: 10px;\n                ">\n                    <button id="reason-skip">Skip</button>\n                    <button id="reason-submit">Submit</button>\n                </div>\n            </div>\n        </div>\n    '),n=document.createElement("div");n.innerHTML=r,document.querySelector(".attach-desktop-sideSheet:not(.aok-hidden)")?document.querySelector(".attach-desktop-sideSheet:not(.aok-hidden)").appendChild(n):document.body.appendChild(n),document.getElementById("reason-submit").addEventListener("click",(function(){var e=document.getElementById("reason-input");console.log("submitBtn clicked");var r=e.value;n.remove(),t({input:r})})),document.getElementById("reason-skip").addEventListener("click",(function(){document.getElementById("reason-input"),n.remove(),t({input:null})}))}(e.question,r),!0)}))}()}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
